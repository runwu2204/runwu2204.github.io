<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>runwu2204</title>
  
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2024-03-15T17:34:53.000Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>runwu2204</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>hook</title>
    <link href="http://example.com/2024/03/16/Re/%E5%88%86%E6%9E%90%E5%B7%A5%E5%85%B7/frida%E6%A1%86%E6%9E%B6/hook/"/>
    <id>http://example.com/2024/03/16/Re/%E5%88%86%E6%9E%90%E5%B7%A5%E5%85%B7/frida%E6%A1%86%E6%9E%B6/hook/</id>
    <published>2024-03-15T16:16:49.000Z</published>
    <updated>2024-03-15T17:34:53.000Z</updated>
    
    <content type="html"><![CDATA[<p>frida通过js脚本实现功能（命令行类似于ipython</p><p>有多种启动方式</p><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">frida -U ps-name <span class="comment">#可通过frida-ps 获取</span></span><br><span class="line">frida -UF <span class="comment">#运行前台应用,wsa运行会有问题</span></span><br><span class="line">frida -l ps-name js文件 <span class="comment">#调用对应js文件</span></span><br><span class="line">frida -UF -l js文件 <span class="comment">#调用js并hook前台activity</span></span><br></pre></td></tr></table></figure></div><h2 id="hook-native层函数"><a href="#hook-native层函数" class="headerlink" title="hook native层函数"></a>hook native层函数</h2><div class="highlight-container" data-rel="Js"><figure class="iseeu highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">func_addr = <span class="title class_">Module</span>.<span class="title function_">findExportByName</span>(<span class="string">&quot;libmidand.so&quot;</span>, <span class="string">&quot;_Z10murmur3_32PKcjj&quot;</span>);<span class="comment">//查找对应so某函数位置</span></span><br><span class="line"><span class="title class_">Interceptor</span>.<span class="title function_">attach</span>(func_addr,&#123; <span class="comment">// 将拦截器附加到 func_addr 所指向的函数上</span></span><br><span class="line">    <span class="attr">onEnter</span>: <span class="keyword">function</span>(<span class="params">args</span>) <span class="comment">//函数调用前运行，可用于获取参数</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">hexdump</span>(args[<span class="number">0</span>]))</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">onLeave</span>: <span class="keyword">function</span>(<span class="params">args</span>)&#123;<span class="comment">//函数调用后运行，可用于获取返回值</span></span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;enter murmur3_32 retvalue-&gt;\n&quot;</span> + <span class="title function_">hexdump</span>(args));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></div><h2 id="hook-java层"><a href="#hook-java层" class="headerlink" title="hook java层"></a>hook java层</h2><h2 id="exp"><a href="#exp" class="headerlink" title="exp:"></a>exp:</h2><div class="highlight-container" data-rel="Js"><figure class="iseeu highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> func_addr = <span class="title class_">Module</span>.<span class="title function_">findExportByName</span>(<span class="string">&quot;libmidand.so&quot;</span>, <span class="string">&quot;_Z10murmur3_32PKcjj&quot;</span>); <span class="comment">// 查找名为 &quot;libmidand.so&quot; 的库中导出函数名为 &quot;_Z10murmur3_32PKcjj&quot; 的函数，并将函数地址赋值给 func_addr 变量</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;func addr is ---&quot;</span> + func_addr) <span class="comment">// 打印找到的函数的地址</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">hookso</span>(<span class="params"></span>)&#123;</span><br><span class="line"><span class="title class_">Interceptor</span>.<span class="title function_">attach</span>(func_addr,&#123; <span class="comment">// 将拦截器附加到 func_addr 所指向的函数上</span></span><br><span class="line">    <span class="attr">onEnter</span>: <span class="keyword">function</span>(<span class="params">args</span>) </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">hexdump</span>(args[<span class="number">0</span>]))</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="comment">// 拦截器回调函数，在被拦截函数返回之后执行</span></span><br><span class="line">    <span class="attr">onLeave</span>: <span class="keyword">function</span>(<span class="params">args</span>)&#123;</span><br><span class="line">        <span class="comment">// 打印被拦截函数的返回值的十六进制表示</span></span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;enter murmur3_32 retvalue-&gt;\n&quot;</span> + <span class="title function_">hexdump</span>(args));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">bytes2hexstr_2</span>(<span class="params">arrBytes</span>)</span><br><span class="line">&#123;</span><br><span class="line">   <span class="keyword">var</span> str_hex = <span class="title class_">JSON</span>.<span class="title function_">stringify</span>(arrBytes);</span><br><span class="line">   <span class="keyword">return</span> str_hex;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">hookjava</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="title class_">Java</span>.<span class="title function_">perform</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">var</span> tmp = <span class="title class_">Java</span>.<span class="title function_">use</span>(<span class="string">&quot;com.moible.midand.MainActivity&quot;</span>);</span><br><span class="line">        tmp.<span class="property">Java_NativeUtils_readResourceFileBytes</span>.<span class="property">implementation</span> = <span class="keyword">function</span> (<span class="params">arg1, arg2</span>) &#123;</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">bytes2hexstr_2</span>(arg2));</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;;</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">char_set</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="title class_">Java</span>.<span class="title function_">choose</span>(<span class="string">&quot;java.nio.charset.Charset&quot;</span>,&#123;</span><br><span class="line">        <span class="attr">onMatch</span>: <span class="keyword">function</span>(<span class="params">tmp</span>)&#123;</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">Charset</span>.<span class="title function_">defaultCharset</span>())</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;frida通过js脚本实现功能（命令行类似于ipython&lt;/p&gt;
&lt;p&gt;有多种启动方式&lt;/p&gt;
&lt;div class=&quot;highlight-container&quot; data-rel=&quot;Bash&quot;&gt;&lt;figure class=&quot;iseeu highlight bash&quot;&gt;&lt;t</summary>
      
    
    
    
    <category term="Re" scheme="http://example.com/categories/Re/"/>
    
    <category term="分析工具" scheme="http://example.com/categories/Re/%E5%88%86%E6%9E%90%E5%B7%A5%E5%85%B7/"/>
    
    <category term="frida框架" scheme="http://example.com/categories/Re/%E5%88%86%E6%9E%90%E5%B7%A5%E5%85%B7/frida%E6%A1%86%E6%9E%B6/"/>
    
    
  </entry>
  
  <entry>
    <title>ChipWhisperer</title>
    <link href="http://example.com/2024/03/12/Re/IOT/%E4%BE%A7%E4%BF%A1%E9%81%93/ChipWhisperer/"/>
    <id>http://example.com/2024/03/12/Re/IOT/%E4%BE%A7%E4%BF%A1%E9%81%93/ChipWhisperer/</id>
    <published>2024-03-12T15:50:52.000Z</published>
    <updated>2024-03-12T16:04:11.000Z</updated>
    
    <content type="html"><![CDATA[<p>测信道攻击工具</p><p><a class="link"   href="https://chipwhisperer.readthedocs.io/en/latest/index.html" >ChipWhisperer — ChipWhisperer 5.7.0 documentation <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;测信道攻击工具&lt;/p&gt;
&lt;p&gt;&lt;a class=&quot;link&quot;   href=&quot;https://chipwhisperer.readthedocs.io/en/latest/index.html&quot; &gt;ChipWhisperer — ChipWhisperer 5.7.0 do</summary>
      
    
    
    
    <category term="Re" scheme="http://example.com/categories/Re/"/>
    
    <category term="IOT" scheme="http://example.com/categories/Re/IOT/"/>
    
    <category term="侧信道" scheme="http://example.com/categories/Re/IOT/%E4%BE%A7%E4%BF%A1%E9%81%93/"/>
    
    
  </entry>
  
  <entry>
    <title>bindiff</title>
    <link href="http://example.com/2024/03/12/Re/%E5%88%86%E6%9E%90%E5%B7%A5%E5%85%B7/ida/plugins/bindiff/"/>
    <id>http://example.com/2024/03/12/Re/%E5%88%86%E6%9E%90%E5%B7%A5%E5%85%B7/ida/plugins/bindiff/</id>
    <published>2024-03-12T09:28:09.000Z</published>
    <updated>2024-03-12T09:29:04.000Z</updated>
    
    <content type="html"><![CDATA[<p>可用于导入函数名</p><p>比如某程序静态编译了某glibc库，可通过比较对应的glibc来导入对应的函数名 方便进行程序分析</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;可用于导入函数名&lt;/p&gt;
&lt;p&gt;比如某程序静态编译了某glibc库，可通过比较对应的glibc来导入对应的函数名 方便进行程序分析&lt;/p&gt;
</summary>
      
    
    
    
    <category term="Re" scheme="http://example.com/categories/Re/"/>
    
    <category term="分析工具" scheme="http://example.com/categories/Re/%E5%88%86%E6%9E%90%E5%B7%A5%E5%85%B7/"/>
    
    <category term="ida" scheme="http://example.com/categories/Re/%E5%88%86%E6%9E%90%E5%B7%A5%E5%85%B7/ida/"/>
    
    <category term="plugins" scheme="http://example.com/categories/Re/%E5%88%86%E6%9E%90%E5%B7%A5%E5%85%B7/ida/plugins/"/>
    
    
  </entry>
  
  <entry>
    <title>label结构</title>
    <link href="http://example.com/2024/03/05/%E5%BC%80%E5%8F%91/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/label%E7%BB%93%E6%9E%84/"/>
    <id>http://example.com/2024/03/05/%E5%BC%80%E5%8F%91/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/label%E7%BB%93%E6%9E%84/</id>
    <published>2024-03-05T07:49:04.000Z</published>
    <updated>2024-03-05T09:54:32.000Z</updated>
    
    <content type="html"><![CDATA[<p><a class="link"   href="https://app.roboflow.com/" >手动标签生成数据集 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/runwu2204/Blog_imgs/202403051736569.png"                      alt="image-20240305173618382"                ></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;a class=&quot;link&quot;   href=&quot;https://app.roboflow.com/&quot; &gt;手动标签生成数据集 &lt;i class=&quot;fa-regular fa-arrow-up-right-from-square fa-sm&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;</summary>
      
    
    
    
    <category term="开发" scheme="http://example.com/categories/%E5%BC%80%E5%8F%91/"/>
    
    <category term="深度学习" scheme="http://example.com/categories/%E5%BC%80%E5%8F%91/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/"/>
    
    
  </entry>
  
  <entry>
    <title>基本使用</title>
    <link href="http://example.com/2024/03/01/%E5%BC%80%E5%8F%91/IOT/proteus/%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8/"/>
    <id>http://example.com/2024/03/01/%E5%BC%80%E5%8F%91/IOT/proteus/%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8/</id>
    <published>2024-03-01T13:10:26.000Z</published>
    <updated>2024-03-01T13:10:26.000Z</updated>
    
    
    
    
    <category term="开发" scheme="http://example.com/categories/%E5%BC%80%E5%8F%91/"/>
    
    <category term="IOT" scheme="http://example.com/categories/%E5%BC%80%E5%8F%91/IOT/"/>
    
    <category term="proteus" scheme="http://example.com/categories/%E5%BC%80%E5%8F%91/IOT/proteus/"/>
    
    
  </entry>
  
  <entry>
    <title>符号链接-任意文件访问</title>
    <link href="http://example.com/2024/02/27/Web/%E7%AC%A6%E5%8F%B7%E9%93%BE%E6%8E%A5-%E4%BB%BB%E6%84%8F%E6%96%87%E4%BB%B6%E8%AE%BF%E9%97%AE/"/>
    <id>http://example.com/2024/02/27/Web/%E7%AC%A6%E5%8F%B7%E9%93%BE%E6%8E%A5-%E4%BB%BB%E6%84%8F%E6%96%87%E4%BB%B6%E8%AE%BF%E9%97%AE/</id>
    <published>2024-02-27T13:37:14.000Z</published>
    <updated>2024-02-27T13:46:33.000Z</updated>
    
    <content type="html"><![CDATA[<p>zip支持带符号链接压缩，可以将符号链接移植到其他系统上达成任意文件读取</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;zip支持带符号链接压缩，可以将符号链接移植到其他系统上达成任意文件读取&lt;/p&gt;
</summary>
      
    
    
    
    <category term="Web" scheme="http://example.com/categories/Web/"/>
    
    
  </entry>
  
  <entry>
    <title>nodejs原型链污染</title>
    <link href="http://example.com/2024/02/26/Web/nodejs/nodejs%E5%8E%9F%E5%9E%8B%E9%93%BE%E6%B1%A1%E6%9F%93/"/>
    <id>http://example.com/2024/02/26/Web/nodejs/nodejs%E5%8E%9F%E5%9E%8B%E9%93%BE%E6%B1%A1%E6%9F%93/</id>
    <published>2024-02-26T15:56:38.000Z</published>
    <updated>2024-02-27T10:15:18.000Z</updated>
    
    <content type="html"><![CDATA[<p>参考 <a class="link"   href="https://blog.csdn.net/qq_51586883/article/details/119867720" >js原型链污染(超详细)-CSDN博客 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p><p>原型链类似于父类</p><p>由相同类形成的对象 其共用同一种原型 所以可以通过更改其中一个对象的原型达成修改所有对象的目的</p><p>例如</p><div class="highlight-container" data-rel="Js"><figure class="iseeu highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">in</span>: tmp=&#123;<span class="string">&#x27;a&#x27;</span>:<span class="number">1</span>&#125;</span><br><span class="line"><span class="attr">out</span>: &#123;<span class="string">&#x27;a&#x27;</span>:<span class="number">1</span>&#125;</span><br><span class="line"><span class="attr">in</span>: tmp.<span class="property">a</span>.<span class="property">constructor</span>.<span class="property"><span class="keyword">prototype</span></span>==tmp.<span class="property">__proto__</span> <span class="comment">//此处是tmp.a(number)的原型跟tmp(object)原型不对应</span></span><br><span class="line"><span class="attr">out</span>: <span class="literal">false</span></span><br><span class="line"><span class="attr">in</span>: tmp.<span class="property">b</span>=&#123;<span class="string">&#x27;c&#x27;</span>:<span class="number">2</span>&#125;</span><br><span class="line"><span class="attr">out</span>: &#123;<span class="string">&#x27;c&#x27;</span>:<span class="number">2</span>&#125;</span><br><span class="line"><span class="attr">in</span>: tmp.<span class="property">b</span>.<span class="property">constructor</span>.<span class="property"><span class="keyword">prototype</span></span>==tmp.<span class="property">__proto__</span> <span class="comment">//此处是tmp.b(object)跟tmp(object)类型一样,所以共用原型</span></span><br><span class="line"><span class="attr">out</span>: <span class="literal">true</span></span><br></pre></td></tr></table></figure></div><p>node js中万物皆对象</p><p>当该对象中没有这个属性时会从其原型寻找，所以可以通过修改其原型来达成修改该对象属性的目的</p><p>此处Object指任意对象 class指任意类</p><p>可以有下列办法</p><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Object.constructor.prototype</span><br><span class="line">Object.constructor.__proto__</span><br><span class="line">class.prototype</span><br></pre></td></tr></table></figure></div><p>待完成</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;参考 &lt;a class=&quot;link&quot;   href=&quot;https://blog.csdn.net/qq_51586883/article/details/119867720&quot; &gt;js原型链污染(超详细)-CSDN博客 &lt;i class=&quot;fa-regular fa-arro</summary>
      
    
    
    
    <category term="Web" scheme="http://example.com/categories/Web/"/>
    
    <category term="nodejs" scheme="http://example.com/categories/Web/nodejs/"/>
    
    
  </entry>
  
  <entry>
    <title>Franklin-Reiter_相关信息攻击</title>
    <link href="http://example.com/2024/02/24/Crypto/RSA/Franklin-Reiter_%E7%9B%B8%E5%85%B3%E4%BF%A1%E6%81%AF%E6%94%BB%E5%87%BB/"/>
    <id>http://example.com/2024/02/24/Crypto/RSA/Franklin-Reiter_%E7%9B%B8%E5%85%B3%E4%BF%A1%E6%81%AF%E6%94%BB%E5%87%BB/</id>
    <published>2024-02-24T10:48:42.000Z</published>
    <updated>2024-02-24T10:48:42.000Z</updated>
    
    
    
    
    <category term="Crypto" scheme="http://example.com/categories/Crypto/"/>
    
    <category term="RSA" scheme="http://example.com/categories/Crypto/RSA/"/>
    
    
  </entry>
  
  <entry>
    <title>特定id私钥生成脚本</title>
    <link href="http://example.com/2024/02/21/%E6%99%BA%E8%83%BD%E5%90%88%E7%BA%A6/%E7%89%B9%E5%AE%9Aid%E7%A7%81%E9%92%A5%E7%94%9F%E6%88%90%E8%84%9A%E6%9C%AC/"/>
    <id>http://example.com/2024/02/21/%E6%99%BA%E8%83%BD%E5%90%88%E7%BA%A6/%E7%89%B9%E5%AE%9Aid%E7%A7%81%E9%92%A5%E7%94%9F%E6%88%90%E8%84%9A%E6%9C%AC/</id>
    <published>2024-02-21T08:30:48.000Z</published>
    <updated>2024-02-21T08:32:19.000Z</updated>
    
    <content type="html"><![CDATA[<p>所需库 web3</p><div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> eth_account</span><br><span class="line"><span class="keyword">import</span> secrets</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">check_address_suffix</span>(<span class="params">address, suffix</span>):</span><br><span class="line">    <span class="keyword">return</span> address[-<span class="number">4</span>:].lower() == suffix.lower()</span><br><span class="line"></span><br><span class="line">found = <span class="literal">False</span></span><br><span class="line"><span class="keyword">while</span> <span class="keyword">not</span> found:</span><br><span class="line">    <span class="comment"># 使用安全的方式生成32字节的私钥</span></span><br><span class="line">    private_key_bytes = secrets.token_bytes(<span class="number">32</span>)</span><br><span class="line">    private_key_int = <span class="built_in">int</span>.from_bytes(private_key_bytes, <span class="string">&#x27;big&#x27;</span>)</span><br><span class="line">    private_key_hex = <span class="built_in">hex</span>(private_key_int)[<span class="number">2</span>:].zfill(<span class="number">64</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 创建账户对象并获取地址</span></span><br><span class="line">    account = eth_account.Account.privateKeyToAccount(private_key_bytes)</span><br><span class="line">    address = account.address.lower()</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 检查地址后四位是否为0x2024</span></span><br><span class="line">    <span class="keyword">if</span> check_address_suffix(address, <span class="string">&quot;2024&quot;</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;找到匹配地址: <span class="subst">&#123;address&#125;</span>，对应的私钥是: <span class="subst">&#123;private_key_hex&#125;</span>&quot;</span>)</span><br><span class="line">        found = <span class="literal">True</span></span><br></pre></td></tr></table></figure></div>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;所需库 web3&lt;/p&gt;
&lt;div class=&quot;highlight-container&quot; data-rel=&quot;Python&quot;&gt;&lt;figure class=&quot;iseeu highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre</summary>
      
    
    
    
    <category term="智能合约" scheme="http://example.com/categories/%E6%99%BA%E8%83%BD%E5%90%88%E7%BA%A6/"/>
    
    
  </entry>
  
  <entry>
    <title>CS流量</title>
    <link href="http://example.com/2024/02/20/Misc/%E6%B5%81%E9%87%8F%E5%88%86%E6%9E%90/CS%E6%B5%81%E9%87%8F/"/>
    <id>http://example.com/2024/02/20/Misc/%E6%B5%81%E9%87%8F%E5%88%86%E6%9E%90/CS%E6%B5%81%E9%87%8F/</id>
    <published>2024-02-20T08:10:40.000Z</published>
    <updated>2024-02-20T08:12:06.000Z</updated>
    
    <content type="html"><![CDATA[<p>参考:<a class="link"   href="https://fdlucifer.github.io/2022/01/05/decrypt-cs-traffic/" >fdlucifer.github.io <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;参考:&lt;a class=&quot;link&quot;   href=&quot;https://fdlucifer.github.io/2022/01/05/decrypt-cs-traffic/&quot; &gt;fdlucifer.github.io &lt;i class=&quot;fa-regular fa-arrow</summary>
      
    
    
    
    <category term="Misc" scheme="http://example.com/categories/Misc/"/>
    
    <category term="流量分析" scheme="http://example.com/categories/Misc/%E6%B5%81%E9%87%8F%E5%88%86%E6%9E%90/"/>
    
    
  </entry>
  
  <entry>
    <title>基本形式</title>
    <link href="http://example.com/2024/02/19/Crypto/%E6%A0%BC%E5%AF%86%E7%A0%81/%E5%9F%BA%E6%9C%AC%E5%BD%A2%E5%BC%8F/"/>
    <id>http://example.com/2024/02/19/Crypto/%E6%A0%BC%E5%AF%86%E7%A0%81/%E5%9F%BA%E6%9C%AC%E5%BD%A2%E5%BC%8F/</id>
    <published>2024-02-19T11:00:26.000Z</published>
    <updated>2024-02-19T11:00:26.000Z</updated>
    
    
    
    
    <category term="Crypto" scheme="http://example.com/categories/Crypto/"/>
    
    <category term="格密码" scheme="http://example.com/categories/Crypto/%E6%A0%BC%E5%AF%86%E7%A0%81/"/>
    
    
  </entry>
  
  <entry>
    <title>go_parser</title>
    <link href="http://example.com/2024/01/29/Re/%E5%88%86%E6%9E%90%E5%B7%A5%E5%85%B7/ida/plugins/go_parser/"/>
    <id>http://example.com/2024/01/29/Re/%E5%88%86%E6%9E%90%E5%B7%A5%E5%85%B7/ida/plugins/go_parser/</id>
    <published>2024-01-29T07:42:02.000Z</published>
    <updated>2024-01-29T07:42:09.000Z</updated>
    
    <content type="html"><![CDATA[<p><a class="link"   href="https://github.com/0xjiayu/go_parser" >0xjiayu&#x2F;go_parser：IDAPro 的另一个 Golang 二进制解析器 (github.com) <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;a class=&quot;link&quot;   href=&quot;https://github.com/0xjiayu/go_parser&quot; &gt;0xjiayu&amp;#x2F;go_parser：IDAPro 的另一个 Golang 二进制解析器 (github.com) &lt;i class=&quot;fa</summary>
      
    
    
    
    <category term="Re" scheme="http://example.com/categories/Re/"/>
    
    <category term="分析工具" scheme="http://example.com/categories/Re/%E5%88%86%E6%9E%90%E5%B7%A5%E5%85%B7/"/>
    
    <category term="ida" scheme="http://example.com/categories/Re/%E5%88%86%E6%9E%90%E5%B7%A5%E5%85%B7/ida/"/>
    
    <category term="plugins" scheme="http://example.com/categories/Re/%E5%88%86%E6%9E%90%E5%B7%A5%E5%85%B7/ida/plugins/"/>
    
    
  </entry>
  
  <entry>
    <title>qilingida</title>
    <link href="http://example.com/2024/01/29/Re/%E5%88%86%E6%9E%90%E5%B7%A5%E5%85%B7/ida/plugins/qilingida/"/>
    <id>http://example.com/2024/01/29/Re/%E5%88%86%E6%9E%90%E5%B7%A5%E5%85%B7/ida/plugins/qilingida/</id>
    <published>2024-01-29T07:41:19.000Z</published>
    <updated>2024-01-29T07:42:07.000Z</updated>
    
    <content type="html"><![CDATA[<p>qiling ida内置插件</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;qiling ida内置插件&lt;/p&gt;
</summary>
      
    
    
    
    <category term="Re" scheme="http://example.com/categories/Re/"/>
    
    <category term="分析工具" scheme="http://example.com/categories/Re/%E5%88%86%E6%9E%90%E5%B7%A5%E5%85%B7/"/>
    
    <category term="ida" scheme="http://example.com/categories/Re/%E5%88%86%E6%9E%90%E5%B7%A5%E5%85%B7/ida/"/>
    
    <category term="plugins" scheme="http://example.com/categories/Re/%E5%88%86%E6%9E%90%E5%B7%A5%E5%85%B7/ida/plugins/"/>
    
    
  </entry>
  
  <entry>
    <title>ipyida</title>
    <link href="http://example.com/2024/01/29/Re/%E5%88%86%E6%9E%90%E5%B7%A5%E5%85%B7/ida/plugins/ipyida/"/>
    <id>http://example.com/2024/01/29/Re/%E5%88%86%E6%9E%90%E5%B7%A5%E5%85%B7/ida/plugins/ipyida/</id>
    <published>2024-01-29T07:40:18.000Z</published>
    <updated>2024-01-29T07:41:19.000Z</updated>
    
    <content type="html"><![CDATA[<p>ida内置ipython</p><p><a class="link"   href="https://github.com/eset/ipyida" >eset&#x2F;ipyida: IPython console integration for IDA Pro (github.com) <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;ida内置ipython&lt;/p&gt;
&lt;p&gt;&lt;a class=&quot;link&quot;   href=&quot;https://github.com/eset/ipyida&quot; &gt;eset&amp;#x2F;ipyida: IPython console integration for IDA Pro (g</summary>
      
    
    
    
    <category term="Re" scheme="http://example.com/categories/Re/"/>
    
    <category term="分析工具" scheme="http://example.com/categories/Re/%E5%88%86%E6%9E%90%E5%B7%A5%E5%85%B7/"/>
    
    <category term="ida" scheme="http://example.com/categories/Re/%E5%88%86%E6%9E%90%E5%B7%A5%E5%85%B7/ida/"/>
    
    <category term="plugins" scheme="http://example.com/categories/Re/%E5%88%86%E6%9E%90%E5%B7%A5%E5%85%B7/ida/plugins/"/>
    
    
  </entry>
  
  <entry>
    <title>ponce</title>
    <link href="http://example.com/2024/01/29/Re/%E5%88%86%E6%9E%90%E5%B7%A5%E5%85%B7/ida/plugins/ponce/"/>
    <id>http://example.com/2024/01/29/Re/%E5%88%86%E6%9E%90%E5%B7%A5%E5%85%B7/ida/plugins/ponce/</id>
    <published>2024-01-29T07:39:33.000Z</published>
    <updated>2024-01-29T07:49:24.000Z</updated>
    
    <content type="html"><![CDATA[<p>跟angr类似用于符号执行</p><p><a class="link"   href="https://github.com/illera88/Ponce" >https://github.com/illera88/Ponce <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p><p>虽然relese中只有8.1版本 但是可以通过逆向<code>Ponce.dll</code>和<code>Ponce64.dll</code></p><p>拖入ida后搜索<code>This Ponce plugin</code></p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/runwu2204/Blog_imgs/202401291546716.png"                      alt="image-20240129154636516"                ></p><p>修改其对应的版本即可</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/runwu2204/Blog_imgs/202401291547697.png"                      alt="image-20240129154759548"                ></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;跟angr类似用于符号执行&lt;/p&gt;
&lt;p&gt;&lt;a class=&quot;link&quot;   href=&quot;https://github.com/illera88/Ponce&quot; &gt;https://github.com/illera88/Ponce &lt;i class=&quot;fa-regular f</summary>
      
    
    
    
    <category term="Re" scheme="http://example.com/categories/Re/"/>
    
    <category term="分析工具" scheme="http://example.com/categories/Re/%E5%88%86%E6%9E%90%E5%B7%A5%E5%85%B7/"/>
    
    <category term="ida" scheme="http://example.com/categories/Re/%E5%88%86%E6%9E%90%E5%B7%A5%E5%85%B7/ida/"/>
    
    <category term="plugins" scheme="http://example.com/categories/Re/%E5%88%86%E6%9E%90%E5%B7%A5%E5%85%B7/ida/plugins/"/>
    
    
  </entry>
  
  <entry>
    <title>android manifest</title>
    <link href="http://example.com/2024/01/24/%E5%BC%80%E5%8F%91/%E5%AE%89%E5%8D%93%E5%BC%80%E5%8F%91/android%20manifest/"/>
    <id>http://example.com/2024/01/24/%E5%BC%80%E5%8F%91/%E5%AE%89%E5%8D%93%E5%BC%80%E5%8F%91/android%20manifest/</id>
    <published>2024-01-24T06:21:13.000Z</published>
    <updated>2024-01-25T14:16:44.000Z</updated>
    
    <content type="html"><![CDATA[<p>参考<a class="link"   href="https://developer.android.google.cn/guide/topics/manifest/manifest-intro?hl=zh" >应用清单概览  | Android 开发者  | Android Developers (google.cn) <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p><blockquote><p> example:</p><div class="highlight-container" data-rel="Xml"><figure class="iseeu highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span> <span class="comment">&lt;!--用于表示文本编码和版本--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">manifest</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:tools</span>=<span class="string">&quot;http://schemas.android.com/tools&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">application</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:allowBackup</span>=<span class="string">&quot;true&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:dataExtractionRules</span>=<span class="string">&quot;@xml/data_extraction_rules&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:fullBackupContent</span>=<span class="string">&quot;@xml/backup_rules&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:icon</span>=<span class="string">&quot;@mipmap/ic_launcher&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:label</span>=<span class="string">&quot;@string/app_name&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:roundIcon</span>=<span class="string">&quot;@mipmap/ic_launcher_round&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:supportsRtl</span>=<span class="string">&quot;true&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:theme</span>=<span class="string">&quot;@style/Theme.MyApplication&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">tools:targetApi</span>=<span class="string">&quot;31&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">activity</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:name</span>=<span class="string">&quot;.MainActivity&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:exported</span>=<span class="string">&quot;true&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">intent-filter</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">action</span> <span class="attr">android:name</span>=<span class="string">&quot;android.intent.action.MAIN&quot;</span> /&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">category</span> <span class="attr">android:name</span>=<span class="string">&quot;android.intent.category.LAUNCHER&quot;</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">intent-filter</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">activity</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">application</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">manifest</span>&gt;</span></span><br></pre></td></tr></table></figure></div></blockquote><h2 id="第一层"><a href="#第一层" class="headerlink" title="第一层"></a>第一层</h2><p><manifest xmlns:android="http://schemas.android.com/apk/res/android"    xmlns:tools="http://schemas.android.com/tools"></p><p><a class="link"   href="https://developer.android.google.cn/guide/topics/manifest/manifest-element?hl=zh" >&lt;清单&gt;  | Android 开发者  | Android Developers (google.cn) <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p><p><code>AndroidManifest.xml</code> 文件的根元素。它必须包含 <code>&lt;application&gt;</code> 元素并指定 <code>xmlns:android</code> 和 <code>package</code> 属性。</p><h2 id="第二层"><a href="#第二层" class="headerlink" title="第二层"></a>第二层</h2>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;参考&lt;a class=&quot;link&quot;   href=&quot;https://developer.android.google.cn/guide/topics/manifest/manifest-intro?hl=zh&quot; &gt;应用清单概览  | Android 开发者  | Andro</summary>
      
    
    
    
    <category term="开发" scheme="http://example.com/categories/%E5%BC%80%E5%8F%91/"/>
    
    <category term="安卓开发" scheme="http://example.com/categories/%E5%BC%80%E5%8F%91/%E5%AE%89%E5%8D%93%E5%BC%80%E5%8F%91/"/>
    
    
  </entry>
  
  <entry>
    <title>安卓抓包</title>
    <link href="http://example.com/2024/01/21/Misc/%E6%B5%81%E9%87%8F%E5%88%86%E6%9E%90/%E5%AE%89%E5%8D%93%E6%8A%93%E5%8C%85/"/>
    <id>http://example.com/2024/01/21/Misc/%E6%B5%81%E9%87%8F%E5%88%86%E6%9E%90/%E5%AE%89%E5%8D%93%E6%8A%93%E5%8C%85/</id>
    <published>2024-01-20T19:02:29.000Z</published>
    <updated>2024-01-20T19:15:51.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="tcpdump-android"><a href="#tcpdump-android" class="headerlink" title="tcpdump-android"></a>tcpdump-android</h2><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><p>为了防止动态链接库问题，有专门给安卓设计的tcpdump</p><p><a class="link"   href="https://www.androidtcpdump.com/android-tcpdump/downloads" >tcpdump 二进制文件下载（32 位）|安卓 tcpdump (androidtcpdump.com) <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p><p>直接adb push到&#x2F;data&#x2F;local&#x2F;tmp&#x2F;即可，需要调整执行权限</p><h3 id="具体使用"><a href="#具体使用" class="headerlink" title="具体使用"></a>具体使用</h3><p>最好将pcap转存到&#x2F;data&#x2F;local&#x2F;tmp&#x2F;<code>tcpdump -w /data/local/tmp/1.pcap</code></p><p>可以手动用ctrl-c控制tcpdump的启停，也可以通过timeout定时抓取</p><p>例子如下 定时抓包十秒并传出<code>adb shell &quot;su -c timeout 10 tcpdump -w /data/local/tmp/1.pcap&quot; || adb pull /data/local/tmp/1.pcap D:\Desktop </code>       因为前面的会中断返回0所以用或符号保证两者运行</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;tcpdump-android&quot;&gt;&lt;a href=&quot;#tcpdump-android&quot; class=&quot;headerlink&quot; title=&quot;tcpdump-android&quot;&gt;&lt;/a&gt;tcpdump-android&lt;/h2&gt;&lt;h3 id=&quot;安装&quot;&gt;&lt;a href=&quot;</summary>
      
    
    
    
    <category term="Misc" scheme="http://example.com/categories/Misc/"/>
    
    <category term="流量分析" scheme="http://example.com/categories/Misc/%E6%B5%81%E9%87%8F%E5%88%86%E6%9E%90/"/>
    
    
  </entry>
  
  <entry>
    <title>环境配置</title>
    <link href="http://example.com/2024/01/21/Re/%E5%88%86%E6%9E%90%E5%B7%A5%E5%85%B7/frida%E6%A1%86%E6%9E%B6/%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/"/>
    <id>http://example.com/2024/01/21/Re/%E5%88%86%E6%9E%90%E5%B7%A5%E5%85%B7/frida%E6%A1%86%E6%9E%B6/%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/</id>
    <published>2024-01-20T18:26:20.000Z</published>
    <updated>2024-01-20T18:58:54.000Z</updated>
    
    <content type="html"><![CDATA[<p>frida是标准的C&#x2F;S模式，服务端需要安在手机上，客户端需要安在电脑上</p><p><strong>注意，两者版本需一致</strong></p><p><em>可先安装客户端，知道客户端版本再去整服务端</em></p><h2 id="客户端安装"><a href="#客户端安装" class="headerlink" title="客户端安装"></a>客户端安装</h2><h3 id="直接使用pip"><a href="#直接使用pip" class="headerlink" title="直接使用pip"></a>直接使用pip</h3><blockquote><p>在终端内输入<code>pip install frida -i https://pypi.tuna.tsinghua.edu.cn/simple #使用清华源下载会快点，可以手动指定frida的version 可自行搜</code></p><p>无报错后输入<code>pip show frida #显示frida的详情</code>找到frida的version，需要记住这个version</p></blockquote><h2 id="服务端安装"><a href="#服务端安装" class="headerlink" title="服务端安装"></a>服务端安装</h2><p><a class="link"   href="https://github.com/frida/frida/releases/" >Releases · frida&#x2F;frida (github.com) <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p><blockquote><p>找到之前客户端version一致的server</p><p>比如我的frida version是16.1.4</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/runwu2204/Blog_imgs/202401210240627.png"                      alt="image-20240121024040573"                ></p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/runwu2204/Blog_imgs/202401210241008.png"                      alt="image-20240121024119884"                ></p><p>在github中找到16.1.4的assets并下载对应架构的server文件，手机基本上都是64位支持32位的，所以可以下载下面两种，<em>因为我是模拟器所以是x86架构而不是arm架构</em></p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/runwu2204/Blog_imgs/202401210243826.png"                      alt="image-20240121024349729"                ></p><p>xz文件时压缩包文件需要解压后发送给手机</p><p>通过adb发送文件给手机（具体adb连接教程可以在网上搜）</p><p>连接成功后</p><p>进行 <code>adb push </code>操作，将外部文件输入设备内</p><p><code>adb push 需要传输的文件位置  /data/local/tmp </code>       </p><p>&#x2F;data&#x2F;local&#x2F;tmp&#x2F;是不在手机重启保护的范围内的路径，不会因为手机重启而丢失数据，其他地方则不同，每次重启会丢失数据</p></blockquote><h2 id="进行连接"><a href="#进行连接" class="headerlink" title="进行连接"></a>进行连接</h2><p>frida-server传输成功后，在adb shell中启动对应位数的server</p><p>在电脑端命令行运行<code>frida-ps -U</code>#-U指通过USB我的虚拟机可以直接被当成usb设备连接</p><p>如果显示了你当前安装的进程就代表成功了</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;frida是标准的C&amp;#x2F;S模式，服务端需要安在手机上，客户端需要安在电脑上&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;注意，两者版本需一致&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;可先安装客户端，知道客户端版本再去整服务端&lt;/em&gt;&lt;/p&gt;
&lt;h2 id=&quot;客户端安装&quot;&gt;&lt;a </summary>
      
    
    
    
    <category term="Re" scheme="http://example.com/categories/Re/"/>
    
    <category term="分析工具" scheme="http://example.com/categories/Re/%E5%88%86%E6%9E%90%E5%B7%A5%E5%85%B7/"/>
    
    <category term="frida框架" scheme="http://example.com/categories/Re/%E5%88%86%E6%9E%90%E5%B7%A5%E5%85%B7/frida%E6%A1%86%E6%9E%B6/"/>
    
    
  </entry>
  
  <entry>
    <title>ZIP文件明文攻击</title>
    <link href="http://example.com/2024/01/21/Misc/%E6%9D%82%E5%AD%A6/ZIP%E6%96%87%E4%BB%B6%E6%98%8E%E6%96%87%E6%94%BB%E5%87%BB/"/>
    <id>http://example.com/2024/01/21/Misc/%E6%9D%82%E5%AD%A6/ZIP%E6%96%87%E4%BB%B6%E6%98%8E%E6%96%87%E6%94%BB%E5%87%BB/</id>
    <published>2024-01-20T17:55:26.000Z</published>
    <updated>2024-01-20T17:56:04.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="pkcrack"><a href="#pkcrack" class="headerlink" title="pkcrack"></a>pkcrack</h2><h2 id="bkcrack"><a href="#bkcrack" class="headerlink" title="bkcrack"></a>bkcrack</h2><h2 id=""><a href="#" class="headerlink" title=""></a></h2>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;pkcrack&quot;&gt;&lt;a href=&quot;#pkcrack&quot; class=&quot;headerlink&quot; title=&quot;pkcrack&quot;&gt;&lt;/a&gt;pkcrack&lt;/h2&gt;&lt;h2 id=&quot;bkcrack&quot;&gt;&lt;a href=&quot;#bkcrack&quot; class=&quot;headerlink</summary>
      
    
    
    
    <category term="Misc" scheme="http://example.com/categories/Misc/"/>
    
    <category term="杂学" scheme="http://example.com/categories/Misc/%E6%9D%82%E5%AD%A6/"/>
    
    
  </entry>
  
  <entry>
    <title>claripy</title>
    <link href="http://example.com/2024/01/18/Re/%E5%88%86%E6%9E%90%E5%B7%A5%E5%85%B7/angr%E5%88%86%E6%9E%90%E6%A1%86%E6%9E%B6/claripy/"/>
    <id>http://example.com/2024/01/18/Re/%E5%88%86%E6%9E%90%E5%B7%A5%E5%85%B7/angr%E5%88%86%E6%9E%90%E6%A1%86%E6%9E%B6/claripy/</id>
    <published>2024-01-18T12:00:27.000Z</published>
    <updated>2024-01-19T13:01:36.000Z</updated>
    
    <content type="html"><![CDATA[<p>类似于z3用于创建变量求解（可用于argv传参或者 寄存器传参）</p><h2 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h2><blockquote><p>BVS -用于创建位向量符号  </p><p><code>BVS(&#39;变量名&#39;,长度)</code></p><p>BVV -用于创建位向量值(主要用于添加条件)</p><p><code>BVV(bytes数据)</code></p></blockquote><h2 id="设置变量"><a href="#设置变量" class="headerlink" title="设置变量"></a>设置变量</h2><blockquote><p>stdin 标准输入现在似乎不支持添加条件 或者只对应架构下系统添加条件 比如pe文件则需要在windows环境下添加</p><p>寄存器</p><blockquote><p>example:</p><div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">flag=BVS(<span class="string">&#x27;flag&#x27;</span>,<span class="number">8</span>*(flag_length))<span class="comment">#BVS长度单位是bit,创建变量对象</span></span><br><span class="line">state=p.factory.entry_state()<span class="comment">#创建状态对象</span></span><br><span class="line">state.regs.eax=flag<span class="comment">#不会超过eax大小</span></span><br></pre></td></tr></table></figure></div></blockquote><p>内存</p><blockquote><p>example:</p><div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">flag=BVS(<span class="string">&#x27;flag&#x27;</span>,<span class="number">8</span>*(flag_length))<span class="comment">#BVS长度单位是bit,创建变量对象</span></span><br><span class="line">state=p.factory.entry_state()<span class="comment">#创建状态对象</span></span><br><span class="line">state.memory.store(addr,flag)<span class="comment">#在指定地址addr写入flag(长度为8字节)也可以自定义长度</span></span><br></pre></td></tr></table></figure></div></blockquote></blockquote><h2 id="添加条件"><a href="#添加条件" class="headerlink" title="添加条件"></a>添加条件</h2><div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">state.solver.add(条件语句)</span><br></pre></td></tr></table></figure></div><h2 id="解决问题"><a href="#解决问题" class="headerlink" title="解决问题"></a>解决问题</h2><div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">state.solver.<span class="built_in">eval</span>(变量对象)</span><br></pre></td></tr></table></figure></div><p>00_angr_find</p><div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#第一种 直接explore</span></span><br><span class="line"><span class="keyword">from</span> angr <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> claripy <span class="keyword">import</span> *</span><br><span class="line">p=Project(<span class="string">&#x27;./00_angr_find&#x27;</span>)</span><br><span class="line">state=p.factory.entry_state()<span class="comment">#</span></span><br><span class="line">sm=p.factory.simgr(state)</span><br><span class="line">sm.explore(find=<span class="number">0x08048675</span>)</span><br><span class="line">sm.found[<span class="number">0</span>].posix.dumps(<span class="number">0</span>)</span><br><span class="line"><span class="comment">#第二种 通过栈操作实际上是内存操作</span></span><br><span class="line"><span class="keyword">from</span> angr <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> claripy <span class="keyword">import</span> *</span><br><span class="line">p=Project(<span class="string">&#x27;./00_angr_find&#x27;</span>)</span><br><span class="line">state=p.factory.entry_state(addr=<span class="number">0x0804860F</span>)<span class="comment">#地址不放在开始 是因为为了防止其他函数影响操作</span></span><br><span class="line">flag=BVS(<span class="string">&#x27;flag&#x27;</span>,<span class="number">8</span>*<span class="number">9</span>)</span><br><span class="line">state.solver.add(*[And(flag[i+<span class="number">7</span>:i]&lt;=<span class="built_in">ord</span>(<span class="string">&#x27;Z&#x27;</span>),flag[i+<span class="number">7</span>:i]&gt;=<span class="built_in">ord</span>(<span class="string">&#x27;A&#x27;</span>))<span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">8</span>,<span class="number">72</span>,<span class="number">8</span>)])<span class="comment">#注意是大端序所以此处从倒数第二个字符开始，因为倒数第一个字符是结束符\x00</span></span><br><span class="line">state.solver.add(flag[<span class="number">7</span>:<span class="number">0</span>]==<span class="number">0</span>)<span class="comment">#结束符条件</span></span><br><span class="line">addr=state.regs.ebp-<span class="number">0x15</span></span><br><span class="line">state.memory.store(addr,flag)</span><br><span class="line">sm=p.factory.simgr(state)</span><br><span class="line">sm.explore(find=<span class="number">0x8048675</span>)</span><br><span class="line"><span class="built_in">int</span>.to_bytes(sm.found[<span class="number">0</span>].solver.<span class="built_in">eval</span>(flag),<span class="number">9</span>,<span class="string">&#x27;big&#x27;</span>)<span class="comment">#注意是大端序（低地址在高位，高地址在低位)</span></span><br></pre></td></tr></table></figure></div>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;类似于z3用于创建变量求解（可用于argv传参或者 寄存器传参）&lt;/p&gt;
&lt;h2 id=&quot;变量&quot;&gt;&lt;a href=&quot;#变量&quot; class=&quot;headerlink&quot; title=&quot;变量&quot;&gt;&lt;/a&gt;变量&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;BVS -用于创建位向量符号  &lt;</summary>
      
    
    
    
    <category term="Re" scheme="http://example.com/categories/Re/"/>
    
    <category term="分析工具" scheme="http://example.com/categories/Re/%E5%88%86%E6%9E%90%E5%B7%A5%E5%85%B7/"/>
    
    <category term="angr分析框架" scheme="http://example.com/categories/Re/%E5%88%86%E6%9E%90%E5%B7%A5%E5%85%B7/angr%E5%88%86%E6%9E%90%E6%A1%86%E6%9E%B6/"/>
    
    
  </entry>
  
</feed>
