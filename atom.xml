<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>runwu2204</title>
  
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2024-03-29T16:50:05.000Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>runwu2204</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>pem解析</title>
    <link href="http://example.com/2024/03/30/Crypto/RSA/pem%E8%A7%A3%E6%9E%90/"/>
    <id>http://example.com/2024/03/30/Crypto/RSA/pem%E8%A7%A3%E6%9E%90/</id>
    <published>2024-03-29T16:49:56.000Z</published>
    <updated>2024-03-29T16:50:05.000Z</updated>
    
    <content type="html"><![CDATA[<p><a class="link"   href="https://tover.xyz/p/pem-by-hand/" >手撕PEM密钥（RSA） | Tover’s Blog <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;a class=&quot;link&quot;   href=&quot;https://tover.xyz/p/pem-by-hand/&quot; &gt;手撕PEM密钥（RSA） | Tover’s Blog &lt;i class=&quot;fa-regular fa-arrow-up-right-from-square</summary>
      
    
    
    
    <category term="Crypto" scheme="http://example.com/categories/Crypto/"/>
    
    <category term="RSA" scheme="http://example.com/categories/Crypto/RSA/"/>
    
    
  </entry>
  
  <entry>
    <title>sys结构</title>
    <link href="http://example.com/2024/03/30/Re/windows/pe/%E9%A9%B1%E5%8A%A8/sys%E7%BB%93%E6%9E%84/"/>
    <id>http://example.com/2024/03/30/Re/windows/pe/%E9%A9%B1%E5%8A%A8/sys%E7%BB%93%E6%9E%84/</id>
    <published>2024-03-29T16:02:58.000Z</published>
    <updated>2024-03-29T17:59:47.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="sys"><a href="#sys" class="headerlink" title="sys"></a>sys</h2><blockquote><p>sys也可以认为是一种dll(动态链接库) 其entry_point实际上就是DriverEntry，只不过内部进行了相应的注册和一些函数回调绑定</p></blockquote><h2 id="DriverEntry"><a href="#DriverEntry" class="headerlink" title="DriverEntry"></a>DriverEntry</h2><div class="highlight-container" data-rel="C++"><figure class="iseeu highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">NTSTATUS <span class="title">DriverEntry</span><span class="params">(PDRIVER_OBJECT DriverObject, PUNICODE_STRING RegistryPath)</span> </span>&#123;</span><br><span class="line">    <span class="built_in">UNREFERENCED_PARAMETER</span>(RegistryPath);</span><br><span class="line">    <span class="comment">//下面为IRP请求包对应的不同行为,相当于程序与驱动之间的通讯部分进行的调用</span></span><br><span class="line">    <span class="comment">//绑定对应的行为，例如发生了IRP_MJ_CREATE操作就执行MyDriver_CreateClose</span></span><br><span class="line">    DriverObject-&gt;MajorFunction[IRP_MJ_CREATE] = MyDriver_CreateClose;</span><br><span class="line">    DriverObject-&gt;MajorFunction[IRP_MJ_CLOSE] = MyDriver_CreateClose;</span><br><span class="line">    DriverObject-&gt;MajorFunction[IRP_MJ_READ] = MyDriver_ReadWrite;</span><br><span class="line">    DriverObject-&gt;MajorFunction[IRP_MJ_WRITE] = MyDriver_ReadWrite;</span><br><span class="line"><span class="comment">//字符串转换</span></span><br><span class="line">    <span class="built_in">RtlInitUnicodeString</span>(&amp;deviceNameUnicodeString, DEVICE_NAME);</span><br><span class="line">    <span class="built_in">RtlInitUnicodeString</span>(&amp;symbolicLinkUnicodeString, LINK_NAME);</span><br><span class="line">    <span class="comment">//定义见下面代码</span></span><br><span class="line">    NTSTATUS status = <span class="built_in">IoCreateDevice</span>(</span><br><span class="line">        DriverObject,</span><br><span class="line">        <span class="number">0</span>,</span><br><span class="line">        &amp;deviceNameUnicodeString,</span><br><span class="line">        FILE_DEVICE_UNKNOWN,</span><br><span class="line">        FILE_DEVICE_SECURE_OPEN,</span><br><span class="line">        FALSE,</span><br><span class="line">        &amp;g_MyDeviceObject</span><br><span class="line">    );</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (!<span class="built_in">NT_SUCCESS</span>(status)) &#123;</span><br><span class="line">        <span class="keyword">return</span> status;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    status = <span class="built_in">IoCreateSymbolicLink</span>(&amp;symbolicLinkUnicodeString, &amp;deviceNameUnicodeString);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (!<span class="built_in">NT_SUCCESS</span>(status)) &#123;</span><br><span class="line">        <span class="built_in">IoDeleteDevice</span>(g_MyDeviceObject);</span><br><span class="line">        <span class="keyword">return</span> status;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> STATUS_SUCCESS;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></div><p><strong>IRP行为</strong></p><blockquote><table><thead><tr><th>名称</th><th>描述</th><th>调用者</th><th>值</th></tr></thead><tbody><tr><td>IRP_MJ_CREATE</td><td>请求句柄</td><td>CreateFile</td><td>0x00</td></tr><tr><td>IRP_MJ_CREATE_NAMED_PIPE</td><td></td><td></td><td>0x01</td></tr><tr><td>IRP_MJ_CLEANUP</td><td></td><td>CloseHandle</td><td>0x12</td></tr><tr><td>IRP_MJ_CLOSE</td><td>关闭句柄</td><td>CloseHandle</td><td>0x02</td></tr><tr><td>IRP_MJ_READ</td><td>从设备输入数据</td><td>ReadFile</td><td>0x03</td></tr><tr><td>IRP_MJ_WRITE</td><td>输出数据到设备</td><td>WriteFile</td><td>0x04</td></tr><tr><td>IRP_MJ_DEVICE_CONTROL</td><td>控制操作(利用IOCTL)</td><td>DeviceIoControl</td><td>0x0e</td></tr><tr><td>IRP_MJ_INTERNAL_DEVICE_CONTROL</td><td>控制操作(内核操作)</td><td></td><td>0x0f</td></tr><tr><td>IRP_MJ_QUERY_INFORMATION</td><td>得到文件的长度</td><td>GetFileSize</td><td>0x05</td></tr><tr><td>IRP_MJ_SET_INFORMATION</td><td>设置文件长度</td><td>SetFileSize</td><td>0x06</td></tr><tr><td>IRP_MJ_FLUSH_BUFFERS</td><td>写入或者丢弃缓冲区</td><td>FlushFileBuffers&#x2F;FlushConsoleInputBuffer&#x2F;PurgeComm</td><td>0x09</td></tr><tr><td>IRP_MJ_SHUTDOWN</td><td>系统关机</td><td>InitiateSystemShutdown</td><td>0x10</td></tr></tbody></table><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">#define IRP_MJ_CREATE                   0x00</span><br><span class="line">#define IRP_MJ_CREATE_NAMED_PIPE        0x01</span><br><span class="line">#define IRP_MJ_CLOSE                    0x02</span><br><span class="line">#define IRP_MJ_READ                     0x03</span><br><span class="line">#define IRP_MJ_WRITE                    0x04</span><br><span class="line">#define IRP_MJ_QUERY_INFORMATION        0x05</span><br><span class="line">#define IRP_MJ_SET_INFORMATION          0x06</span><br><span class="line">#define IRP_MJ_QUERY_EA                 0x07</span><br><span class="line">#define IRP_MJ_SET_EA                   0x08</span><br><span class="line">#define IRP_MJ_FLUSH_BUFFERS            0x09</span><br><span class="line">#define IRP_MJ_QUERY_VOLUME_INFORMATION 0x0a</span><br><span class="line">#define IRP_MJ_SET_VOLUME_INFORMATION   0x0b</span><br><span class="line">#define IRP_MJ_DIRECTORY_CONTROL        0x0c</span><br><span class="line">#define IRP_MJ_FILE_SYSTEM_CONTROL      0x0d</span><br><span class="line">#define IRP_MJ_DEVICE_CONTROL           0x0e</span><br><span class="line">#define IRP_MJ_INTERNAL_DEVICE_CONTROL  0x0f</span><br><span class="line">#define IRP_MJ_SHUTDOWN                 0x10</span><br><span class="line">#define IRP_MJ_LOCK_CONTROL             0x11</span><br><span class="line">#define IRP_MJ_CLEANUP                  0x12</span><br><span class="line">#define IRP_MJ_CREATE_MAILSLOT          0x13</span><br><span class="line">#define IRP_MJ_QUERY_SECURITY           0x14</span><br><span class="line">#define IRP_MJ_SET_SECURITY             0x15</span><br><span class="line">#define IRP_MJ_POWER                    0x16</span><br><span class="line">#define IRP_MJ_SYSTEM_CONTROL           0x17</span><br><span class="line">#define IRP_MJ_DEVICE_CHANGE            0x18</span><br><span class="line">#define IRP_MJ_QUERY_QUOTA              0x19</span><br><span class="line">#define IRP_MJ_SET_QUOTA                0x1a</span><br><span class="line">#define IRP_MJ_PNP                      0x1b</span><br><span class="line">#define IRP_MJ_PNP_POWER                IRP_MJ_PNP      // Obsolete....</span><br><span class="line">#define IRP_MJ_MAXIMUM_FUNCTION         0x1b</span><br></pre></td></tr></table></figure></div></blockquote><p><strong>IoCreateDevice</strong></p><blockquote><p><a href="#DRIVER_OBJECT">PDRIVER_OBJECT</a> <a href="#DEVICE_TYPE">DEVICE_TYPE</a></p><div class="highlight-container" data-rel="C++"><figure class="iseeu highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">NTSTATUS <span class="title">IoCreateDevice</span><span class="params">(</span></span></span><br><span class="line"><span class="params"><span class="function">  [in]           PDRIVER_OBJECT  DriverObject,<span class="comment">//驱动对象</span></span></span></span><br><span class="line"><span class="params"><span class="function">  [in]           ULONG           DeviceExtensionSize,<span class="comment">//驱动需要的额外空间</span></span></span></span><br><span class="line"><span class="params"><span class="function">  [in, optional] PUNICODE_STRING DeviceName,<span class="comment">//驱动名</span></span></span></span><br><span class="line"><span class="params"><span class="function">  [in]           DEVICE_TYPE     DeviceType,<span class="comment">//驱动类型</span></span></span></span><br><span class="line"><span class="params"><span class="function">  [in]           ULONG           DeviceCharacteristics,<span class="comment">//</span></span></span></span><br><span class="line"><span class="params"><span class="function">  [in]           BOOLEAN         Exclusive,<span class="comment">//</span></span></span></span><br><span class="line"><span class="params"><span class="function">  [out]          PDEVICE_OBJECT  *DeviceObject<span class="comment">//输出对应的驱动对象</span></span></span></span><br><span class="line"><span class="params"><span class="function">)</span></span>;</span><br></pre></td></tr></table></figure></div></blockquote><h2 id="相关类型定义"><a href="#相关类型定义" class="headerlink" title="相关类型定义"></a>相关类型定义</h2><h3 id="DEVICE-TYPE"><a href="#DEVICE-TYPE" class="headerlink" title="DEVICE_TYPE"></a><span id="DEVICE_TYPE">DEVICE_TYPE</span></h3><blockquote><div class="highlight-container" data-rel="C++"><figure class="iseeu highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> FILE_DEVICE_8042_PORT           0x00000027</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> FILE_DEVICE_ACPI                0x00000032</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> FILE_DEVICE_BATTERY             0x00000029</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> FILE_DEVICE_BEEP                0x00000001</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> FILE_DEVICE_BUS_EXTENDER        0x0000002a</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> FILE_DEVICE_CD_ROM              0x00000002</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> FILE_DEVICE_CD_ROM_FILE_SYSTEM  0x00000003</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> FILE_DEVICE_CHANGER             0x00000030</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> FILE_DEVICE_CONTROLLER          0x00000004</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> FILE_DEVICE_DATALINK            0x00000005</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> FILE_DEVICE_DFS                 0x00000006</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> FILE_DEVICE_DFS_FILE_SYSTEM     0x00000035</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> FILE_DEVICE_DFS_VOLUME          0x00000036</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> FILE_DEVICE_DISK                0x00000007</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> FILE_DEVICE_DISK_FILE_SYSTEM    0x00000008</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> FILE_DEVICE_DVD                 0x00000033</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> FILE_DEVICE_FILE_SYSTEM         0x00000009</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> FILE_DEVICE_FIPS                0x0000003a</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> FILE_DEVICE_FULLSCREEN_VIDEO    0x00000034</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> FILE_DEVICE_INPORT_PORT         0x0000000a</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> FILE_DEVICE_KEYBOARD            0x0000000b</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> FILE_DEVICE_KS                  0x0000002f</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> FILE_DEVICE_KSEC                0x00000039</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> FILE_DEVICE_MAILSLOT            0x0000000c</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> FILE_DEVICE_MASS_STORAGE        0x0000002d</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> FILE_DEVICE_MIDI_IN             0x0000000d</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> FILE_DEVICE_MIDI_OUT            0x0000000e</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> FILE_DEVICE_MODEM               0x0000002b</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> FILE_DEVICE_MOUSE               0x0000000f</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> FILE_DEVICE_MULTI_UNC_PROVIDER  0x00000010</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> FILE_DEVICE_NAMED_PIPE          0x00000011</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> FILE_DEVICE_NETWORK             0x00000012</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> FILE_DEVICE_NETWORK_BROWSER     0x00000013</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> FILE_DEVICE_NETWORK_FILE_SYSTEM 0x00000014</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> FILE_DEVICE_NETWORK_REDIRECTOR  0x00000028</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> FILE_DEVICE_NULL                0x00000015</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> FILE_DEVICE_PARALLEL_PORT       0x00000016</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> FILE_DEVICE_PHYSICAL_NETCARD    0x00000017</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> FILE_DEVICE_PRINTER             0x00000018</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> FILE_DEVICE_SCANNER             0x00000019</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> FILE_DEVICE_SCREEN              0x0000001c</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> FILE_DEVICE_SERENUM             0x00000037</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> FILE_DEVICE_SERIAL_MOUSE_PORT   0x0000001a</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> FILE_DEVICE_SERIAL_PORT         0x0000001b</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> FILE_DEVICE_SMARTCARD           0x00000031</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> FILE_DEVICE_SMB                 0x0000002e</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> FILE_DEVICE_SOUND               0x0000001d</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> FILE_DEVICE_STREAMS             0x0000001e</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> FILE_DEVICE_TAPE                0x0000001f</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> FILE_DEVICE_TAPE_FILE_SYSTEM    0x00000020</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> FILE_DEVICE_TERMSRV             0x00000038</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> FILE_DEVICE_TRANSPORT           0x00000021</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> FILE_DEVICE_UNKNOWN             0x00000022</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> FILE_DEVICE_VDM                 0x0000002c</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> FILE_DEVICE_VIDEO               0x00000023</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> FILE_DEVICE_VIRTUAL_DISK        0x00000024</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> FILE_DEVICE_WAVE_IN             0x00000025</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> FILE_DEVICE_WAVE_OUT            0x00000026</span></span><br></pre></td></tr></table></figure></div></blockquote><h3 id="DEVICE-OBJECT"><a href="#DEVICE-OBJECT" class="headerlink" title="_DEVICE_OBJECT"></a><span id="_DEVICE_OBJECT">_DEVICE_OBJECT</span></h3><blockquote><div class="highlight-container" data-rel="C++"><figure class="iseeu highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="keyword">struct</span> <span class="title class_">_DEVICE_OBJECT</span> &#123;</span><br><span class="line">  CSHORT                   Type;</span><br><span class="line">  USHORT                   Size;</span><br><span class="line">  LONG                     ReferenceCount;</span><br><span class="line">  <span class="keyword">struct</span> <span class="title class_">_DRIVER_OBJECT</span>    *DriverObject;</span><br><span class="line">  <span class="keyword">struct</span> <span class="title class_">_DEVICE_OBJECT</span>    *NextDevice;</span><br><span class="line">  <span class="keyword">struct</span> <span class="title class_">_DEVICE_OBJECT</span>    *AttachedDevice;</span><br><span class="line">  <span class="keyword">struct</span> <span class="title class_">_IRP</span>              *CurrentIrp;</span><br><span class="line">  PIO_TIMER                Timer;</span><br><span class="line">  ULONG                    Flags;</span><br><span class="line">  ULONG                    Characteristics;</span><br><span class="line">  __volatile PVPB          Vpb;</span><br><span class="line">  PVOID                    DeviceExtension;</span><br><span class="line">  DEVICE_TYPE              DeviceType;</span><br><span class="line">  CCHAR                    StackSize;</span><br><span class="line">  <span class="keyword">union</span> &#123;</span><br><span class="line">    LIST_ENTRY         ListEntry;</span><br><span class="line">    WAIT_CONTEXT_BLOCK Wcb;</span><br><span class="line">  &#125; Queue;</span><br><span class="line">  ULONG                    AlignmentRequirement;</span><br><span class="line">  KDEVICE_QUEUE            DeviceQueue;</span><br><span class="line">  KDPC                     Dpc;</span><br><span class="line">  ULONG                    ActiveThreadCount;</span><br><span class="line">  PSECURITY_DESCRIPTOR     SecurityDescriptor;</span><br><span class="line">  KEVENT                   DeviceLock;</span><br><span class="line">  USHORT                   SectorSize;</span><br><span class="line">  USHORT                   Spare1;</span><br><span class="line">  <span class="keyword">struct</span> <span class="title class_">_DEVOBJ_EXTENSION</span> *DeviceObjectExtension;</span><br><span class="line">  PVOID                    Reserved;</span><br><span class="line">&#125; DEVICE_OBJECT, *PDEVICE_OBJECT;</span><br></pre></td></tr></table></figure></div></blockquote><h3 id="DRIVER-OBJECT"><a href="#DRIVER-OBJECT" class="headerlink" title="_DRIVER_OBJECT"></a><span id="_DEVICE_OBJECT">_DRIVER_OBJECT</span></h3><blockquote><div class="highlight-container" data-rel="C++"><figure class="iseeu highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="keyword">struct</span> <span class="title class_">_DRIVER_OBJECT</span> &#123;</span><br><span class="line">  CSHORT             Type;</span><br><span class="line">  CSHORT             Size;</span><br><span class="line">  PDEVICE_OBJECT     DeviceObject;</span><br><span class="line">  ULONG              Flags;</span><br><span class="line">  PVOID              DriverStart;</span><br><span class="line">  ULONG              DriverSize;</span><br><span class="line">  PVOID              DriverSection;</span><br><span class="line">  PDRIVER_EXTENSION  DriverExtension;</span><br><span class="line">  UNICODE_STRING     DriverName;</span><br><span class="line">  PUNICODE_STRING    HardwareDatabase;</span><br><span class="line">  PFAST_IO_DISPATCH  FastIoDispatch;</span><br><span class="line">  PDRIVER_INITIALIZE DriverInit;</span><br><span class="line">  PDRIVER_STARTIO    DriverStartIo;</span><br><span class="line">  PDRIVER_UNLOAD     DriverUnload;</span><br><span class="line">  PDRIVER_DISPATCH   MajorFunction[IRP_MJ_MAXIMUM_FUNCTION + <span class="number">1</span>];</span><br><span class="line">&#125; DRIVER_OBJECT, *PDRIVER_OBJECT;</span><br></pre></td></tr></table></figure></div></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;sys&quot;&gt;&lt;a href=&quot;#sys&quot; class=&quot;headerlink&quot; title=&quot;sys&quot;&gt;&lt;/a&gt;sys&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;sys也可以认为是一种dll(动态链接库) 其entry_point实际上就是DriverEntry，只不</summary>
      
    
    
    
    <category term="Re" scheme="http://example.com/categories/Re/"/>
    
    <category term="windows" scheme="http://example.com/categories/Re/windows/"/>
    
    <category term="pe" scheme="http://example.com/categories/Re/windows/pe/"/>
    
    <category term="驱动" scheme="http://example.com/categories/Re/windows/pe/%E9%A9%B1%E5%8A%A8/"/>
    
    
  </entry>
  
  <entry>
    <title>堆溢出</title>
    <link href="http://example.com/2024/03/26/Pwn/linux/%E5%A0%86/%E5%A0%86%E6%BA%A2%E5%87%BA/"/>
    <id>http://example.com/2024/03/26/Pwn/linux/%E5%A0%86/%E5%A0%86%E6%BA%A2%E5%87%BA/</id>
    <published>2024-03-26T10:46:15.000Z</published>
    <updated>2024-03-26T10:46:15.000Z</updated>
    
    
    
    
    <category term="Pwn" scheme="http://example.com/categories/Pwn/"/>
    
    <category term="linux" scheme="http://example.com/categories/Pwn/linux/"/>
    
    <category term="堆" scheme="http://example.com/categories/Pwn/linux/%E5%A0%86/"/>
    
    
  </entry>
  
  <entry>
    <title>x86转x64</title>
    <link href="http://example.com/2024/03/20/Re/windows/pe/x86%E8%BD%ACx64/"/>
    <id>http://example.com/2024/03/20/Re/windows/pe/x86%E8%BD%ACx64/</id>
    <published>2024-03-20T10:23:01.000Z</published>
    <updated>2024-03-20T10:23:18.000Z</updated>
    
    <content type="html"><![CDATA[<p><a class="link"   href="https://blog.csdn.net/m0_50525151/article/details/129646740" >jmp指令【原理详解 8086汇编语言+笔记】-CSDN博客 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;a class=&quot;link&quot;   href=&quot;https://blog.csdn.net/m0_50525151/article/details/129646740&quot; &gt;jmp指令【原理详解 8086汇编语言+笔记】-CSDN博客 &lt;i class=&quot;fa-regular</summary>
      
    
    
    
    <category term="Re" scheme="http://example.com/categories/Re/"/>
    
    <category term="windows" scheme="http://example.com/categories/Re/windows/"/>
    
    <category term="pe" scheme="http://example.com/categories/Re/windows/pe/"/>
    
    
  </entry>
  
  <entry>
    <title>SEH</title>
    <link href="http://example.com/2024/03/17/Re/windows/pe/SEH/"/>
    <id>http://example.com/2024/03/17/Re/windows/pe/SEH/</id>
    <published>2024-03-17T08:24:25.000Z</published>
    <updated>2024-03-22T09:52:42.000Z</updated>
    
    <content type="html"><![CDATA[<p>参考<a class="link"   href="https://www.bookstack.cn/read/reverse-engineering-for-beginners-zh/spilt.16.spilt.35.book.md#5xd0vy" >第64章 传递参数的方法 - 68.3 Windows SEH - 《逆向工程权威指南》 - 书栈网 · BookStack <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p><p><a class="link"   href="https://www.yunzh1jun.com/2023/11/27/WindowsSEH2/" >Windows-SEH学习笔记（2） - 云之君’s Blog (yunzh1jun.com) <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p><p><a class="link"   href="https://zhuanlan.zhihu.com/p/573449712" >windows SEH分析 - 知乎 (zhihu.com) <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p><h2 id="基本结构为"><a href="#基本结构为" class="headerlink" title="基本结构为"></a>基本结构为</h2><div class="highlight-container" data-rel="C++"><figure class="iseeu highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">__try</span><br><span class="line">  &#123;</span><br><span class="line">  <span class="comment">//普通代码区域</span></span><br><span class="line">  &#125;</span><br><span class="line">  __except(filter)<span class="comment">//filter表示不同的处理形式</span></span><br><span class="line">  &#123;</span><br><span class="line">   <span class="comment">//发生异常后进行处理</span></span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure></div><blockquote><p><strong><code>__try</code></strong> 子句后的复合语句是主体或受保护节。 <strong><code>__except</code></strong> 表达式也称为筛选表达式。 它的值确定了异常的处理方式。 <strong><code>__except</code></strong> 子句后的复合语句是异常处理程序。 处理程序指定在执行主体期间引发异常时要采取的操作。 执行过程如下所示：</p><ol><li>执行受保护节(try语句)。</li><li>如果在受保护节执行过程中未发生异常，则继续执行 <strong><code>__except</code></strong> 子句之后的语句。</li><li>如果在受保护节的执行过程中或受保护节调用的任何例程中发生异常，则会计算 <strong><code>__except</code></strong> 表达式。 有三种可能的值：<ul><li><code>EXCEPTION_CONTINUE_EXECUTION</code> (-1) 异常已消除。 从出现异常的点继续执行。</li><li><code>EXCEPTION_CONTINUE_SEARCH</code> (0) 无法识别异常。 继续向上搜索堆栈查找处理程序，首先是所在的 <code>try-except</code> 语句，然后是具有下一个最高优先级的处理程序。</li><li><code>EXCEPTION_EXECUTE_HANDLER</code> (1) 异常可识别。 通过执行 <strong><code>__except</code></strong> 复合语句将控制权转移到异常处理程序，然后在 <strong><code>__except</code></strong> 块后继续执行。</li></ul></li></ol></blockquote><p>在ida中filter作为函数指针或函数地址存在，(32位中)eax作为其返回值对filter进行操纵</p><p>例如</p><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">.text:004179E3 ;   __except filter // owned by 4179AC ; EXCEPTION_EXECUTE_HANDLER</span><br><span class="line">.text:004179E3 mov     eax, 1          ; 从异常发生处下一条开始执行</span><br><span class="line">.text:004179E8 retn                    ; Return Near from Procedure</span><br><span class="line">----------------</span><br><span class="line">.text:004179E9 ;   __except(loc_4179E3) // owned by 4179AC</span><br><span class="line">.text:004179E9 mov     esp, [ebp+ms_exc.old_esp]</span><br><span class="line">.text:004179EC jmp     far ptr loc_4142A7 ; Jump</span><br></pre></td></tr></table></figure></div><p>这里的except的filter恒为1所以处理完即跳转</p><p>重要变量</p><blockquote><p><strong>[ebp+ms_exc.registration.TryLevel]</strong> 用于设置try等级，一般用于多层try嵌套情况，跳转到对应的except，如果值为-1表示不开启或者try域结束</p><p><strong>[ebp+ExceptionNum]</strong> 异常标识符，用于标识不同异常</p></blockquote><h2 id="FS寄存器"><a href="#FS寄存器" class="headerlink" title="FS寄存器"></a>FS寄存器</h2><h3 id="fs-0"><a href="#fs-0" class="headerlink" title="fs:[0]"></a>fs:[0]</h3><p>此处存放SEH链表，用于进行异常处理，当第一个不行就会跳转到next的第二个</p><div class="highlight-container" data-rel="C++"><figure class="iseeu highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">ntdll!_EXCEPTION_REGISTRATION_RECORD</span><br><span class="line">   +<span class="number">0x000</span> Next             : Ptr32 _EXCEPTION_REGISTRATION_RECORD</span><br><span class="line">   +<span class="number">0x004</span> Handler          : Ptr32 _EXCEPTION_DISPOSITION </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p>出现异常就会遍历这个SEH链表，直到</p><h3 id="fs-0x18"><a href="#fs-0x18" class="headerlink" title="fs:[0x18]"></a>fs:[0x18]</h3><p>TEB(Thread environment Block)起始地址</p><h3 id="fs-0x30"><a href="#fs-0x30" class="headerlink" title="fs:[0x30]"></a>fs:[0x30]</h3><p>PEB(Process environment Block)起始地址</p><h2 id="基本处理流程"><a href="#基本处理流程" class="headerlink" title="基本处理流程"></a>基本处理流程</h2><h2 id="example"><a href="#example" class="headerlink" title="example"></a>example</h2><p>DubheCTF2024-Destination</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/runwu2204/Blog_imgs/202403202020453.png"                      alt="image-20240320202054288"                ></p><p>通过frida插桩</p><div class="highlight-container" data-rel="Js"><figure class="iseeu highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">except=<span class="keyword">function</span>(<span class="params">addr,str1</span>)&#123;<span class="title class_">Interceptor</span>.<span class="title function_">attach</span>(<span class="title function_">ptr</span>(addr),&#123;<span class="title function_">onEnter</span>(<span class="params">args</span>)&#123;<span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;\n&quot;</span>+str1+<span class="string">&quot;:&quot;</span></span><br><span class="line">+<span class="title class_">JSON</span>.<span class="title function_">stringify</span>(<span class="variable language_">this</span>.<span class="property">context</span>))&#125;&#125;)&#125;</span><br><span class="line"><span class="title function_">except</span>(<span class="number">0x4140D7</span>,<span class="string">&quot;reg_excption&quot;</span>)<span class="comment">// try语句内注册的exception</span></span><br><span class="line"><span class="title function_">except</span>(<span class="number">0x4179E9</span>,<span class="string">&quot;old_excption&quot;</span>)<span class="comment">// 原有的except语句</span></span><br><span class="line"><span class="title function_">except</span>(<span class="number">0x4179E3</span>,<span class="string">&quot;filter&quot;</span>)<span class="comment">//filter 语句</span></span><br><span class="line"><span class="title function_">except</span>(<span class="number">0x4166BD</span>,<span class="string">&quot;my_except&quot;</span>)<span class="comment">//自己插入的恒返回1的exception处理函数</span></span><br></pre></td></tr></table></figure></div><p>保留注册操作</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/runwu2204/Blog_imgs/202403220122453.png"                      alt="image-20240322012221404"                ></p><p>删去注册操作</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/runwu2204/Blog_imgs/202403211816112.png"                      alt="image-20240321181600029"                ></p><p>输出为</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/runwu2204/Blog_imgs/202403220112114.png"                      alt="image-20240322011210069"                ></p><p>说明seh链表中只有old_exception</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;参考&lt;a class=&quot;link&quot;   href=&quot;https://www.bookstack.cn/read/reverse-engineering-for-beginners-zh/spilt.16.spilt.35.book.md#5xd0vy&quot; &gt;第64章 传递参数</summary>
      
    
    
    
    <category term="Re" scheme="http://example.com/categories/Re/"/>
    
    <category term="windows" scheme="http://example.com/categories/Re/windows/"/>
    
    <category term="pe" scheme="http://example.com/categories/Re/windows/pe/"/>
    
    
  </entry>
  
  <entry>
    <title>hook</title>
    <link href="http://example.com/2024/03/16/Re/%E5%88%86%E6%9E%90%E5%B7%A5%E5%85%B7/frida%E6%A1%86%E6%9E%B6/hook/"/>
    <id>http://example.com/2024/03/16/Re/%E5%88%86%E6%9E%90%E5%B7%A5%E5%85%B7/frida%E6%A1%86%E6%9E%B6/hook/</id>
    <published>2024-03-15T16:16:49.000Z</published>
    <updated>2024-03-25T16:58:26.000Z</updated>
    
    <content type="html"><![CDATA[<p>frida通过js脚本实现功能（命令行类似于ipython</p><p>有多种启动方式</p><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">frida -U ps-name <span class="comment">#可通过frida-ps 获取对应的进程名</span></span><br><span class="line">frida -UF <span class="comment">#运行前台应用,wsa运行会有问题</span></span><br><span class="line">frida -l ps-name js文件 <span class="comment">#调用对应js文件</span></span><br><span class="line">frida -UF -l js文件 <span class="comment">#调用js并hook前台activity</span></span><br></pre></td></tr></table></figure></div><h1 id="Android"><a href="#Android" class="headerlink" title="Android"></a>Android</h1><h2 id="hook-native层函数"><a href="#hook-native层函数" class="headerlink" title="hook native层函数"></a>hook native层函数</h2><div class="highlight-container" data-rel="Js"><figure class="iseeu highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">func_addr = <span class="title class_">Module</span>.<span class="title function_">findExportByName</span>(<span class="string">&quot;libmidand.so&quot;</span>, <span class="string">&quot;_Z10murmur3_32PKcjj&quot;</span>);<span class="comment">//查找对应so某函数位置，注意该函数返回的是ptr对象,可用ptr(地址)生成</span></span><br><span class="line"><span class="title class_">Interceptor</span>.<span class="title function_">attach</span>(func_addr,&#123; <span class="comment">// 将拦截器附加到 func_addr 所指向的函数上</span></span><br><span class="line">    <span class="attr">onEnter</span>: <span class="keyword">function</span>(<span class="params">args</span>) <span class="comment">//函数调用前运行，可用于获取参数</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">hexdump</span>(args[<span class="number">0</span>]))</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">onLeave</span>: <span class="keyword">function</span>(<span class="params">args</span>)&#123;<span class="comment">//函数调用后运行，可用于获取返回值</span></span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;enter murmur3_32 retvalue-&gt;\n&quot;</span> + <span class="title function_">hexdump</span>(args));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></div><h2 id="hook-java层"><a href="#hook-java层" class="headerlink" title="hook java层"></a>hook java层</h2><h2 id="exp"><a href="#exp" class="headerlink" title="exp:"></a>exp:</h2><div class="highlight-container" data-rel="Js"><figure class="iseeu highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> func_addr = <span class="title class_">Module</span>.<span class="title function_">findExportByName</span>(<span class="string">&quot;libmidand.so&quot;</span>, <span class="string">&quot;_Z10murmur3_32PKcjj&quot;</span>); <span class="comment">// 查找名为 &quot;libmidand.so&quot; 的库中导出函数名为 &quot;_Z10murmur3_32PKcjj&quot; 的函数，并将函数地址赋值给 func_addr 变量</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;func addr is ---&quot;</span> + func_addr) <span class="comment">// 打印找到的函数的地址</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">hookso</span>(<span class="params"></span>)&#123;</span><br><span class="line"><span class="title class_">Interceptor</span>.<span class="title function_">attach</span>(func_addr,&#123; <span class="comment">// 将拦截器附加到 func_addr 所指向的函数上, func_addr实际上不是地址是ptr()对象如果需要手动拦截可用ptr(实际地址)</span></span><br><span class="line">    <span class="attr">onEnter</span>: <span class="keyword">function</span>(<span class="params">args</span>) </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">hexdump</span>(args[<span class="number">0</span>]))</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="comment">// 拦截器回调函数，在被拦截函数返回之后执行</span></span><br><span class="line">    <span class="attr">onLeave</span>: <span class="keyword">function</span>(<span class="params">args</span>)&#123;</span><br><span class="line">        <span class="comment">// 打印被拦截函数的返回值的十六进制表示</span></span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;enter murmur3_32 retvalue-&gt;\n&quot;</span> + <span class="title function_">hexdump</span>(args));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">bytes2hexstr_2</span>(<span class="params">arrBytes</span>)</span><br><span class="line">&#123;</span><br><span class="line">   <span class="keyword">var</span> str_hex = <span class="title class_">JSON</span>.<span class="title function_">stringify</span>(arrBytes);</span><br><span class="line">   <span class="keyword">return</span> str_hex;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">hookjava</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="title class_">Java</span>.<span class="title function_">perform</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">var</span> tmp = <span class="title class_">Java</span>.<span class="title function_">use</span>(<span class="string">&quot;com.moible.midand.MainActivity&quot;</span>);</span><br><span class="line">        tmp.<span class="property">Java_NativeUtils_readResourceFileBytes</span>.<span class="property">implementation</span> = <span class="keyword">function</span> (<span class="params">arg1, arg2</span>) &#123;</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">bytes2hexstr_2</span>(arg2));</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;;</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">char_set</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="title class_">Java</span>.<span class="title function_">choose</span>(<span class="string">&quot;java.nio.charset.Charset&quot;</span>,&#123;</span><br><span class="line">        <span class="attr">onMatch</span>: <span class="keyword">function</span>(<span class="params">tmp</span>)&#123;</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">Charset</span>.<span class="title function_">defaultCharset</span>())</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><h1 id="windows"><a href="#windows" class="headerlink" title="windows"></a>windows</h1>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;frida通过js脚本实现功能（命令行类似于ipython&lt;/p&gt;
&lt;p&gt;有多种启动方式&lt;/p&gt;
&lt;div class=&quot;highlight-container&quot; data-rel=&quot;Bash&quot;&gt;&lt;figure class=&quot;iseeu highlight bash&quot;&gt;&lt;t</summary>
      
    
    
    
    <category term="Re" scheme="http://example.com/categories/Re/"/>
    
    <category term="分析工具" scheme="http://example.com/categories/Re/%E5%88%86%E6%9E%90%E5%B7%A5%E5%85%B7/"/>
    
    <category term="frida框架" scheme="http://example.com/categories/Re/%E5%88%86%E6%9E%90%E5%B7%A5%E5%85%B7/frida%E6%A1%86%E6%9E%B6/"/>
    
    
  </entry>
  
  <entry>
    <title>ChipWhisperer</title>
    <link href="http://example.com/2024/03/12/Re/IOT/%E4%BE%A7%E4%BF%A1%E9%81%93/ChipWhisperer/"/>
    <id>http://example.com/2024/03/12/Re/IOT/%E4%BE%A7%E4%BF%A1%E9%81%93/ChipWhisperer/</id>
    <published>2024-03-12T15:50:52.000Z</published>
    <updated>2024-03-12T16:04:11.000Z</updated>
    
    <content type="html"><![CDATA[<p>测信道攻击工具</p><p><a class="link"   href="https://chipwhisperer.readthedocs.io/en/latest/index.html" >ChipWhisperer — ChipWhisperer 5.7.0 documentation <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;测信道攻击工具&lt;/p&gt;
&lt;p&gt;&lt;a class=&quot;link&quot;   href=&quot;https://chipwhisperer.readthedocs.io/en/latest/index.html&quot; &gt;ChipWhisperer — ChipWhisperer 5.7.0 do</summary>
      
    
    
    
    <category term="Re" scheme="http://example.com/categories/Re/"/>
    
    <category term="IOT" scheme="http://example.com/categories/Re/IOT/"/>
    
    <category term="侧信道" scheme="http://example.com/categories/Re/IOT/%E4%BE%A7%E4%BF%A1%E9%81%93/"/>
    
    
  </entry>
  
  <entry>
    <title>bindiff</title>
    <link href="http://example.com/2024/03/12/Re/%E5%88%86%E6%9E%90%E5%B7%A5%E5%85%B7/ida/plugins/bindiff/"/>
    <id>http://example.com/2024/03/12/Re/%E5%88%86%E6%9E%90%E5%B7%A5%E5%85%B7/ida/plugins/bindiff/</id>
    <published>2024-03-12T09:28:09.000Z</published>
    <updated>2024-03-12T09:29:04.000Z</updated>
    
    <content type="html"><![CDATA[<p>可用于导入函数名</p><p>比如某程序静态编译了某glibc库，可通过比较对应的glibc来导入对应的函数名 方便进行程序分析</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;可用于导入函数名&lt;/p&gt;
&lt;p&gt;比如某程序静态编译了某glibc库，可通过比较对应的glibc来导入对应的函数名 方便进行程序分析&lt;/p&gt;
</summary>
      
    
    
    
    <category term="Re" scheme="http://example.com/categories/Re/"/>
    
    <category term="分析工具" scheme="http://example.com/categories/Re/%E5%88%86%E6%9E%90%E5%B7%A5%E5%85%B7/"/>
    
    <category term="ida" scheme="http://example.com/categories/Re/%E5%88%86%E6%9E%90%E5%B7%A5%E5%85%B7/ida/"/>
    
    <category term="plugins" scheme="http://example.com/categories/Re/%E5%88%86%E6%9E%90%E5%B7%A5%E5%85%B7/ida/plugins/"/>
    
    
  </entry>
  
  <entry>
    <title>label结构</title>
    <link href="http://example.com/2024/03/05/%E5%BC%80%E5%8F%91/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/label%E7%BB%93%E6%9E%84/"/>
    <id>http://example.com/2024/03/05/%E5%BC%80%E5%8F%91/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/label%E7%BB%93%E6%9E%84/</id>
    <published>2024-03-05T07:49:04.000Z</published>
    <updated>2024-03-05T09:54:32.000Z</updated>
    
    <content type="html"><![CDATA[<p><a class="link"   href="https://app.roboflow.com/" >手动标签生成数据集 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/runwu2204/Blog_imgs/202403051736569.png"                      alt="image-20240305173618382"                ></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;a class=&quot;link&quot;   href=&quot;https://app.roboflow.com/&quot; &gt;手动标签生成数据集 &lt;i class=&quot;fa-regular fa-arrow-up-right-from-square fa-sm&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;</summary>
      
    
    
    
    <category term="开发" scheme="http://example.com/categories/%E5%BC%80%E5%8F%91/"/>
    
    <category term="深度学习" scheme="http://example.com/categories/%E5%BC%80%E5%8F%91/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/"/>
    
    
  </entry>
  
  <entry>
    <title>基本使用</title>
    <link href="http://example.com/2024/03/01/%E5%BC%80%E5%8F%91/IOT/proteus/%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8/"/>
    <id>http://example.com/2024/03/01/%E5%BC%80%E5%8F%91/IOT/proteus/%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8/</id>
    <published>2024-03-01T13:10:26.000Z</published>
    <updated>2024-03-01T13:10:26.000Z</updated>
    
    
    
    
    <category term="开发" scheme="http://example.com/categories/%E5%BC%80%E5%8F%91/"/>
    
    <category term="IOT" scheme="http://example.com/categories/%E5%BC%80%E5%8F%91/IOT/"/>
    
    <category term="proteus" scheme="http://example.com/categories/%E5%BC%80%E5%8F%91/IOT/proteus/"/>
    
    
  </entry>
  
  <entry>
    <title>符号链接-任意文件访问</title>
    <link href="http://example.com/2024/02/27/Web/%E7%AC%A6%E5%8F%B7%E9%93%BE%E6%8E%A5-%E4%BB%BB%E6%84%8F%E6%96%87%E4%BB%B6%E8%AE%BF%E9%97%AE/"/>
    <id>http://example.com/2024/02/27/Web/%E7%AC%A6%E5%8F%B7%E9%93%BE%E6%8E%A5-%E4%BB%BB%E6%84%8F%E6%96%87%E4%BB%B6%E8%AE%BF%E9%97%AE/</id>
    <published>2024-02-27T13:37:14.000Z</published>
    <updated>2024-02-27T13:46:33.000Z</updated>
    
    <content type="html"><![CDATA[<p>zip支持带符号链接压缩，可以将符号链接移植到其他系统上达成任意文件读取</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;zip支持带符号链接压缩，可以将符号链接移植到其他系统上达成任意文件读取&lt;/p&gt;
</summary>
      
    
    
    
    <category term="Web" scheme="http://example.com/categories/Web/"/>
    
    
  </entry>
  
  <entry>
    <title>nodejs原型链污染</title>
    <link href="http://example.com/2024/02/26/Web/nodejs/nodejs%E5%8E%9F%E5%9E%8B%E9%93%BE%E6%B1%A1%E6%9F%93/"/>
    <id>http://example.com/2024/02/26/Web/nodejs/nodejs%E5%8E%9F%E5%9E%8B%E9%93%BE%E6%B1%A1%E6%9F%93/</id>
    <published>2024-02-26T15:56:38.000Z</published>
    <updated>2024-02-27T10:15:18.000Z</updated>
    
    <content type="html"><![CDATA[<p>参考 <a class="link"   href="https://blog.csdn.net/qq_51586883/article/details/119867720" >js原型链污染(超详细)-CSDN博客 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p><p>原型链类似于父类</p><p>由相同类形成的对象 其共用同一种原型 所以可以通过更改其中一个对象的原型达成修改所有对象的目的</p><p>例如</p><div class="highlight-container" data-rel="Js"><figure class="iseeu highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">in</span>: tmp=&#123;<span class="string">&#x27;a&#x27;</span>:<span class="number">1</span>&#125;</span><br><span class="line"><span class="attr">out</span>: &#123;<span class="string">&#x27;a&#x27;</span>:<span class="number">1</span>&#125;</span><br><span class="line"><span class="attr">in</span>: tmp.<span class="property">a</span>.<span class="property">constructor</span>.<span class="property"><span class="keyword">prototype</span></span>==tmp.<span class="property">__proto__</span> <span class="comment">//此处是tmp.a(number)的原型跟tmp(object)原型不对应</span></span><br><span class="line"><span class="attr">out</span>: <span class="literal">false</span></span><br><span class="line"><span class="attr">in</span>: tmp.<span class="property">b</span>=&#123;<span class="string">&#x27;c&#x27;</span>:<span class="number">2</span>&#125;</span><br><span class="line"><span class="attr">out</span>: &#123;<span class="string">&#x27;c&#x27;</span>:<span class="number">2</span>&#125;</span><br><span class="line"><span class="attr">in</span>: tmp.<span class="property">b</span>.<span class="property">constructor</span>.<span class="property"><span class="keyword">prototype</span></span>==tmp.<span class="property">__proto__</span> <span class="comment">//此处是tmp.b(object)跟tmp(object)类型一样,所以共用原型</span></span><br><span class="line"><span class="attr">out</span>: <span class="literal">true</span></span><br></pre></td></tr></table></figure></div><p>node js中万物皆对象</p><p>当该对象中没有这个属性时会从其原型寻找，所以可以通过修改其原型来达成修改该对象属性的目的</p><p>此处Object指任意对象 class指任意类</p><p>可以有下列办法</p><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Object.constructor.prototype</span><br><span class="line">Object.constructor.__proto__</span><br><span class="line">class.prototype</span><br></pre></td></tr></table></figure></div><p>待完成</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;参考 &lt;a class=&quot;link&quot;   href=&quot;https://blog.csdn.net/qq_51586883/article/details/119867720&quot; &gt;js原型链污染(超详细)-CSDN博客 &lt;i class=&quot;fa-regular fa-arro</summary>
      
    
    
    
    <category term="Web" scheme="http://example.com/categories/Web/"/>
    
    <category term="nodejs" scheme="http://example.com/categories/Web/nodejs/"/>
    
    
  </entry>
  
  <entry>
    <title>Franklin-Reiter_相关信息攻击</title>
    <link href="http://example.com/2024/02/24/Crypto/RSA/Franklin-Reiter_%E7%9B%B8%E5%85%B3%E4%BF%A1%E6%81%AF%E6%94%BB%E5%87%BB/"/>
    <id>http://example.com/2024/02/24/Crypto/RSA/Franklin-Reiter_%E7%9B%B8%E5%85%B3%E4%BF%A1%E6%81%AF%E6%94%BB%E5%87%BB/</id>
    <published>2024-02-24T10:48:42.000Z</published>
    <updated>2024-03-18T17:49:20.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Franklin-Reiter相关消息攻击"><a href="#Franklin-Reiter相关消息攻击" class="headerlink" title="Franklin-Reiter相关消息攻击"></a>Franklin-Reiter相关消息攻击</h2><p>已知<code>pow(x,e,n)</code>和<code>pow(ax+b,e,n)</code></p><p>可以通过形如下列式子求解</p><div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> sage.<span class="built_in">all</span> <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">franklinReiter</span>(<span class="params">n,e,c1,c2,a,b</span>):</span><br><span class="line">    PR=PolynomialRing(Zmod(n),<span class="string">&#x27;X&#x27;</span>) </span><br><span class="line">    X=PR.gen()</span><br><span class="line">    f1 = X**e - c1 <span class="comment">#</span></span><br><span class="line">    f2 = (X*a+ b)**e - c2 <span class="comment">#</span></span><br><span class="line">    <span class="comment"># coefficient 0 = -m, which is what we wanted!</span></span><br><span class="line">    <span class="keyword">return</span> Integer(n-(compositeModulusGCD(f1,f2)).coefficients()[<span class="number">0</span>]) <span class="comment"># 系数</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">compositeModulusGCD</span>(<span class="params">a, b</span>):</span><br><span class="line">    <span class="keyword">if</span>(b == <span class="number">0</span>):</span><br><span class="line">        <span class="keyword">return</span> a.monic()</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> compositeModulusGCD(b, a % b)</span><br><span class="line"></span><br></pre></td></tr></table></figure></div><p>最好将x的已知位给到最大，比如<code>pow(x&lt;&lt;30,e,n)</code>与<code>pow(a*(x&lt;&lt;30),e,n)</code>这里会有三十的已知位</p><p>如果直接把x&lt;&lt;30求解，可能会有较大误差可以试着更改</p><p><code>f1 = (X*2**30)**e - c1</code> <code>f2 = ((X*2**30)*a)**e - c2</code></p><p>注意sage中&lt;&lt;并不是左移而是增大多少次方</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;Franklin-Reiter相关消息攻击&quot;&gt;&lt;a href=&quot;#Franklin-Reiter相关消息攻击&quot; class=&quot;headerlink&quot; title=&quot;Franklin-Reiter相关消息攻击&quot;&gt;&lt;/a&gt;Franklin-Reiter相关消息攻击&lt;/</summary>
      
    
    
    
    <category term="Crypto" scheme="http://example.com/categories/Crypto/"/>
    
    <category term="RSA" scheme="http://example.com/categories/Crypto/RSA/"/>
    
    
  </entry>
  
  <entry>
    <title>特定id私钥生成脚本</title>
    <link href="http://example.com/2024/02/21/%E6%99%BA%E8%83%BD%E5%90%88%E7%BA%A6/%E7%89%B9%E5%AE%9Aid%E7%A7%81%E9%92%A5%E7%94%9F%E6%88%90%E8%84%9A%E6%9C%AC/"/>
    <id>http://example.com/2024/02/21/%E6%99%BA%E8%83%BD%E5%90%88%E7%BA%A6/%E7%89%B9%E5%AE%9Aid%E7%A7%81%E9%92%A5%E7%94%9F%E6%88%90%E8%84%9A%E6%9C%AC/</id>
    <published>2024-02-21T08:30:48.000Z</published>
    <updated>2024-02-21T08:32:19.000Z</updated>
    
    <content type="html"><![CDATA[<p>所需库 web3</p><div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> eth_account</span><br><span class="line"><span class="keyword">import</span> secrets</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">check_address_suffix</span>(<span class="params">address, suffix</span>):</span><br><span class="line">    <span class="keyword">return</span> address[-<span class="number">4</span>:].lower() == suffix.lower()</span><br><span class="line"></span><br><span class="line">found = <span class="literal">False</span></span><br><span class="line"><span class="keyword">while</span> <span class="keyword">not</span> found:</span><br><span class="line">    <span class="comment"># 使用安全的方式生成32字节的私钥</span></span><br><span class="line">    private_key_bytes = secrets.token_bytes(<span class="number">32</span>)</span><br><span class="line">    private_key_int = <span class="built_in">int</span>.from_bytes(private_key_bytes, <span class="string">&#x27;big&#x27;</span>)</span><br><span class="line">    private_key_hex = <span class="built_in">hex</span>(private_key_int)[<span class="number">2</span>:].zfill(<span class="number">64</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 创建账户对象并获取地址</span></span><br><span class="line">    account = eth_account.Account.privateKeyToAccount(private_key_bytes)</span><br><span class="line">    address = account.address.lower()</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 检查地址后四位是否为0x2024</span></span><br><span class="line">    <span class="keyword">if</span> check_address_suffix(address, <span class="string">&quot;2024&quot;</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;找到匹配地址: <span class="subst">&#123;address&#125;</span>，对应的私钥是: <span class="subst">&#123;private_key_hex&#125;</span>&quot;</span>)</span><br><span class="line">        found = <span class="literal">True</span></span><br></pre></td></tr></table></figure></div>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;所需库 web3&lt;/p&gt;
&lt;div class=&quot;highlight-container&quot; data-rel=&quot;Python&quot;&gt;&lt;figure class=&quot;iseeu highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre</summary>
      
    
    
    
    <category term="智能合约" scheme="http://example.com/categories/%E6%99%BA%E8%83%BD%E5%90%88%E7%BA%A6/"/>
    
    
  </entry>
  
  <entry>
    <title>CS流量</title>
    <link href="http://example.com/2024/02/20/Misc/%E6%B5%81%E9%87%8F%E5%88%86%E6%9E%90/CS%E6%B5%81%E9%87%8F/"/>
    <id>http://example.com/2024/02/20/Misc/%E6%B5%81%E9%87%8F%E5%88%86%E6%9E%90/CS%E6%B5%81%E9%87%8F/</id>
    <published>2024-02-20T08:10:40.000Z</published>
    <updated>2024-02-20T08:12:06.000Z</updated>
    
    <content type="html"><![CDATA[<p>参考:<a class="link"   href="https://fdlucifer.github.io/2022/01/05/decrypt-cs-traffic/" >fdlucifer.github.io <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;参考:&lt;a class=&quot;link&quot;   href=&quot;https://fdlucifer.github.io/2022/01/05/decrypt-cs-traffic/&quot; &gt;fdlucifer.github.io &lt;i class=&quot;fa-regular fa-arrow</summary>
      
    
    
    
    <category term="Misc" scheme="http://example.com/categories/Misc/"/>
    
    <category term="流量分析" scheme="http://example.com/categories/Misc/%E6%B5%81%E9%87%8F%E5%88%86%E6%9E%90/"/>
    
    
  </entry>
  
  <entry>
    <title>基本形式</title>
    <link href="http://example.com/2024/02/19/Crypto/%E6%A0%BC%E5%AF%86%E7%A0%81/%E5%9F%BA%E6%9C%AC%E5%BD%A2%E5%BC%8F/"/>
    <id>http://example.com/2024/02/19/Crypto/%E6%A0%BC%E5%AF%86%E7%A0%81/%E5%9F%BA%E6%9C%AC%E5%BD%A2%E5%BC%8F/</id>
    <published>2024-02-19T11:00:26.000Z</published>
    <updated>2024-03-19T05:46:53.000Z</updated>
    
    <content type="html"><![CDATA[<p><a class="link"   href="https://dexterjie.github.io/2023/07/29/%E6%A0%BC%E5%AF%86%E7%A0%81%E5%85%A5%E9%97%A8/" >https://dexterjie.github.io/2023/07/29/%E6%A0%BC%E5%AF%86%E7%A0%81%E5%85%A5%E9%97%A8/ <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p><p><a class="link"   href="https://tover.xyz/p/LLL-attack-equation/#%E9%85%8D%E5%B9%B3" >格密码入门 | DexterJie’Blog (tover.xyz) <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p><div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> secret <span class="keyword">import</span> flag</span><br><span class="line"><span class="keyword">import</span> gmpy2</span><br><span class="line"></span><br><span class="line"><span class="comment"># assert len(flag) == 47</span></span><br><span class="line"><span class="comment">#376bit</span></span><br><span class="line"><span class="comment"># flag=b&#x27;SICTF&#123;xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx&#125;&#x27;</span></span><br><span class="line"><span class="comment"># f = bytes_to_long(flag)</span></span><br><span class="line"><span class="comment"># p = getPrime(512)</span></span><br><span class="line"><span class="comment"># g = getPrime(128)</span></span><br><span class="line"><span class="comment"># h = gmpy2.invert(f, p) * g % p</span></span><br><span class="line"><span class="comment"># print(&#x27;h =&#x27;, h)</span></span><br><span class="line"><span class="comment"># print(&#x27;p =&#x27;, p</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">配平</span></span><br><span class="line"><span class="string">g=fh+kp</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line">D=<span class="number">2</span>**<span class="number">240</span></span><br><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> gmpy2 <span class="keyword">import</span> *</span><br><span class="line">h = <span class="number">9848463356094730516607732957888686710609147955724620108704251779566910519170690198684628685762596232124613115691882688827918489297122319416081019121038443</span></span><br><span class="line">p = <span class="number">11403618200995593428747663693860532026261161211931726381922677499906885834766955987247477478421850280928508004160386000301268285541073474589048412962888947</span>     </span><br><span class="line">Ge = Matrix(ZZ,[[<span class="number">1</span>,D*h],[<span class="number">0</span>,D*p]])</span><br><span class="line"><span class="built_in">print</span>(Ge.LLL())</span><br><span class="line">f,g = Ge.LLL()[<span class="number">0</span>]</span><br><span class="line">f,g = <span class="built_in">abs</span>(f),<span class="built_in">abs</span>(g)//D</span><br><span class="line"><span class="built_in">print</span>(long_to_bytes(f))</span><br><span class="line"></span><br></pre></td></tr></table></figure></div>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;a class=&quot;link&quot;   href=&quot;https://dexterjie.github.io/2023/07/29/%E6%A0%BC%E5%AF%86%E7%A0%81%E5%85%A5%E9%97%A8/&quot; &gt;https://dexterjie.github.</summary>
      
    
    
    
    <category term="Crypto" scheme="http://example.com/categories/Crypto/"/>
    
    <category term="格密码" scheme="http://example.com/categories/Crypto/%E6%A0%BC%E5%AF%86%E7%A0%81/"/>
    
    
  </entry>
  
  <entry>
    <title>go_parser</title>
    <link href="http://example.com/2024/01/29/Re/%E5%88%86%E6%9E%90%E5%B7%A5%E5%85%B7/ida/plugins/go_parser/"/>
    <id>http://example.com/2024/01/29/Re/%E5%88%86%E6%9E%90%E5%B7%A5%E5%85%B7/ida/plugins/go_parser/</id>
    <published>2024-01-29T07:42:02.000Z</published>
    <updated>2024-01-29T07:42:09.000Z</updated>
    
    <content type="html"><![CDATA[<p><a class="link"   href="https://github.com/0xjiayu/go_parser" >0xjiayu&#x2F;go_parser：IDAPro 的另一个 Golang 二进制解析器 (github.com) <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;a class=&quot;link&quot;   href=&quot;https://github.com/0xjiayu/go_parser&quot; &gt;0xjiayu&amp;#x2F;go_parser：IDAPro 的另一个 Golang 二进制解析器 (github.com) &lt;i class=&quot;fa</summary>
      
    
    
    
    <category term="Re" scheme="http://example.com/categories/Re/"/>
    
    <category term="分析工具" scheme="http://example.com/categories/Re/%E5%88%86%E6%9E%90%E5%B7%A5%E5%85%B7/"/>
    
    <category term="ida" scheme="http://example.com/categories/Re/%E5%88%86%E6%9E%90%E5%B7%A5%E5%85%B7/ida/"/>
    
    <category term="plugins" scheme="http://example.com/categories/Re/%E5%88%86%E6%9E%90%E5%B7%A5%E5%85%B7/ida/plugins/"/>
    
    
  </entry>
  
  <entry>
    <title>qilingida</title>
    <link href="http://example.com/2024/01/29/Re/%E5%88%86%E6%9E%90%E5%B7%A5%E5%85%B7/ida/plugins/qilingida/"/>
    <id>http://example.com/2024/01/29/Re/%E5%88%86%E6%9E%90%E5%B7%A5%E5%85%B7/ida/plugins/qilingida/</id>
    <published>2024-01-29T07:41:19.000Z</published>
    <updated>2024-01-29T07:42:07.000Z</updated>
    
    <content type="html"><![CDATA[<p>qiling ida内置插件</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;qiling ida内置插件&lt;/p&gt;
</summary>
      
    
    
    
    <category term="Re" scheme="http://example.com/categories/Re/"/>
    
    <category term="分析工具" scheme="http://example.com/categories/Re/%E5%88%86%E6%9E%90%E5%B7%A5%E5%85%B7/"/>
    
    <category term="ida" scheme="http://example.com/categories/Re/%E5%88%86%E6%9E%90%E5%B7%A5%E5%85%B7/ida/"/>
    
    <category term="plugins" scheme="http://example.com/categories/Re/%E5%88%86%E6%9E%90%E5%B7%A5%E5%85%B7/ida/plugins/"/>
    
    
  </entry>
  
  <entry>
    <title>ipyida</title>
    <link href="http://example.com/2024/01/29/Re/%E5%88%86%E6%9E%90%E5%B7%A5%E5%85%B7/ida/plugins/ipyida/"/>
    <id>http://example.com/2024/01/29/Re/%E5%88%86%E6%9E%90%E5%B7%A5%E5%85%B7/ida/plugins/ipyida/</id>
    <published>2024-01-29T07:40:18.000Z</published>
    <updated>2024-01-29T07:41:19.000Z</updated>
    
    <content type="html"><![CDATA[<p>ida内置ipython</p><p><a class="link"   href="https://github.com/eset/ipyida" >eset&#x2F;ipyida: IPython console integration for IDA Pro (github.com) <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;ida内置ipython&lt;/p&gt;
&lt;p&gt;&lt;a class=&quot;link&quot;   href=&quot;https://github.com/eset/ipyida&quot; &gt;eset&amp;#x2F;ipyida: IPython console integration for IDA Pro (g</summary>
      
    
    
    
    <category term="Re" scheme="http://example.com/categories/Re/"/>
    
    <category term="分析工具" scheme="http://example.com/categories/Re/%E5%88%86%E6%9E%90%E5%B7%A5%E5%85%B7/"/>
    
    <category term="ida" scheme="http://example.com/categories/Re/%E5%88%86%E6%9E%90%E5%B7%A5%E5%85%B7/ida/"/>
    
    <category term="plugins" scheme="http://example.com/categories/Re/%E5%88%86%E6%9E%90%E5%B7%A5%E5%85%B7/ida/plugins/"/>
    
    
  </entry>
  
  <entry>
    <title>ponce</title>
    <link href="http://example.com/2024/01/29/Re/%E5%88%86%E6%9E%90%E5%B7%A5%E5%85%B7/ida/plugins/ponce/"/>
    <id>http://example.com/2024/01/29/Re/%E5%88%86%E6%9E%90%E5%B7%A5%E5%85%B7/ida/plugins/ponce/</id>
    <published>2024-01-29T07:39:33.000Z</published>
    <updated>2024-01-29T07:49:24.000Z</updated>
    
    <content type="html"><![CDATA[<p>跟angr类似用于符号执行</p><p><a class="link"   href="https://github.com/illera88/Ponce" >https://github.com/illera88/Ponce <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p><p>虽然relese中只有8.1版本 但是可以通过逆向<code>Ponce.dll</code>和<code>Ponce64.dll</code></p><p>拖入ida后搜索<code>This Ponce plugin</code></p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/runwu2204/Blog_imgs/202401291546716.png"                      alt="image-20240129154636516"                ></p><p>修改其对应的版本即可</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/runwu2204/Blog_imgs/202401291547697.png"                      alt="image-20240129154759548"                ></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;跟angr类似用于符号执行&lt;/p&gt;
&lt;p&gt;&lt;a class=&quot;link&quot;   href=&quot;https://github.com/illera88/Ponce&quot; &gt;https://github.com/illera88/Ponce &lt;i class=&quot;fa-regular f</summary>
      
    
    
    
    <category term="Re" scheme="http://example.com/categories/Re/"/>
    
    <category term="分析工具" scheme="http://example.com/categories/Re/%E5%88%86%E6%9E%90%E5%B7%A5%E5%85%B7/"/>
    
    <category term="ida" scheme="http://example.com/categories/Re/%E5%88%86%E6%9E%90%E5%B7%A5%E5%85%B7/ida/"/>
    
    <category term="plugins" scheme="http://example.com/categories/Re/%E5%88%86%E6%9E%90%E5%B7%A5%E5%85%B7/ida/plugins/"/>
    
    
  </entry>
  
</feed>
