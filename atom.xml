<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>runwu2204</title>
  
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2023-07-23T16:55:11.000Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>runwu2204</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>巅峰极客 2022easy_Forensic</title>
    <link href="http://example.com/2023/07/23/CTF%20WP/Misc/%E5%B7%85%E5%B3%B0%E6%9E%81%E5%AE%A2%202022easy_Forensic/"/>
    <id>http://example.com/2023/07/23/CTF%20WP/Misc/%E5%B7%85%E5%B3%B0%E6%9E%81%E5%AE%A2%202022easy_Forensic/</id>
    <published>2023-07-23T08:14:10.000Z</published>
    <updated>2023-07-23T16:55:11.000Z</updated>
    
    <content type="html"><![CDATA[<p>[<a class="link"   href="https://www.nssctf.cn/problem/2506" >巅峰极客 2022]easy_Forensic | NSSCTF <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p><p><del>只是个初学vol3的小草稿</del></p><p>附件是个raw文件(不是图片，相当于一个内存镜像)</p><p>使用volatility3进行分析</p><div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">vol -f secret.raw windows.info</span><br><span class="line">Volatility 3 Framework 2.4.1</span><br><span class="line">Progress:  100.00               PDB scanning finished</span><br><span class="line">Variable        Value</span><br><span class="line"></span><br><span class="line">Kernel Base     0xf80003e06000</span><br><span class="line">DTB     0x187000</span><br><span class="line">Symbols file:///home/wrwrw/.local/lib/python3.11/site-packages/volatility3/symbols/windows/ntkrnlmp.pdb/F8E2A8B5C9B74BF4A6E4A48F18009994-2.json.xz</span><br><span class="line">Is64Bit True</span><br><span class="line">IsPAE   False</span><br><span class="line">layer_name      0 WindowsIntel32e</span><br><span class="line">memory_layer    1 FileLayer</span><br><span class="line">KdDebuggerDataBlock     0xf80003fef070</span><br><span class="line">NTBuildLab      7600.16385.amd64fre.win7_rtm.090</span><br><span class="line">CSDVersion      0</span><br><span class="line">KdVersionBlock  0xf80003fef030</span><br><span class="line">Major/Minor     15.7600</span><br><span class="line">MachineType     34404</span><br><span class="line">KeNumberProcessors      1</span><br><span class="line">SystemTime      2022-08-13 11:48:11</span><br><span class="line">NtSystemRoot    C:\Windows</span><br><span class="line">NtProductType   NtProductWinNt</span><br><span class="line">NtMajorVersion  6</span><br><span class="line">NtMinorVersion  1</span><br><span class="line">PE MajorOperatingSystemVersion  6</span><br><span class="line">PE MinorOperatingSystemVersion  1</span><br><span class="line">PE Machine      34404</span><br><span class="line">PE TimeDateStamp        Mon Jul 13 23:40:48 2009</span><br></pre></td></tr></table></figure></div><p>查看进程</p><div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">vol -f secret.raw windows.pslist</span><br><span class="line">Volatility 3 Framework 2.4.1</span><br><span class="line">Progress:  100.00               PDB scanning finished</span><br><span class="line">PID     PPID    ImageFileName   Offset(V)       Threads Handles SessionId       Wow64   CreateTime</span><br><span class="line"> ExitTime       File output</span><br><span class="line"></span><br><span class="line">4       0       System  0xfa8018d4b9e0  68      442     N/A     False   2022-08-13 11:46:15.000000</span><br><span class="line"> N/A    Disabled</span><br><span class="line">224     4       smss.exe        0xfa80265f99f0  2       29      N/A     False   2022-08-13 11:46:15.000000     N/A     Disabled</span><br><span class="line">300     288     csrss.exe       0xfa801ab36b30  8       342     0       False   2022-08-13 11:46:15.000000     N/A     Disabled</span><br><span class="line">348     288     wininit.exe     0xfa8024e80340  3       76      0       False   2022-08-13 11:46:15.000000     N/A     Disabled</span><br><span class="line">356     340     csrss.exe       0xfa8018e127c0  7       219     1       False   2022-08-13 11:46:15.000000     N/A     Disabled</span><br><span class="line">396     340     winlogon.exe    0xfa8019fa5060  6       118     1       False   2022-08-13 11:46:15.000000     N/A     Disabled</span><br><span class="line">440     348     services.exe    0xfa801ab2ab30  10      174     0       False   2022-08-13 11:46:15.000000     N/A     Disabled</span><br><span class="line">448     348     lsass.exe       0xfa801abc7060  6       511     0       False   2022-08-13 11:46:15.000000     N/A     Disabled</span><br><span class="line">456     348     lsm.exe 0xfa801a482910  10      138     0       False   2022-08-13 11:46:15.000000</span><br><span class="line"> N/A    Disabled</span><br><span class="line">560     440     svchost.exe     0xfa801ac4c7c0  11      352     0       False   2022-08-13 11:46:15.000000     N/A     Disabled</span><br><span class="line">624     440     svchost.exe     0xfa8020ba1790  7       231     0       False   2022-08-13 11:46:15.000000     N/A     Disabled</span><br><span class="line">676     440     svchost.exe     0xfa801ac8eb30  20      379     0       False   2022-08-13 11:46:15.000000     N/A     Disabled</span><br><span class="line">768     440     svchost.exe     0xfa801acbb290  22      450     0       False   2022-08-13 11:46:15.000000     N/A     Disabled</span><br><span class="line">844     440     svchost.exe     0xfa801acccb30  48      838     0       False   2022-08-13 11:46:15.000000     N/A     Disabled</span><br><span class="line">912     676     audiodg.exe     0xfa801ad22b30  7       129     0       False   2022-08-13 11:46:15.000000     N/A     Disabled</span><br><span class="line">1000    440     svchost.exe     0xfa801ad512f0  13      266     0       False   2022-08-13 11:46:16.000000     N/A     Disabled</span><br><span class="line">304     440     svchost.exe     0xfa801ad66b30  17      369     0       False   2022-08-13 11:46:16.000000     N/A     Disabled</span><br><span class="line">360     440     spoolsv.exe     0xfa801adfe780  13      265     0       False   2022-08-13 11:46:16.000000     N/A     Disabled</span><br><span class="line">1064    440     svchost.exe     0xfa801ae54b30  22      305     0       False   2022-08-13 11:46:16.000000     N/A     Disabled</span><br><span class="line">1236    440     taskhost.exe    0xfa801aeae140  11      204     1       False   2022-08-13 11:46:16.000000     N/A     Disabled</span><br><span class="line">1324    768     dwm.exe 0xfa801af42670  5       71      1       False   2022-08-13 11:46:16.000000</span><br><span class="line"> N/A    Disabled</span><br><span class="line">1336    1312    explorer.exe    0xfa801af46b30  31      724     1       False   2022-08-13 11:46:16.000000     N/A     Disabled#此处有个文件资源管理器的进程</span><br><span class="line">1392    440     QQProtect.exe   0xfa801af79060  15      196     0       True    2022-08-13 11:46:16.000000     N/A     Disabled</span><br><span class="line">1108    440     SearchIndexer.  0xfa801ae22b30  13      639     0       False   2022-08-13 11:46:22.000000     N/A     Disabled</span><br><span class="line">1452    1108    SearchProtocol  0xfa801af01b30  7       310     0       False   2022-08-13 11:46:22.000000     N/A     Disabled</span><br><span class="line">1616    1108    SearchFilterHo  0xfa801aefab30  6       93      0       False   2022-08-13 11:46:22.000000     N/A     Disabled</span><br><span class="line">828     1336    MRCv120.exe     0xfa801abf8060  14      282     1       True    2022-08-13 11:48:02.000000     N/A     Disabled</span><br></pre></td></tr></table></figure></div><p>搜索桌面文件</p><div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">vol -f secret.raw windows.filescan |grep Desktop</span><br><span class="line">0x6c9c6290 100.0\Users\Admin\Links\Desktop.lnk  216</span><br><span class="line">0x6d526f20      \Users\Admin\Desktop\MRCv120.exe        216</span><br><span class="line">0x72e8bf20      \Users\Admin\Desktop\EULAaccepted.dat   216</span><br><span class="line">0x7d80a7d0      \Users\Admin\Desktop\gift.jpg   216#这三个文件比较重要</span><br><span class="line">0x7d84af20      \Users\Admin\Desktop\hint.txt   216#</span><br><span class="line">0x7d84e350      \Users\Admin\Desktop\secret.zip 216#</span><br><span class="line">0x7da64360      \ProgramData\Microsoft\Windows\Start Menu\Programs\Accessories\Desktop.ini      216</span><br><span class="line">0x7da66c70      \Users\Public\Desktop\desktop.ini       216</span><br><span class="line">0x7da66dc0      \Users\Admin\AppData\Roaming\Microsoft\Windows\Start Menu\Programs\Accessories\Desktop.ini      216</span><br><span class="line">0x7da68070      \Users\Admin\AppData\Roaming\Microsoft\Windows\Start Menu\Programs\Maintenance\Desktop.ini      216</span><br><span class="line">0x7da68c00      \Users\Admin\AppData\Roaming\Microsoft\Windows\Start Menu\Programs\Accessories\Accessibility\Desktop.ini                                                                                          216</span><br><span class="line">0x7da6af20      \Users\Admin\AppData\Roaming\Microsoft\Windows\Start Menu\Programs\Accessories\System Tools\Desktop.ini                                                                                           216</span><br><span class="line">0x7da6dab0      \ProgramData\Microsoft\Windows\Start Menu\Programs\Maintenance\Desktop.ini      216</span><br><span class="line">0x7da6fab0      \ProgramData\Microsoft\Windows\Start Menu\Programs\Accessories\Accessibility\Desktop.ini        216</span><br><span class="line">0x7da6fc00      \ProgramData\Microsoft\Windows\Start Menu\Programs\Accessories\System Tools\Desktop.ini 216</span><br><span class="line">0x7da704a0      \ProgramData\Microsoft\Windows\Start Menu\Programs\Accessories\Tablet PC\Desktop.ini    216</span><br><span class="line">0x7da7f310      \Users\Admin\Desktop    216</span><br><span class="line">0x7da7f4e0      \Users\Admin\Desktop    216</span><br><span class="line">0x7da80740      \Users\Public\Desktop\Glary Tracks Eraser.lnk   216</span><br><span class="line">0x7da81670      \Users\Public\Desktop   216</span><br><span class="line">0x7da81b70      \Users\Public\Desktop   216</span><br><span class="line">0x7dae0420      \Users\Admin\Desktop\wechat.txt 216</span><br><span class="line">0x7dc47bc0      \ProgramData\Microsoft\Windows\Start Menu\Programs\Accessories\Remote Desktop Connection.lnk    216</span><br><span class="line">0x7de7c070      \Users\Admin\Desktop\MRCv120.exe        216</span><br><span class="line">0x7dfa9150      \Users\Admin\Desktop\MRCC206.tmp        216</span><br><span class="line">0x7e144d20      \Users\Admin\Desktop\desktop.ini        216</span><br><span class="line">0x7e614420      \Users\Admin\Desktop    216</span><br><span class="line">0x7ee47230      \Users\Public\Desktop\Firefox.lnk       216</span><br><span class="line">0x7f1e6ad0      \Users\Admin\Desktop\111.raw    216</span><br></pre></td></tr></table></figure></div><p>dump三个文件,发现hint.txt无法dump</p><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">vol -f secret.raw windows.dump --physaddr 0x7d80a7d0</span><br><span class="line">vol -f secret.raw windows.dump --physaddr 0x7d84af20</span><br><span class="line">vol -f secret.raw windows.dump --physaddr 0x7d84e350</span><br></pre></td></tr></table></figure></div><p>通过diskgenius打开该镜像获取文件</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/runwu2204/Blog_imgs/202307231630764.png"                      alt="image-20230723163030671"                ></p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/runwu2204/Blog_imgs/202307231630255.png"                      alt="image-20230723163054165"                ></p><p>成功找到桌面文件</p><p>hint.txt为is _ not （此处有个空格16进制数为0x20）</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/runwu2204/Blog_imgs/202307231631911.png"                      alt="image-20230723163146810"                ></p><p>其余两个文件为一个压缩包和一个jpg</p><p>jpg明显左下角有字，更改长宽</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="C:\Users\wrwrw\AppData\Roaming\Typora\typora-user-images\image-20230723163840020.png"                      alt="image-20230723163840020"                ></p><p>显示Nothing is more important than your life!是Passwd</p><p>输入压缩包后错误，根据hint文件中的提示，将空格转化为_</p><div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">In [<span class="number">2</span>]: <span class="string">&quot;Nothing is more important than your life!&quot;</span>.replace(<span class="string">&#x27; &#x27;</span>,<span class="string">&#x27;_&#x27;</span>)</span><br><span class="line">Out[<span class="number">2</span>]: <span class="string">&#x27;Nothing_is_more_important_than_your_life!&#x27;</span></span><br></pre></td></tr></table></figure></div><p>解压后文件显示</p><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">A gift for You:  wHeMscYvTluyRvjf5d7AEX5K4VlZeU2IiGpKLFzek1Q=</span><br></pre></td></tr></table></figure></div><p>通过搜索wp发现是wechat数据库加密的key</p><p>wechat.txt就是被加密的数据库,直接通过diskgenius无法正常提取，通过Volatility dump下来(需要将.dat文件改成.db文件)</p><div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">vol -f secret.raw windows.filescan |grep wechat</span></span><br><span class="line">0x7dae0420 100.0\Users\Admin\Desktop\wechat.txt 216</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">vol -f secret.raw windows.dump --physaddr 0x7dae0420</span></span><br><span class="line">Volatility 3 Framework 2.4.1</span><br><span class="line">Progress:  100.00               PDB scanning finished</span><br><span class="line">Cache   FileObject      FileName        Result</span><br><span class="line"></span><br><span class="line">DataSectionObject       0x7dae0420      wechat.txt      file.0x7dae0420.0xfa8019afc6c0.DataSectionObject.wechat.txt.dat</span><br></pre></td></tr></table></figure></div><p>然后通过搜索wechat解密脚本<a class="link"   href="https://www.cnblogs.com/zysgmzb/p/16599501.html" >2022巅峰极客初赛 Misc wp - zysgmzb - 博客园 (cnblogs.com) <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p><div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="keyword">from</span> Crypto.Cipher <span class="keyword">import</span> AES</span><br><span class="line"><span class="keyword">import</span> hashlib, hmac, ctypes</span><br><span class="line"><span class="keyword">from</span> base64 <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line">SQLITE_FILE_HEADER = <span class="built_in">bytes</span>(<span class="string">&quot;SQLite format 3&quot;</span>,encoding=<span class="string">&#x27;ASCII&#x27;</span>) + <span class="built_in">bytes</span>(<span class="number">1</span>)<span class="comment">#文件头</span></span><br><span class="line">IV_SIZE = <span class="number">16</span></span><br><span class="line">HMAC_SHA1_SIZE = <span class="number">20</span></span><br><span class="line">KEY_SIZE = <span class="number">32</span></span><br><span class="line">DEFAULT_PAGESIZE = <span class="number">4096</span> <span class="comment">#4048数据 + 16IV + 20 HMAC + 12</span></span><br><span class="line">DEFAULT_ITER = <span class="number">64000</span></span><br><span class="line"><span class="comment">#yourkey</span></span><br><span class="line">password = b64decode(<span class="string">b&quot;wHeMscYvTluyRvjf5d7AEX5K4VlZeU2IiGpKLFzek1Q=&quot;</span>)<span class="comment">#获取的key</span></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">r&#x27;dump下来的db文件地址&#x27;</span>, <span class="string">&#x27;rb&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    blist = f.read()</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">len</span>(blist))</span><br><span class="line"></span><br><span class="line">salt = blist[:<span class="number">16</span>]<span class="comment">#微信将文件头换成了盐</span></span><br><span class="line">key = hashlib.pbkdf2_hmac(<span class="string">&#x27;sha1&#x27;</span>, password, salt, DEFAULT_ITER, KEY_SIZE)<span class="comment">#获得Key</span></span><br><span class="line"></span><br><span class="line">first = blist[<span class="number">16</span>:DEFAULT_PAGESIZE]<span class="comment">#丢掉salt</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># import struct</span></span><br><span class="line">mac_salt = <span class="built_in">bytes</span>([x^<span class="number">0x3a</span> <span class="keyword">for</span> x <span class="keyword">in</span> salt])</span><br><span class="line">mac_key = hashlib.pbkdf2_hmac(<span class="string">&#x27;sha1&#x27;</span>, key, mac_salt, <span class="number">2</span>, KEY_SIZE)</span><br><span class="line"></span><br><span class="line">hash_mac = hmac.new(mac_key ,digestmod = <span class="string">&#x27;sha1&#x27;</span>)<span class="comment">#用第一页的Hash测试一下</span></span><br><span class="line">hash_mac.update(first[:-<span class="number">32</span>])</span><br><span class="line">hash_mac.update(<span class="built_in">bytes</span>(ctypes.c_int(<span class="number">1</span>)))</span><br><span class="line"><span class="comment"># hash_mac.update(struct.pack(&#x27;=I&#x27;,1))</span></span><br><span class="line"><span class="keyword">if</span> (hash_mac.digest() == first[-<span class="number">32</span>:-<span class="number">12</span>]):</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;Correct Password&#x27;</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="keyword">raise</span> RuntimeError(<span class="string">&#x27;Wrong Password&#x27;</span>)</span><br><span class="line"></span><br><span class="line">blist = [blist[i:i+DEFAULT_PAGESIZE] <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(DEFAULT_PAGESIZE,<span class="built_in">len</span>(blist),DEFAULT_PAGESIZE)]</span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">r&#x27;输出的db文件地址&#x27;</span>, <span class="string">&#x27;wb&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    f.write(SQLITE_FILE_HEADER)<span class="comment">#写入文件头</span></span><br><span class="line">    t = AES.new(key ,AES.MODE_CBC ,first[-<span class="number">48</span>:-<span class="number">32</span>])</span><br><span class="line">    f.write(t.decrypt(first[:-<span class="number">48</span>]))</span><br><span class="line">    f.write(first[-<span class="number">48</span>:])</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> blist:</span><br><span class="line">            t = AES.new(key ,AES.MODE_CBC ,i[-<span class="number">48</span>:-<span class="number">32</span>])</span><br><span class="line">            f.write(t.decrypt(i[:-<span class="number">48</span>]))</span><br><span class="line">            f.write(i[-<span class="number">48</span>:])</span><br></pre></td></tr></table></figure></div><p>成功输出</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="C:\Users\wrwrw\AppData\Roaming\Typora\typora-user-images\image-20230724005411976.png"                      alt="image-20230724005411976"                ></p><p>直接搜一下flag</p><div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">strings a.db |grep flag</span><br><span class="line">klllflag&#123;The_Is_Y0ur_prize&#125;</span><br></pre></td></tr></table></figure></div>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;[&lt;a class=&quot;link&quot;   href=&quot;https://www.nssctf.cn/problem/2506&quot; &gt;巅峰极客 2022]easy_Forensic | NSSCTF &lt;i class=&quot;fa-regular fa-arrow-up-right-fro</summary>
      
    
    
    
    <category term="CTF WP" scheme="http://example.com/categories/CTF-WP/"/>
    
    <category term="Misc" scheme="http://example.com/categories/CTF-WP/Misc/"/>
    
    
  </entry>
  
  <entry>
    <title>内存取证</title>
    <link href="http://example.com/2023/07/22/Misc/%E5%86%85%E5%AD%98%E5%8F%96%E8%AF%81/"/>
    <id>http://example.com/2023/07/22/Misc/%E5%86%85%E5%AD%98%E5%8F%96%E8%AF%81/</id>
    <published>2023-07-22T14:13:27.000Z</published>
    <updated>2023-07-23T08:13:40.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="只是一些草稿"><a href="#只是一些草稿" class="headerlink" title="只是一些草稿"></a>只是一些草稿</h2><p>取证工具地址<a class="link"   href="https://github.com/volatilityfoundation/volatility3" >volatility3 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p><p>参考<a class="link"   href="https://blog.csdn.net/m0_68012373/article/details/127419463" >(42条消息) 内存取证-volatility工具的使用 （史上更全教程，更全命令）_路baby的博客-CSDN博客 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p><p>可以在插件后面跟-h获取该插件的帮助</p><div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">vol -f &quot;windows内存转储地址&quot;  windows.info #分析该内存转储的操作系统等其余信息</span><br><span class="line">vol -f &quot;windows内存转储地址&quot;  windows.pslist #会分析该内存的运行进程</span><br><span class="line">vol -f &quot;windows内存转储地址&quot; windows.filescan #分析有什么文件,其中地址是physaddr</span><br><span class="line">vol -f &quot;windows内存转储地址&quot; windows.dump -h</span><br><span class="line">usage: volatility windows.dumpfiles.DumpFiles [-h] [--pid PID] [--virtaddr VIRTADDR] [--physaddr PHYSADDR]</span><br><span class="line"></span><br><span class="line">options:</span><br><span class="line">  -h, --help           show this help message and exit</span><br><span class="line">  --pid PID            Process ID to include (all other processes are excluded)</span><br><span class="line">  --virtaddr VIRTADDR  Dump a single _FILE_OBJECT at this virtual address</span><br><span class="line">  --physaddr PHYSADDR  Dump a single _FILE_OBJECT at this physical address</span><br><span class="line">  vol -f &quot;windows内存转储地址&quot; windows.dump --physaddr &quot;具体文件地址，详情可见windows.filescan插件的结果&quot; #可以将内存文件输出出来</span><br></pre></td></tr></table></figure></div><p>如果无法输出也可以通过diskgenius挂载该转储文件(作为虚拟硬盘),具体方法如下</p><p>1.将其作为虚拟硬盘打开</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/runwu2204/Blog_imgs/202307231459232.png"                      alt="image-20230723145957046"                ></p><p>2.右下角查看文件类型改为所有文件</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/runwu2204/Blog_imgs/202307231501287.png"                      alt="image-20230723150121254"                ></p><p>3.右键新出现的虚拟硬盘,选择已删除或格式化后的文件恢复</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/runwu2204/Blog_imgs/202307231507155.png"                      alt="image-20230723150714113"                ></p><p>即可打开对应的镜像获取文件</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="C:\Users\wrwrw\AppData\Roaming\Typora\typora-user-images\image-20230723150407151.png"                      alt="image-20230723150407151"                ></p><h2 id="例题"><a href="#例题" class="headerlink" title="例题"></a>例题</h2><p>[<a class="link"   href="https://www.nssctf.cn/problem/2506" >巅峰极客 2022]easy_Forensic | NSSCTF <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p><p>题目附件是个</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;只是一些草稿&quot;&gt;&lt;a href=&quot;#只是一些草稿&quot; class=&quot;headerlink&quot; title=&quot;只是一些草稿&quot;&gt;&lt;/a&gt;只是一些草稿&lt;/h2&gt;&lt;p&gt;取证工具地址&lt;a class=&quot;link&quot;   href=&quot;https://github.com/volat</summary>
      
    
    
    
    <category term="Misc" scheme="http://example.com/categories/Misc/"/>
    
    
  </entry>
  
  <entry>
    <title>ret2libc</title>
    <link href="http://example.com/2023/07/21/Pwn/ret2libc/"/>
    <id>http://example.com/2023/07/21/Pwn/ret2libc/</id>
    <published>2023-07-20T16:30:25.000Z</published>
    <updated>2023-07-20T17:11:15.000Z</updated>
    
    <content type="html"><![CDATA[<p>ret2libc基于没有system或没有&#x2F;bin&#x2F;sh($0可以代替,因为在linux环境变量$0就是当前终端)的情况，构造出一条ret调用链来</p><h3 id="工具"><a href="#工具" class="headerlink" title="工具"></a>工具</h3><h3 id="ROPgadget"><a href="#ROPgadget" class="headerlink" title="ROPgadget"></a>ROPgadget</h3><div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install ROPgadget</span><br></pre></td></tr></table></figure></div><p>ROPgadget可以用于获取需要的字符串，汇编指令，最后可以通过栈溢出跳往对应的汇编指令中</p><h3 id="LibcSearcher"><a href="#LibcSearcher" class="headerlink" title="LibcSearcher"></a>LibcSearcher</h3><div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install LibcSearcher</span><br></pre></td></tr></table></figure></div><p>该工具可以根据你所给的指令名称对应的指令地址获取对应的外部got表地址</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/runwu2204/Blog_imgs/202307210035601.png"                      alt="image-20230721003509555"                ></p><div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">libc=LibcSearcher(<span class="string">&#x27;指令名称&#x27;</span>,指令地址)<span class="comment">#可以获取内部got表对应地址所对应的glibc</span></span><br><span class="line">libc.dump(<span class="string">&quot;需要的指令&quot;</span>)<span class="comment">#可以获取需要指令的外部got表地址</span></span><br></pre></td></tr></table></figure></div><h3 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h3><table><thead><tr><th align="left">section</th><th align="left">所在 segment</th><th align="left">section 属性</th><th align="left">用途</th></tr></thead><tbody><tr><td align="left">.plt</td><td align="left">代码段</td><td align="left">RE（可读，可执行）</td><td align="left">.plt section 实际就是通常所说的过程链接表（Procedure Linkage Table, PLT）</td></tr><tr><td align="left">.plt.got</td><td align="left">代码段</td><td align="left">RE</td><td align="left">.plt.got section 用于存放 __cxa_finalize 函数对应的 PLT 条目</td></tr><tr><td align="left">.got</td><td align="left">数据段</td><td align="left">RW（可读，可写）</td><td align="left">.got section 中可以用于存放全局变量的地址；.got section 中也可以用于存放不需要延迟绑定的函数的地址。</td></tr><tr><td align="left">.got.plt</td><td align="left">数据段</td><td align="left">RW</td><td align="left">.got.plt section 用于存放需要延迟绑定的函数的地址</td></tr></tbody></table><h4 id="地址泄露"><a href="#地址泄露" class="headerlink" title="地址泄露"></a>地址泄露</h4><p>当puts elfgot表内函数地址时，会puts出真正的表内的函数地址</p><div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">puts_got=elf.got[<span class="string">&#x27;puts&#x27;</span>]<span class="comment">#获取的实际上是got.plt地址</span></span><br><span class="line">puts_plt=elf.plt[<span class="string">&#x27;puts&#x27;</span>]</span><br><span class="line">inputs=<span class="number">0x40066B</span></span><br><span class="line">pop_rdi_retn=<span class="number">0x400743</span><span class="comment">#ROPgadget --binary babyof --only &#x27;pop|ret&#x27; |grep rdi</span></span><br><span class="line">p.sendafter(<span class="string">&#x27;Do&#x27;</span>,<span class="string">b&#x27;a&#x27;</span>*o+p64(pop_rdi_retn)+p64(puts_got)+p64(puts_plt)+p64(inputs)+<span class="string">b&#x27;\n&#x27;</span>)<span class="comment">#当收到Do就输出后面的字符串</span></span><br></pre></td></tr></table></figure></div><p>pop_rdi_retn 将当前栈顶值(puts_got)传给rdi,然后将栈顶的指针向下移动到(puts_plt),并在之后跳转到栈顶值(puts_plt)</p><p>rdi(puts_got)将作为参数被puts_plt(puts函数)输出</p><p>因此可以泄露出puts的实际got表地址,不是elf中的got.plt</p><h4 id="system函数"><a href="#system函数" class="headerlink" title="system函数"></a>system函数</h4><p>详情可见[StormQ’s Blog (csstormq.github.io)](<a class="link"   href="https://csstormq.github.io/blog/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F%E7%AF%87%E4%B9%8B%E9%93%BE%E6%8E%A5%EF%BC%8814%EF%BC%89%EF%BC%9A.plt%E3%80%81.plt.got%E3%80%81.got" >https://csstormq.github.io/blog/计算机系统篇之链接（14）：.plt、.plt.got、.got <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 和 .got.plt section 之间的区别)</p><p>因为system函数地址未知，但我们可以通过外部got表的地址，计算内部got表地址，获取got表内的函数(当加载libc的时候，函数都会在got表内),got表内函数的相对地址不会变</p><div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">libc=LibcSearcher(<span class="string">&#x27;puts&#x27;</span>,puts)</span><br><span class="line">base=puts-libc.dump(<span class="string">&#x27;puts&#x27;</span>)<span class="comment">#此处是与泄露的got地址相减，就可以获取got表的基址了</span></span><br><span class="line">system=base+libc.dump(<span class="string">&#x27;system&#x27;</span>)<span class="comment">#因为函数相对地址不变,就可以找到内部got表内的system函数地址</span></span><br></pre></td></tr></table></figure></div><h4 id="shell字符串"><a href="#shell字符串" class="headerlink" title="shell字符串"></a>shell字符串</h4><p>题目中可能没有提供字符串，在libc中会含有该字符串，当泄露了got表后可以获得</p><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">system=base+libc.dump(&#x27;system&#x27;)#因为函数相对地址不变,就可以找到内部got表内的system函数地址</span><br></pre></td></tr></table></figure></div><h4 id="传递参数"><a href="#传递参数" class="headerlink" title="传递参数"></a>传递参数</h4><p>x64常用rdi作为传递的第一个参数，所以我们需要一个将shell地址传给rdi的汇编指令(可以将shell字符串的地址存在栈中，通过pop edi调用)，同时又得让命令走向按照我们的意愿来，所以还得有个retn</p><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">pop rdi</span><br><span class="line"></span><br><span class="line">retn</span><br></pre></td></tr></table></figure></div><div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ROPgadget --binary &quot;二进制文件&quot; --only &#x27;pop|ret&#x27; |grep rdi #可以获取pop rdi retn的地址</span><br></pre></td></tr></table></figure></div><h3 id="栈对齐"><a href="#栈对齐" class="headerlink" title="栈对齐"></a>栈对齐</h3><p>system函数需要栈为16字节的倍数，因为此处只用了24字节(传参地址,shell字符串地址,system地址)</p><p>还需要一个地址作为占位,可以选择只有retn指令的地址</p><div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ROPgadget --binary &quot;二进制文件&quot; --only &#x27;ret&#x27; #获取只有retn命令的地址</span><br></pre></td></tr></table></figure></div><h3 id="ROP链"><a href="#ROP链" class="headerlink" title="ROP链"></a>ROP链</h3><p>需要有个具体的栈的顺序</p><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(retn地址,传参地址,shell字符串地址,system地址)</span><br></pre></td></tr></table></figure></div><p>这样随着逐渐retn就可以获取shell了</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;ret2libc基于没有system或没有&amp;#x2F;bin&amp;#x2F;sh($0可以代替,因为在linux环境变量$0就是当前终端)的情况，构造出一条ret调用链来&lt;/p&gt;
&lt;h3 id=&quot;工具&quot;&gt;&lt;a href=&quot;#工具&quot; class=&quot;headerlink&quot; titl</summary>
      
    
    
    
    <category term="Pwn" scheme="http://example.com/categories/Pwn/"/>
    
    
  </entry>
  
  <entry>
    <title>通过wsl实时pwn</title>
    <link href="http://example.com/2023/07/21/Pwn/%E9%80%9A%E8%BF%87wsl%E5%AE%9E%E6%97%B6pwn/"/>
    <id>http://example.com/2023/07/21/Pwn/%E9%80%9A%E8%BF%87wsl%E5%AE%9E%E6%97%B6pwn/</id>
    <published>2023-07-20T16:22:13.000Z</published>
    <updated>2023-07-20T16:29:22.000Z</updated>
    
    <content type="html"><![CDATA[<p>vscode可装wsl插件与wsl远程连接</p><p>因为windows的环境跟linux不同获取了shell也无法正常执行命令所以需要使用wsl终端</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;vscode可装wsl插件与wsl远程连接&lt;/p&gt;
&lt;p&gt;因为windows的环境跟linux不同获取了shell也无法正常执行命令所以需要使用wsl终端&lt;/p&gt;
</summary>
      
    
    
    
    <category term="Pwn" scheme="http://example.com/categories/Pwn/"/>
    
    
  </entry>
  
  <entry>
    <title>dp泄露</title>
    <link href="http://example.com/2023/07/19/Crypto/dp%E6%B3%84%E9%9C%B2/"/>
    <id>http://example.com/2023/07/19/Crypto/dp%E6%B3%84%E9%9C%B2/</id>
    <published>2023-07-19T08:08:26.000Z</published>
    <updated>2023-07-19T09:06:34.000Z</updated>
    
    <content type="html"><![CDATA[<p>dp &#x3D; d%(p-1)</p><p>∴dp*e&#x3D;d*e mod(p-1)</p><p>∴d*e&#x3D;dp*e+k1*(p-1)  ①</p><p>又有e*d &#x3D; 1mod((p-1)*(q-1))</p><p>∴e*d&#x3D;k2*(p-1)*(q-1)+1 ②</p><p>①带入②得</p><p>dp*e+k1*(p-1)&#x3D;k2*(p-1)*(q-1)+1k1,k2∈Z</p><p>dp*e &#x3D;k2*(p-1)*(q-1)+k3*(p-1)+1k2,k3∈Z</p><p>e*dp&#x3D;(k2*(q-1)+k3)*(p-1)+1</p><p>∵dp&lt;q-1</p><p>∴(k2*(q-1)+k3)&lt;e</p><p>设(k2*(q-1)+k3)&#x3D;i</p><p>可以通过遍历求出i的值</p><p>根据已知条件n&#x3D;p*q,i*(p-1)+1&#x3D;dp*e</p><div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,e):</span><br><span class="line"><span class="keyword">if</span> (dp*e-<span class="number">1</span>)%i==<span class="number">0</span>:</span><br><span class="line">p=((dp*e-<span class="number">1</span>)//i)+<span class="number">1</span></span><br><span class="line"><span class="keyword">if</span> n%p==<span class="number">0</span>:</span><br><span class="line">q=n//p</span><br><span class="line"><span class="keyword">if</span> e*dp==i*(p-<span class="number">1</span>)+<span class="number">1</span>:</span><br><span class="line">d=<span class="built_in">__import__</span>(<span class="string">&#x27;gmpy2&#x27;</span>).invert(e,(p-<span class="number">1</span>)*(q-<span class="number">1</span>))</span><br><span class="line"><span class="built_in">print</span>(long_to_bytes(<span class="built_in">pow</span>(c,d,n)))</span><br><span class="line"><span class="keyword">break</span></span><br><span class="line"></span><br></pre></td></tr></table></figure></div><p>例题[<a class="link"   href="https://www.nssctf.cn/problem/3973" >LitCTF 2023]P_Leak | NSSCTF <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p><p>给了dp,n,c可以直接求</p><div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">e=<span class="number">65537</span></span><br><span class="line"><span class="comment"># m=bytes_to_long(b&#x27;xxxx&#x27;)</span></span><br><span class="line"><span class="comment"># p=getPrime(512)</span></span><br><span class="line"><span class="comment"># q=getPrime(512)</span></span><br><span class="line"><span class="comment"># n=p*q</span></span><br><span class="line"><span class="comment"># phi=(p-1)*(q-1)</span></span><br><span class="line"><span class="comment"># d=inverse(e,phi)</span></span><br><span class="line"><span class="comment"># dp=d%(p-1)</span></span><br><span class="line"><span class="comment"># c=pow(m,e,n)</span></span><br><span class="line"><span class="comment"># print(&quot;dp=&quot;,dp)</span></span><br><span class="line"><span class="comment"># print(&quot;n=&quot;,n)</span></span><br><span class="line"><span class="comment"># print(&quot;c=&quot;,c)</span></span><br><span class="line">dp= <span class="number">5892502924236878675675338970704766304539618343869489297045857272605067962848952532606770917225218534430490745895652561015493032055636004130931491316020329</span></span><br><span class="line">n= <span class="number">50612159190225619689404794427464916374543237300894011803225784470008992781409447214236779975896311093686413491163221778479739252804271270231391599602217675895446538524670610623369953168412236472302812808639218392319634397138871387898452935081756580084070333246950840091192420542761507705395568904875746222477</span></span><br><span class="line">c= <span class="number">39257649468514605476432946851710016346016992413796229928386230062780829495844059368939749930876895443279723032641876662714088329296631207594999580050131450251288839714711436117326769029649419789323982613380617840218087161435260837263996287628129307328857086987521821533565738409794866606381789730458247531619</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,e):</span><br><span class="line"><span class="keyword">if</span> (dp*e-<span class="number">1</span>)%i==<span class="number">0</span>:</span><br><span class="line">p=((dp*e-<span class="number">1</span>)//i)+<span class="number">1</span></span><br><span class="line"><span class="keyword">if</span> n%p==<span class="number">0</span>:</span><br><span class="line">q=n//p</span><br><span class="line"><span class="keyword">if</span> e*dp==i*(p-<span class="number">1</span>)+<span class="number">1</span>:</span><br><span class="line">d=<span class="built_in">__import__</span>(<span class="string">&#x27;gmpy2&#x27;</span>).invert(e,(p-<span class="number">1</span>)*(q-<span class="number">1</span>))</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">__import__</span>(<span class="string">&#x27;Crypto.Util.number&#x27;</span>, fromlist=[<span class="string">&#x27;*&#x27;</span>]).long_to_bytes(<span class="built_in">pow</span>(c,d,n)))</span><br><span class="line"><span class="keyword">break</span></span><br><span class="line"></span><br></pre></td></tr></table></figure></div>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;dp &amp;#x3D; d%(p-1)&lt;/p&gt;
&lt;p&gt;∴dp*e&amp;#x3D;d*e mod(p-1)&lt;/p&gt;
&lt;p&gt;∴d*e&amp;#x3D;dp*e+k1*(p-1)  ①&lt;/p&gt;
&lt;p&gt;又有e*d &amp;#x3D; 1mod((p-1)*(q-1))&lt;/p&gt;
&lt;p&gt;∴e*d&amp;#x3D</summary>
      
    
    
    
    <category term="Crypto" scheme="http://example.com/categories/Crypto/"/>
    
    
  </entry>
  
  <entry>
    <title>Sagemath</title>
    <link href="http://example.com/2023/07/18/Crypto/Sagemath/"/>
    <id>http://example.com/2023/07/18/Crypto/Sagemath/</id>
    <published>2023-07-18T13:30:06.000Z</published>
    <updated>2023-07-18T14:32:16.000Z</updated>
    
    <content type="html"><![CDATA[<p>可以通过wsl apt包管理器安装sagemath</p><div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install sagemath</span><br></pre></td></tr></table></figure></div><p>再在windows中vscode安装wsl插件连接wsl，再在扩展中安装python插件</p><p>将python路径设置为sage-python的路径 即可在windows中即时编译运行</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/runwu2204/Blog_imgs/202307182231531.png"                      alt="image-20230718223137438"                ></p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/runwu2204/Blog_imgs/202307182231043.png"                      alt="image-20230718223114951"                ></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;可以通过wsl apt包管理器安装sagemath&lt;/p&gt;
&lt;div class=&quot;highlight-container&quot; data-rel=&quot;Shell&quot;&gt;&lt;figure class=&quot;iseeu highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td clas</summary>
      
    
    
    
    <category term="Crypto" scheme="http://example.com/categories/Crypto/"/>
    
    
  </entry>
  
  <entry>
    <title>hashcat</title>
    <link href="http://example.com/2023/07/18/Crypto/hashcat/"/>
    <id>http://example.com/2023/07/18/Crypto/hashcat/</id>
    <published>2023-07-18T08:38:51.000Z</published>
    <updated>2023-07-18T08:59:11.000Z</updated>
    
    <content type="html"><![CDATA[<p><a class="link"   href="https://hashcat.net/hashcat/" >hashcat - advanced password recovery <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p><p>也可以通过</p><div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install hashcat</span><br></pre></td></tr></table></figure></div><p>nvidia需要cuda kit支持</p><h2 id="常用hash模式标识符"><a href="#常用hash模式标识符" class="headerlink" title="常用hash模式标识符"></a>常用hash模式标识符</h2><div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">-m 0 #MD5</span><br><span class="line">-m 100 #SHA1</span><br><span class="line">-m 1400 #SHA256</span><br><span class="line">-m 1700#SHA512</span><br><span class="line">-m 3200#bcrypt</span><br><span class="line">-m 1000 #NTLm</span><br><span class="line">-m 400#WordPress</span><br><span class="line">-m 300#MySQL</span><br></pre></td></tr></table></figure></div><h2 id="常用攻击模式"><a href="#常用攻击模式" class="headerlink" title="常用攻击模式"></a>常用攻击模式</h2><h3 id="字典攻击"><a href="#字典攻击" class="headerlink" title="字典攻击"></a>字典攻击</h3><p>根据字典内值进行暴力搜索</p><div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-a 0 -m hash模式标识符 待破解hash 字典</span><br></pre></td></tr></table></figure></div><h3 id="组合攻击"><a href="#组合攻击" class="headerlink" title="组合攻击"></a>组合攻击</h3><p>组合多个字典值进行猜测</p><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-a 1 -m hash模式标识符 待破解hash 后可跟多个字典</span><br></pre></td></tr></table></figure></div><h3 id="掩码攻击"><a href="#掩码攻击" class="headerlink" title="掩码攻击"></a>掩码攻击</h3><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-a 3 -m hash模式标识符 待破解hash 带掩码字符串</span><br></pre></td></tr></table></figure></div><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">?a任意字符</span><br><span class="line">?H大写16进制字符</span><br><span class="line">?h小写16进制字符</span><br><span class="line">?d数字字符</span><br><span class="line">?u大写字母</span><br><span class="line">?l小写字符</span><br><span class="line">?s特殊字符</span><br><span class="line">?b一字节内所有字符</span><br></pre></td></tr></table></figure></div><p>可以使用-w 线程数来使用多线程</p><p>其余用法可见hashcat -help</p><h2 id="例题"><a href="#例题" class="headerlink" title="例题"></a>例题</h2><p>[<a class="link"   href="https://www.nssctf.cn/problem/3971" >LitCTF 2023]md5的破解 | NSSCTF <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p><div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> hashlib <span class="keyword">import</span> md5</span><br><span class="line"><span class="keyword">from</span> secret <span class="keyword">import</span> flag</span><br><span class="line"></span><br><span class="line"><span class="comment">#flag全是由小写字母及数字组成</span></span><br><span class="line">m=md5(flag).hexdigest()</span><br><span class="line"><span class="built_in">print</span>(flag[:<span class="number">13</span>]+flag[<span class="number">15</span>:<span class="number">18</span>]+flag[<span class="number">19</span>:<span class="number">34</span>]+flag[<span class="number">35</span>:<span class="number">38</span>])</span><br><span class="line"><span class="built_in">print</span>(m)</span><br><span class="line"><span class="comment"># b&#x27;LitCTF&#123;md5can3derypt213thoughcrsh&#125;&#x27;</span></span><br><span class="line"><span class="comment"># 496603d6953a15846cd7cc476f146771</span></span><br><span class="line"></span><br></pre></td></tr></table></figure></div><p>给了一部分字符和字符串的hash值可以通过hashcat掩码进行求值</p><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hashcat -a 3 -m 0 496603d6953a15846cd7cc476f146771 LitCTF&#123;md5can?a?a3de?arypt213thoughcr?ash&#125;</span><br></pre></td></tr></table></figure></div><div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">hashcat -a 3 -m 0 496603d6953a15846cd7cc476f146771 LitCTF&#123;md5can?a?a3de?arypt213thoughcr?ash&#125;</span><br><span class="line">hashcat (v6.2.5) starting</span><br><span class="line"></span><br><span class="line">* Device #1: WARNING! Kernel exec timeout is not disabled.</span><br><span class="line">             This may cause &quot;CL_OUT_OF_RESOURCES&quot; or related errors.</span><br><span class="line">             To disable the timeout, see: https://hashcat.net/q/timeoutpatch</span><br><span class="line">* Device #2: WARNING! Kernel exec timeout is not disabled.</span><br><span class="line">             This may cause &quot;CL_OUT_OF_RESOURCES&quot; or related errors.</span><br><span class="line">             To disable the timeout, see: https://hashcat.net/q/timeoutpatch</span><br><span class="line">nvmlDeviceGetFanSpeed(): Not Supported</span><br><span class="line"></span><br><span class="line">CUDA API (CUDA 12.2)</span><br><span class="line">====================</span><br><span class="line">* Device #1: NVIDIA GeForce RTX 3060 Laptop GPU, 5135/6143 MB, 30MCU</span><br><span class="line"></span><br><span class="line">OpenCL API (OpenCL 3.0 CUDA 12.2.79) - Platform #1 [NVIDIA Corporation]</span><br><span class="line">=======================================================================</span><br><span class="line">* Device #2: NVIDIA GeForce RTX 3060 Laptop GPU, skipped</span><br><span class="line"></span><br><span class="line">Minimum password length supported by kernel: 0</span><br><span class="line">Maximum password length supported by kernel: 256</span><br><span class="line"></span><br><span class="line">Hashes: 1 digests; 1 unique digests, 1 unique salts</span><br><span class="line">Bitmaps: 16 bits, 65536 entries, 0x0000ffff mask, 262144 bytes, 5/13 rotates</span><br><span class="line"></span><br><span class="line">Optimizers applied:</span><br><span class="line">* Zero-Byte</span><br><span class="line">* Early-Skip</span><br><span class="line">* Not-Salted</span><br><span class="line">* Not-Iterated</span><br><span class="line">* Single-Hash</span><br><span class="line">* Single-Salt</span><br><span class="line">* Brute-Force</span><br><span class="line">* Raw-Hash</span><br><span class="line"></span><br><span class="line">ATTENTION! Pure (unoptimized) backend kernels selected.</span><br><span class="line">Pure kernels can crack longer passwords, but drastically reduce performance.</span><br><span class="line">If you want to switch to optimized kernels, append -O to your commandline.</span><br><span class="line">See the above message to find out about the exact limits.</span><br><span class="line"></span><br><span class="line">Watchdog: Temperature abort trigger set to 90c</span><br><span class="line"></span><br><span class="line">Host memory required for this attack: 1473 MB</span><br><span class="line"></span><br><span class="line">496603d6953a15846cd7cc476f146771:LitCTF&#123;md5can123dexrypt213thoughcrpsh&#125;</span><br></pre></td></tr></table></figure></div><p>在最后hash值冒号后就是破解出的值</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;a class=&quot;link&quot;   href=&quot;https://hashcat.net/hashcat/&quot; &gt;hashcat - advanced password recovery &lt;i class=&quot;fa-regular fa-arrow-up-right-from-s</summary>
      
    
    
    
    <category term="Crypto" scheme="http://example.com/categories/Crypto/"/>
    
    
  </entry>
  
  <entry>
    <title>HNCTF 2022 WEEK3mazes</title>
    <link href="http://example.com/2023/07/18/CTF%20WP/Re/HNCTF%202022%20WEEK3mazes/"/>
    <id>http://example.com/2023/07/18/CTF%20WP/Re/HNCTF%202022%20WEEK3mazes/</id>
    <published>2023-07-18T02:10:12.000Z</published>
    <updated>2023-07-18T03:16:25.000Z</updated>
    
    <content type="html"><![CDATA[<p>脚本参考<a class="link"   href="https://panda0s.top/2021/05/23/%E7%BE%8E%E5%9B%A2CTF-100mazes/" >美团CTF: 100mazes - Pandaos’s blog (panda0s.top) <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p><p>主要函数</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/runwu2204/Blog_imgs/202307181026204.png"                      alt="image-20230718102654109"                ></p><p>此处的地址offset是物理地址，也就是文件内数据的地址，不是ida反编译中的地址</p><p>用010editor查看其物理地址为0x810</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/runwu2204/Blog_imgs/202307181036326.png"                      alt="image-20230718103649242"                ></p><p>通过第一个迷宫函数sub_140001460的地址(0x140001460)与入口点的虚拟地址(0x140001410)相减获取与0x810的相对地址</p><p>再将相对地址与实际的入口地址相加获取第一个迷宫函数物理地址</p><div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">In [2]: hex(0x140001460-0x140001410+0x810)</span><br><span class="line">Out[2]: &#x27;0x860&#x27;#物理地址</span><br></pre></td></tr></table></figure></div><p>可以通过capstone反汇编器读取文件进行依次读取迷宫map1，读取的反汇编代码是带制表符\t的所以也需要带上</p><p>通过调试发现：</p><p>\tmov\tdword ptr [rsp是对map1，和起点的值进行赋值,每次读取rsp后面的值即可</p><p>\tmov\teax, dword ptr [rip 是对方向(wdsa对应的方向字母如第一个函数中是3tkA)进行赋值</p><p>\tlea\trcx, [rip是对map2进行赋值,直接读取后面跟的地址中625个字符即可</p><p>此处相对地址有点难以换算，我直接用的是他们之间的地址规律</p><p>每个迷宫函数相差</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/runwu2204/Blog_imgs/202307181051178.png"                      alt="image-20230718105137152"                ></p><div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">In [3]: 0x140003F20-0x140001460</span><br><span class="line">Out[3]: 10944</span><br></pre></td></tr></table></figure></div><p>每个map2相差</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/runwu2204/Blog_imgs/202307181052138.png"                      alt="image-20230718105224111"                ><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/runwu2204/Blog_imgs/202307181052145.png"                      alt="image-20230718105231120"                ></p><div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">In [4]: 0x140A859E0-0x140A85010</span><br><span class="line">Out[4]: 2512</span><br></pre></td></tr></table></figure></div><p>搜索第一个迷宫函数中map2的物理地址，之后再每个函数+2512即可</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/runwu2204/Blog_imgs/202307181054673.png"                      alt="image-20230718105402620"                ></p><p>exp:</p><div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> capstone <span class="keyword">import</span> Cs</span><br><span class="line"><span class="keyword">from</span> capstone <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">import</span> struct</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">decode</span>(<span class="params">offset,tmp</span>):</span><br><span class="line">    data_bin = <span class="built_in">open</span>(<span class="string">r&#x27;E:\QQsavefile\MobileFile\mazes.exe&#x27;</span>, <span class="string">&#x27;rb&#x27;</span>).read()<span class="comment">#exe路径</span></span><br><span class="line">    data = data_bin[offset: offset+<span class="number">10921</span>]<span class="comment">#每个函数长度为10921</span></span><br><span class="line">    md = Cs(CS_ARCH_X86, CS_MODE_64)</span><br><span class="line">    inscnt = <span class="number">0</span></span><br><span class="line">    inscnt2 = <span class="number">0</span></span><br><span class="line">    map1 = []</span><br><span class="line">    map2 = []</span><br><span class="line">    map3 = []</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> md.disasm(data, offset):</span><br><span class="line">        ins = <span class="string">&quot;0x%x:\t%s\t%s&quot;</span> % (i.address, i.mnemonic, i.op_str)</span><br><span class="line">        <span class="keyword">if</span> <span class="string">&#x27;\tmov\tdword ptr [rsp&#x27;</span> <span class="keyword">in</span> ins <span class="keyword">or</span> <span class="string">&#x27;\tmov\teax, dword ptr [rip&#x27;</span> <span class="keyword">in</span> ins:</span><br><span class="line">            <span class="keyword">if</span> inscnt &lt; <span class="number">625</span>:<span class="comment">#先读625个迷宫字符，作为map1</span></span><br><span class="line">                map1.append(<span class="built_in">int</span>(i.op_str.split(<span class="string">&#x27;, &#x27;</span>)[<span class="number">1</span>], <span class="number">16</span>))</span><br><span class="line">                inscnt += <span class="number">1</span></span><br><span class="line">            <span class="keyword">elif</span> inscnt2 &lt; <span class="number">2</span>:<span class="comment">#625个字符读满后再遇到&#x27;\tmov\tdword ptr [rsp&#x27;就是赋值迷宫起始点的地址</span></span><br><span class="line">                map3.append(<span class="built_in">int</span>(i.op_str.split(<span class="string">&#x27;, &#x27;</span>)[<span class="number">1</span>], <span class="number">16</span>))</span><br><span class="line">                inscnt2 += <span class="number">1</span> </span><br><span class="line">            <span class="keyword">elif</span> inscnt&lt;<span class="number">629</span>:<span class="comment">#最后遇到&#x27;\tmov\teax, dword ptr [rip&#x27;，就对方向赋值</span></span><br><span class="line">                off1 =i.address+<span class="built_in">int</span>(i.op_str.split(<span class="string">&#x27;, &#x27;</span>)[<span class="number">1</span>].split(<span class="string">&#x27;+&#x27;</span>)[<span class="number">1</span>].replace(<span class="string">&#x27;]&#x27;</span>,<span class="string">&#x27;&#x27;</span>),<span class="number">16</span>)</span><br><span class="line">                map1_data = data_bin[<span class="number">0xa76098</span>+tmp*<span class="number">5</span>: <span class="number">0xa76098</span>+<span class="number">4</span>+tmp*<span class="number">5</span> ] <span class="comment">#方向数组存在规律，每个值相差5          </span></span><br><span class="line">                map1=map1+(<span class="built_in">list</span>(map1_data))</span><br><span class="line">                inscnt+=<span class="number">4</span></span><br><span class="line">        <span class="keyword">if</span> <span class="string">&#x27;\tlea\trcx, [rip&#x27;</span> <span class="keyword">in</span> ins:<span class="comment">#遇到这个字符串对map2进行赋值</span></span><br><span class="line">            map2_data = data_bin[tmp*<span class="number">2512</span>+<span class="number">0xa82610</span>: tmp*<span class="number">2512</span>+<span class="number">0xa82610</span>+ <span class="number">4</span> * <span class="number">625</span>]<span class="comment">#map2存在规律每个相差2512</span></span><br><span class="line">            <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">625</span>):</span><br><span class="line">                map2.append(struct.unpack(<span class="string">&quot;I&quot;</span>, map2_data[i * <span class="number">4</span>: i * <span class="number">4</span> + <span class="number">4</span>])[<span class="number">0</span>])<span class="comment">#将4字节解包为unsigned int型</span></span><br><span class="line"></span><br><span class="line">    data = []</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">625</span>):</span><br><span class="line">        data.append(map1[i] ^ map2[i])<span class="comment">#dword_140A85010[25 * v629 + *(_DWORD *)&amp;v628[5]] ^ v630[25 * v629 + *(_DWORD *)&amp;v628[5]]) != 214原函数的map是经过异或加密的，异或回去获取原始的地图</span></span><br><span class="line">    <span class="keyword">return</span> data, <span class="built_in">bytearray</span>(map1[-<span class="number">4</span>:]), map3<span class="comment">#返回原始地图，方向数组，起点</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">checkValid</span>(<span class="params"><span class="built_in">map</span>, x, y</span>):</span><br><span class="line">    <span class="keyword">if</span> x &lt; <span class="number">0</span> <span class="keyword">or</span> y &lt; <span class="number">0</span> <span class="keyword">or</span> x &gt; <span class="number">24</span> <span class="keyword">or</span> y &gt; <span class="number">24</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">map</span>[y * <span class="number">25</span> + x] == <span class="number">0xd6</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">solve</span>(<span class="params"><span class="built_in">map</span>, startX, startY, direct, path</span>):<span class="comment">#此处不用dfs搜索，因为路径都是单一的每次只要找到了下一次的路径就往路径列表内增加对应的值</span></span><br><span class="line">    <span class="built_in">map</span>[startY * <span class="number">25</span> + startX] = <span class="built_in">ord</span>(<span class="string">&#x27;*&#x27;</span>)</span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">len</span>(path) == <span class="number">15</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">True</span>, path</span><br><span class="line"></span><br><span class="line">    all_dir = []</span><br><span class="line">    <span class="keyword">if</span> checkValid(<span class="built_in">map</span>, startX - <span class="number">1</span>, startY):</span><br><span class="line">        all_dir.append((startX-<span class="number">1</span>, startY, direct[<span class="number">0</span>]))</span><br><span class="line">    <span class="keyword">if</span> checkValid(<span class="built_in">map</span>, startX+ <span class="number">1</span>, startY ):</span><br><span class="line">        all_dir.append((startX+ <span class="number">1</span>, startY , direct[<span class="number">1</span>]))</span><br><span class="line">    <span class="keyword">if</span> checkValid(<span class="built_in">map</span>, startX , startY- <span class="number">1</span>):</span><br><span class="line">        all_dir.append((startX , startY- <span class="number">1</span>, direct[<span class="number">2</span>]))</span><br><span class="line">    <span class="keyword">if</span> checkValid(<span class="built_in">map</span>, startX, startY + <span class="number">1</span>):</span><br><span class="line">        all_dir.append((startX, startY+<span class="number">1</span>, direct[<span class="number">3</span>]))</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> <span class="built_in">dir</span> <span class="keyword">in</span> all_dir:</span><br><span class="line">        result = solve(<span class="built_in">map</span>, <span class="built_in">dir</span>[<span class="number">0</span>], <span class="built_in">dir</span>[<span class="number">1</span>], direct, path + <span class="built_in">dir</span>[<span class="number">2</span>])</span><br><span class="line">        <span class="keyword">if</span> result[<span class="number">0</span>] == <span class="literal">True</span>:</span><br><span class="line">            <span class="keyword">return</span> result</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">False</span>, <span class="string">&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">printMap</span>(<span class="params">map1</span>):</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">25</span>):</span><br><span class="line">        line = <span class="string">&#x27;&#x27;</span></span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">25</span>):</span><br><span class="line">            line += <span class="built_in">chr</span>(map1[i * <span class="number">25</span> + j])</span><br><span class="line">        <span class="built_in">print</span>(line)</span><br><span class="line"></span><br><span class="line">total = <span class="string">&#x27;&#x27;</span></span><br><span class="line">tmp=<span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>,<span class="number">10933056</span>+<span class="number">10944</span>,<span class="number">10944</span>):<span class="comment">#每个迷宫函数的地址进行遍历</span></span><br><span class="line">    map1, dirs, target = decode(i+<span class="number">0x860</span>,tmp)</span><br><span class="line">    tmp+=<span class="number">1</span></span><br><span class="line">    total +=solve(map1, target[<span class="number">1</span>], target[<span class="number">0</span>], dirs.decode(<span class="string">&#x27;utf-8&#x27;</span>), <span class="string">&#x27;&#x27;</span>)[<span class="number">1</span>]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line">mm = hashlib.md5(total.encode(<span class="string">&#x27;utf-8&#x27;</span>)).hexdigest()</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">len</span>(total))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;nssctf&#123;%s&#125;&#x27;</span> %mm)</span><br><span class="line"></span><br></pre></td></tr></table></figure></div>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;脚本参考&lt;a class=&quot;link&quot;   href=&quot;https://panda0s.top/2021/05/23/%E7%BE%8E%E5%9B%A2CTF-100mazes/&quot; &gt;美团CTF: 100mazes - Pandaos’s blog (panda0s.to</summary>
      
    
    
    
    <category term="CTF WP" scheme="http://example.com/categories/CTF-WP/"/>
    
    <category term="Re" scheme="http://example.com/categories/CTF-WP/Re/"/>
    
    
  </entry>
  
  <entry>
    <title>安洵杯 2020easyaes</title>
    <link href="http://example.com/2023/07/17/CTF%20WP/Crypto/%E5%AE%89%E6%B4%B5%E6%9D%AF%202020easyaes/"/>
    <id>http://example.com/2023/07/17/CTF%20WP/Crypto/%E5%AE%89%E6%B4%B5%E6%9D%AF%202020easyaes/</id>
    <published>2023-07-17T08:50:12.000Z</published>
    <updated>2023-07-17T09:30:39.000Z</updated>
    
    <content type="html"><![CDATA[<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python</span></span><br><span class="line"><span class="keyword">from</span> Crypto.Cipher <span class="keyword">import</span> AES</span><br><span class="line"><span class="keyword">import</span> binascii</span><br><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> bytes_to_long,long_to_bytes</span><br><span class="line"><span class="keyword">from</span> flag <span class="keyword">import</span> flag</span><br><span class="line"><span class="keyword">from</span> key <span class="keyword">import</span> key</span><br><span class="line"></span><br><span class="line">iv = flag.strip(<span class="string">b&#x27;d0g3&#123;&#x27;</span>).strip(<span class="string">b&#x27;&#125;&#x27;</span>)</span><br><span class="line"></span><br><span class="line">LENGTH = <span class="built_in">len</span>(key)</span><br><span class="line"><span class="keyword">assert</span> LENGTH == <span class="number">16</span></span><br><span class="line"></span><br><span class="line">hint = os.urandom(<span class="number">4</span>) * <span class="number">8</span></span><br><span class="line"><span class="built_in">print</span>(bytes_to_long(hint)^bytes_to_long(key))</span><br><span class="line"></span><br><span class="line">msg = <span class="string">b&#x27;Welcome to this competition, I hope you can have fun today!!!!!!&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">encrypto</span>(<span class="params">message</span>):</span><br><span class="line">    aes = AES.new(key,AES.MODE_CBC,iv)</span><br><span class="line">    <span class="keyword">return</span> aes.encrypt(message)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(binascii.hexlify(encrypto(msg))[-<span class="number">32</span>:])</span><br><span class="line"></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">56631233292325412205528754798133970783633216936302049893130220461139160682777</span></span><br><span class="line"><span class="string">b&#x27;3c976c92aff4095a23e885b195077b66&#x27;</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure></div><p>这道题涉及AES的ECB加密</p><p>因为hint是4字节重复8次，共32字节，而key只有16字节，异或后只有后16字节改变了可以通过前16字节获取hint，再异或回去就可以获得key了</p><div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">hint=<span class="string">&#x27;&#123;:&lt;4X&#125;&#x27;</span>.<span class="built_in">format</span>(<span class="number">56631233292325412205528754798133970783633216936302049893130220461139160682777</span>)[:<span class="number">4</span>*<span class="number">2</span>]*<span class="number">8</span></span><br><span class="line">key=long_to_bytes(a^<span class="built_in">int</span>(hint,<span class="number">16</span>))</span><br></pre></td></tr></table></figure></div><p>根据这题，我们需要获取iv，根据CBC模式和ECB模式的转化可以获取</p><div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">m=<span class="string">b&#x27;xxxxxxxxxxxxxxxxyyyyyyyyyyyyyyyy&#x27;</span></span><br><span class="line">key=<span class="string">b&#x27;aEs_1s_SO0o_e4sY&#x27;</span></span><br><span class="line">iv=<span class="string">b&#x27;D0g3D0g3D0g3D0g3&#x27;</span></span><br><span class="line">aes=AES.new(key,AES.MODE_CBC,iv)</span><br><span class="line">enc=aes.encrypt(m)</span><br><span class="line"><span class="built_in">print</span>(enc)</span><br></pre></td></tr></table></figure></div><p>其等效于ECB模式的，第一步第一组明文异或初始向量，第二部第二组明文异或上一次的加密结果，以此类推</p><div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> Crypto.Cipher <span class="keyword">import</span> AES</span><br><span class="line"><span class="keyword">from</span> Crypto.Util.strxor <span class="keyword">import</span> strxor</span><br><span class="line">m1=<span class="string">b&#x27;xxxxxxxxxxxxxxxx&#x27;</span></span><br><span class="line">m2=<span class="string">b&#x27;yyyyyyyyyyyyyyyy&#x27;</span></span><br><span class="line">aes=AES.new(key,AES.MODE_ECB)</span><br><span class="line">enc1=aes.encrypt(strxor(m1,iv))</span><br><span class="line">enc2=aes.encrypt(strxor(m2,enc1))</span><br><span class="line">enc=enc1+enc2</span><br><span class="line"><span class="built_in">print</span>(enc)</span><br></pre></td></tr></table></figure></div><p>此处msg有64字节，所以有4组，等效于ECB模式的</p><div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> Crypto.Cipher <span class="keyword">import</span> AES</span><br><span class="line"><span class="keyword">from</span> Crypto.Util.strxor <span class="keyword">import</span> strxor</span><br><span class="line">msg = <span class="string">b&#x27;Welcome to this competition, I hope you can have fun today!!!!!!&#x27;</span></span><br><span class="line">m1=msg[:<span class="number">16</span>]</span><br><span class="line">m2=msg[<span class="number">16</span>:<span class="number">32</span>]</span><br><span class="line">m3=msg[<span class="number">32</span>:<span class="number">48</span>]</span><br><span class="line">m4=msg[<span class="number">48</span>:]</span><br><span class="line">aes=AES.new(key,AES.MODE_ECB)</span><br><span class="line">enc1=aes.encrypt(strxor(m1,iv))</span><br><span class="line">enc2=aes.encrypt(strxor(m2,enc1))</span><br><span class="line">enc3=aes.encrypt(strxor(m3,enc2))</span><br><span class="line">enc4=aes.encrypt(strxor(m4,enc3))</span><br><span class="line">enc=enc1+enc2+enc3+enc4</span><br></pre></td></tr></table></figure></div><p>那我们可以直接从enc4递推回iv</p><div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> Crypto.Cipher <span class="keyword">import</span> AES</span><br><span class="line"><span class="keyword">from</span> Crypto.Util.strxor <span class="keyword">import</span> strxor</span><br><span class="line">msg = <span class="string">b&#x27;Welcome to this competition, I hope you can have fun today!!!!!!&#x27;</span></span><br><span class="line">m1=msg[:<span class="number">16</span>]</span><br><span class="line">m2=msg[<span class="number">16</span>:<span class="number">32</span>]</span><br><span class="line">m3=msg[<span class="number">32</span>:<span class="number">48</span>]</span><br><span class="line">m4=msg[<span class="number">48</span>:]</span><br><span class="line">enc4=<span class="string">b&#x27;3c976c92aff4095a23e885b195077b66&#x27;</span></span><br><span class="line">enc4=long_to_bytes(<span class="built_in">int</span>(enc4,<span class="number">16</span>))<span class="comment">#从16进制字符串转化回原字符串</span></span><br><span class="line">aes=AES.new(key,AES.MODE_ECB)</span><br><span class="line">enc3=strxor(aes.decrypt(enc4),m4)</span><br><span class="line">enc2=strxor(aes.decrypt(enc3),m3)</span><br><span class="line">enc1=strxor(aes.decrypt(enc2),m2)</span><br><span class="line">iv=strxor(aes.decrypt(enc1),m1)</span><br></pre></td></tr></table></figure></div><p>exp:</p><div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> Crypto.Cipher <span class="keyword">import</span> AES</span><br><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> bytes_to_long,long_to_bytes</span><br><span class="line">msg = <span class="string">b&#x27;Welcome to this competition, I hope you can have fun today!!!!!!&#x27;</span></span><br><span class="line">a=<span class="number">56631233292325412205528754798133970783633216936302049893130220461139160682777</span></span><br><span class="line">enc4=<span class="string">b&#x27;3c976c92aff4095a23e885b195077b66&#x27;</span></span><br><span class="line">enc4=long_to_bytes(<span class="built_in">int</span>(enc4,<span class="number">16</span>))</span><br><span class="line">msgs=[bytes_to_long(msg[i:i+<span class="number">16</span>]) <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>,<span class="built_in">len</span>(msg),<span class="number">16</span>)]</span><br><span class="line">hint=<span class="string">&#x27;&#123;:&lt;4X&#125;&#x27;</span>.<span class="built_in">format</span>(a)[:<span class="number">4</span>*<span class="number">2</span>]*<span class="number">8</span></span><br><span class="line">key=long_to_bytes(a^<span class="built_in">int</span>(hint,<span class="number">16</span>))</span><br><span class="line">aes=AES.new(key,AES.MODE_ECB)</span><br><span class="line">enc=[<span class="number">0</span>]*<span class="number">5</span></span><br><span class="line">enc[<span class="number">4</span>]=enc4</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">3</span>,-<span class="number">1</span>,-<span class="number">1</span>):</span><br><span class="line">enc[i]=long_to_bytes(bytes_to_long(aes.decrypt(enc[i+<span class="number">1</span>]))^msgs[i])</span><br><span class="line"><span class="built_in">print</span>(enc[<span class="number">0</span>])</span><br><span class="line"></span><br></pre></td></tr></table></figure></div>]]></content>
    
    
      
      
    <summary type="html">&lt;div class=&quot;highlight-container&quot; data-rel=&quot;Python&quot;&gt;&lt;figure class=&quot;iseeu highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;li</summary>
      
    
    
    
    <category term="CTF WP" scheme="http://example.com/categories/CTF-WP/"/>
    
    <category term="Crypto" scheme="http://example.com/categories/CTF-WP/Crypto/"/>
    
    
  </entry>
  
  <entry>
    <title>AES</title>
    <link href="http://example.com/2023/07/17/Crypto/AES/"/>
    <id>http://example.com/2023/07/17/Crypto/AES/</id>
    <published>2023-07-17T07:53:35.000Z</published>
    <updated>2023-07-17T08:42:30.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="AES-ECB"><a href="#AES-ECB" class="headerlink" title="AES ECB"></a>AES ECB</h2><p>不带初始向量,以16字节为一组</p><div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> Crypto.Cipher <span class="keyword">import</span> AES</span><br><span class="line">m=<span class="string">b&#x27;xxxxxxxxxxxxxxxxyyyyyyyyyyyyyyyy&#x27;</span></span><br><span class="line">key=<span class="string">b&#x27;aEs_1s_SO0o_e4sY&#x27;</span></span><br><span class="line">aes=AES.new(key,AES.MODE_ECB)</span><br><span class="line">enc=aes.encrypt(m)</span><br><span class="line"><span class="built_in">print</span>(enc)</span><br></pre></td></tr></table></figure></div><p>可以分解为</p><div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> Crypto.Cipher <span class="keyword">import</span> AES</span><br><span class="line">m1=<span class="string">b&#x27;xxxxxxxxxxxxxxxx&#x27;</span></span><br><span class="line">m2=<span class="string">b&#x27;yyyyyyyyyyyyyyyy&#x27;</span></span><br><span class="line">key=<span class="string">b&#x27;aEs_1s_SO0o_e4sY&#x27;</span></span><br><span class="line">aes=AES.new(key,AES.MODE_ECB)</span><br><span class="line">enc1=aes.encrypt(m1)</span><br><span class="line">enc2=aes.encrypt(m2)</span><br><span class="line">enc=enc1+enc2</span><br><span class="line"><span class="built_in">print</span>(enc)</span><br></pre></td></tr></table></figure></div><p>这两个输出是一致的，相当于将明文以16字节分成多份进行相同的加密</p><h2 id="AES-CBC"><a href="#AES-CBC" class="headerlink" title="AES CBC"></a>AES CBC</h2><p>带初始向量，相当于每步都进行异或的ECB模式</p><p>初始向量必须是16字节，因为明文是以16字节为一组进行加密的，异或的时候也得如此才能保证数据的一致性</p><div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">m=<span class="string">b&#x27;xxxxxxxxxxxxxxxxyyyyyyyyyyyyyyyy&#x27;</span></span><br><span class="line">key=<span class="string">b&#x27;aEs_1s_SO0o_e4sY&#x27;</span></span><br><span class="line">iv=<span class="string">b&#x27;D0g3D0g3D0g3D0g3&#x27;</span></span><br><span class="line">aes=AES.new(key,AES.MODE_CBC,iv)</span><br><span class="line">enc=aes.encrypt(m)</span><br><span class="line"><span class="built_in">print</span>(enc)</span><br></pre></td></tr></table></figure></div><p>等效于ECB模式的，第一步第一组明文异或初始向量，第二部第二组明文异或上一次的加密结果，以此类推</p><div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> Crypto.Cipher <span class="keyword">import</span> AES</span><br><span class="line"><span class="keyword">from</span> Crypto.Util.strxor <span class="keyword">import</span> strxor</span><br><span class="line">m1=<span class="string">b&#x27;xxxxxxxxxxxxxxxx&#x27;</span></span><br><span class="line">m2=<span class="string">b&#x27;yyyyyyyyyyyyyyyy&#x27;</span></span><br><span class="line">aes=AES.new(key,AES.MODE_ECB)</span><br><span class="line">enc1=aes.encrypt(strxor(m1,iv))</span><br><span class="line">enc2=aes.encrypt(strxor(m2,enc1))</span><br><span class="line">enc=enc1+enc2</span><br><span class="line"><span class="built_in">print</span>(enc)</span><br></pre></td></tr></table></figure></div>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;AES-ECB&quot;&gt;&lt;a href=&quot;#AES-ECB&quot; class=&quot;headerlink&quot; title=&quot;AES ECB&quot;&gt;&lt;/a&gt;AES ECB&lt;/h2&gt;&lt;p&gt;不带初始向量,以16字节为一组&lt;/p&gt;
&lt;div class=&quot;highlight-containe</summary>
      
    
    
    
    <category term="Crypto" scheme="http://example.com/categories/Crypto/"/>
    
    
  </entry>
  
  <entry>
    <title>小明文攻击</title>
    <link href="http://example.com/2023/07/15/Crypto/%E5%B0%8F%E6%98%8E%E6%96%87%E6%94%BB%E5%87%BB/"/>
    <id>http://example.com/2023/07/15/Crypto/%E5%B0%8F%E6%98%8E%E6%96%87%E6%94%BB%E5%87%BB/</id>
    <published>2023-07-15T13:33:02.000Z</published>
    <updated>2023-07-15T14:25:41.000Z</updated>
    
    <content type="html"><![CDATA[<p>小明文攻击的要求是e足够小</p><p>因为存在这个关系</p><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">m^e=c mod n</span><br><span class="line">所以有</span><br><span class="line">m^e=k*n + c  k为整数</span><br><span class="line">m  = (k*n+c)^(1/e)</span><br></pre></td></tr></table></figure></div><p>同时因为e足够小所以k足够小，可以通过穷举k来获得明文m</p><p>exp:</p><div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> e <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="number">5</span>):<span class="comment">#遍历e,已知e可以不用遍历</span></span><br><span class="line"><span class="keyword">for</span> k <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">2000</span>):<span class="comment">#遍历k</span></span><br><span class="line"><span class="keyword">import</span> Crypto.Util.number</span><br><span class="line"><span class="keyword">if</span> <span class="built_in">__import__</span>(<span class="string">&quot;gmpy2&quot;</span>).iroot((k*n+flag),e)[<span class="number">1</span>]:</span><br><span class="line"><span class="keyword">if</span> <span class="string">b&quot;NSSCTF&quot;</span> <span class="keyword">in</span> Crypto.Util.number.long_to_bytes(<span class="built_in">__import__</span>(<span class="string">&quot;gmpy2&quot;</span>).iroot((k*n+flag),e)[<span class="number">0</span>]):<span class="comment">#条件判断</span></span><br><span class="line"><span class="built_in">print</span>(Crypto.Util.number.long_to_bytes(<span class="built_in">__import__</span>(<span class="string">&quot;gmpy2&quot;</span>).iroot((k*n+flag),e)[<span class="number">0</span>]))</span><br></pre></td></tr></table></figure></div><p>[<a class="link"   href="https://www.nssctf.cn/problem/417" >SWPUCTF 2021 新生赛]crypto5 | NSSCTF <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p><div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> gmpy2 <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">import</span> sympy</span><br><span class="line"><span class="keyword">import</span> math</span><br><span class="line">flag= <span class="number">25166751653530941364839663846806543387720865339263370907985655775152187319464715737116599171477207047430065345882626259880756839094179627032623895330242655333</span></span><br><span class="line">n= <span class="number">134109481482703713214838023035418052567000870587160796935708584694132507394211363652420160931185332280406437290210512090663977634730864032370977407179731940068634536079284528020739988665713200815021342700369922518406968356455736393738946128013973643235228327971170711979683931964854563904980669850660628561419</span></span><br><span class="line"><span class="keyword">for</span> k <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">2000</span>):</span><br><span class="line"><span class="keyword">import</span> Crypto.Util.number</span><br><span class="line"><span class="keyword">for</span> e <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="number">5</span>):</span><br><span class="line"><span class="keyword">if</span> <span class="built_in">__import__</span>(<span class="string">&quot;gmpy2&quot;</span>).iroot((k*n+flag),e)[<span class="number">1</span>]:</span><br><span class="line"><span class="keyword">if</span> <span class="string">b&quot;NSSCTF&quot;</span> <span class="keyword">in</span> Crypto.Util.number.long_to_bytes(<span class="built_in">__import__</span>(<span class="string">&quot;gmpy2&quot;</span>).iroot((k*n+flag),e)[<span class="number">0</span>]):</span><br><span class="line"><span class="built_in">print</span>(Crypto.Util.number.long_to_bytes(<span class="built_in">__import__</span>(<span class="string">&quot;gmpy2&quot;</span>).iroot((k*n+flag),e)[<span class="number">0</span>]))</span><br></pre></td></tr></table></figure></div>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;小明文攻击的要求是e足够小&lt;/p&gt;
&lt;p&gt;因为存在这个关系&lt;/p&gt;
&lt;div class=&quot;highlight-container&quot; data-rel=&quot;Plaintext&quot;&gt;&lt;figure class=&quot;iseeu highlight plaintext&quot;&gt;&lt;table&gt;</summary>
      
    
    
    
    <category term="Crypto" scheme="http://example.com/categories/Crypto/"/>
    
    
  </entry>
  
  <entry>
    <title>柏鹭杯 2021寻找丢失的碎片</title>
    <link href="http://example.com/2023/07/15/CTF%20WP/Re/%E5%AE%89%E5%8D%93/%E6%9F%8F%E9%B9%AD%E6%9D%AF%202021%E5%AF%BB%E6%89%BE%E4%B8%A2%E5%A4%B1%E7%9A%84%E7%A2%8E%E7%89%87/"/>
    <id>http://example.com/2023/07/15/CTF%20WP/Re/%E5%AE%89%E5%8D%93/%E6%9F%8F%E9%B9%AD%E6%9D%AF%202021%E5%AF%BB%E6%89%BE%E4%B8%A2%E5%A4%B1%E7%9A%84%E7%A2%8E%E7%89%87/</id>
    <published>2023-07-15T09:40:00.000Z</published>
    <updated>2023-07-15T11:18:05.000Z</updated>
    
    <content type="html"><![CDATA[<p>直接拖进jadx，无法正常输出反编译结果</p><p>解压后再进行压缩为apk，就可以进行反编译了</p><p>只有一个activity组件</p><div class="highlight-container" data-rel="Xml"><figure class="iseeu highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">manifest</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span> <span class="attr">android:versionCode</span>=<span class="string">&quot;1&quot;</span> <span class="attr">android:versionName</span>=<span class="string">&quot;1.0&quot;</span> <span class="attr">android:compileSdkVersion</span>=<span class="string">&quot;29&quot;</span> <span class="attr">android:compileSdkVersionCodename</span>=<span class="string">&quot;10&quot;</span> <span class="attr">package</span>=<span class="string">&quot;com.example.c2&quot;</span> <span class="attr">platformBuildVersionCode</span>=<span class="string">&quot;29&quot;</span> <span class="attr">platformBuildVersionName</span>=<span class="string">&quot;10&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">uses-sdk</span> <span class="attr">android:minSdkVersion</span>=<span class="string">&quot;21&quot;</span> <span class="attr">android:targetSdkVersion</span>=<span class="string">&quot;29&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">uses-feature</span> <span class="attr">android:name</span>=<span class="string">&quot;android.hardware.sensor.accelerometer&quot;</span> <span class="attr">android:required</span>=<span class="string">&quot;true&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">application</span> <span class="attr">android:theme</span>=<span class="string">&quot;@style/AppTheme&quot;</span> <span class="attr">android:label</span>=<span class="string">&quot;@string/app_name&quot;</span> <span class="attr">android:icon</span>=<span class="string">&quot;@mipmap/ic_launcher&quot;</span> <span class="attr">android:allowBackup</span>=<span class="string">&quot;true&quot;</span> <span class="attr">android:supportsRtl</span>=<span class="string">&quot;true&quot;</span> <span class="attr">android:fullBackupContent</span>=<span class="string">&quot;false&quot;</span> <span class="attr">android:roundIcon</span>=<span class="string">&quot;@mipmap/ic_launcher_round&quot;</span> <span class="attr">android:appComponentFactory</span>=<span class="string">&quot;androidx.core.app.CoreComponentFactory&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">activity</span> <span class="attr">android:name</span>=<span class="string">&quot;com.example.p004c2.MainActivity&quot;</span> <span class="attr">android:screenOrientation</span>=<span class="string">&quot;portrait&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">intent-filter</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">action</span> <span class="attr">android:name</span>=<span class="string">&quot;android.intent.action.MAIN&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">category</span> <span class="attr">android:name</span>=<span class="string">&quot;android.intent.category.LAUNCHER&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">intent-filter</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">activity</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">application</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">manifest</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p>主函数有点长第一步</p><div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">final</span> <span class="type">boolean</span> <span class="title function_">loadSo</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">File</span> <span class="variable">file</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">File</span>(getFilesDir(), <span class="string">&quot;libcore.so&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span> (file.exists() &amp;&amp; file.isFile()) &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                System.load(file.getAbsolutePath());</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">            &#125; <span class="keyword">catch</span> (UnsatisfiedLinkError unused) &#123;</span><br><span class="line">                Log.i(<span class="string">&quot;HINT: &quot;</span>, getString(C0269R.string.no_init));</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        Log.i(<span class="string">&quot;HINT: &quot;</span>, getString(C0269R.string.noengine));</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure></div><p>直接访问资源文件查看提示</p><div class="highlight-container" data-rel="Xml"><figure class="iseeu highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">string</span> <span class="attr">name</span>=<span class="string">&quot;info&quot;</span>&gt;</span>APK的某个库文件被分片隐藏了起来，找到并组合成完整文件，根据提示，获取FLAG<span class="tag">&lt;/<span class="name">string</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">string</span> <span class="attr">name</span>=<span class="string">&quot;no_init&quot;</span>&gt;</span>模块未完成初始化<span class="tag">&lt;/<span class="name">string</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">string</span> <span class="attr">name</span>=<span class="string">&quot;noengine&quot;</span>&gt;</span>缺失某个库文件，请将组合起来的代码文件放到指定位置<span class="tag">&lt;/<span class="name">string</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p>碎片真**难找，但都可以通过binwalk工具找出来</p><p>第一个碎片</p><div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">binwalk -e misc3/res/mipmap-xxxhdpi-v4/ic_launcher2.png</span><br></pre></td></tr></table></figure></div><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/runwu2204/Blog_imgs/202307151745367.png"                      alt="image-20230715174542325"                ></p><p>第二个碎片</p><div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">misc3/res/raw/msg.raw</span><br></pre></td></tr></table></figure></div><p>直接打开就行</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/runwu2204/Blog_imgs/202307151747564.png"                      alt="image-20230715174705528"                ></p><p>第三个碎片</p><div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">binwalk -e misc3/META-INF/kotlin-elf.kotlin_module</span><br></pre></td></tr></table></figure></div><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/runwu2204/Blog_imgs/202307151751157.png"                      alt="image-20230715175105122"                ></p><p>第四个碎片</p><div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">binwalk -e misc3.apk #隐藏在apk安装包里</span><br></pre></td></tr></table></figure></div><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/runwu2204/Blog_imgs/202307151751747.png"                      alt="image-20230715175113714"                ></p><p>最终，融合召唤libcore.so</p><p>主要函数如下</p><div class="highlight-container" data-rel="C"><figure class="iseeu highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> __fastcall <span class="title function_">Java_com_example_c2_MainActivity_funcB</span><span class="params">(JNIEnv *a1, <span class="type">int</span> a2)</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="type">void</span> *v4; <span class="comment">// r6</span></span><br><span class="line">  jmethodID v5; <span class="comment">// r6</span></span><br><span class="line">  <span class="type">void</span> *v6; <span class="comment">// r6</span></span><br><span class="line">  <span class="type">const</span> <span class="type">char</span> *v7; <span class="comment">// r8</span></span><br><span class="line">  <span class="type">size_t</span> v8; <span class="comment">// r0</span></span><br><span class="line">  <span class="type">int</span> v9; <span class="comment">// r9</span></span><br><span class="line">  jstring (*NewStringUTF)(JNIEnv *, <span class="type">const</span> <span class="type">char</span> *); <span class="comment">// r2</span></span><br><span class="line">  <span class="type">const</span> <span class="type">char</span> *v11; <span class="comment">// r1</span></span><br><span class="line">  jclass v13; <span class="comment">// r6</span></span><br><span class="line">  jmethodID v14; <span class="comment">// r8</span></span><br><span class="line">  jbyteArray v15; <span class="comment">// r6</span></span><br><span class="line"></span><br><span class="line">  v4 = (<span class="type">void</span> *)((<span class="type">int</span> (__fastcall *)(JNIEnv *))(*a1)-&gt;GetObjectClass)(a1);</span><br><span class="line">  <span class="keyword">if</span> ( sub_946(a1)</span><br><span class="line">    &amp;&amp; (v5 = (*a1)-&gt;GetMethodID(a1, v4, <span class="string">&quot;funcS&quot;</span>, <span class="string">&quot;()Ljava/lang/String;&quot;</span>), sub_946(a1))</span><br><span class="line">    &amp;&amp; (v6 = (<span class="type">void</span> *)sub_968(a1, a2, v5), sub_946(a1))</span><br><span class="line">    &amp;&amp; (v7 = (*a1)-&gt;GetStringUTFChars(a1, v6, <span class="number">0</span>), sub_946(a1))</span><br><span class="line">    &amp;&amp; (v8 = _strlen_chk(<span class="string">&quot;8470096DE680B2D1D00A44ADA1ACE568&quot;</span>, <span class="number">0x21</span>u),</span><br><span class="line">        v9 = <span class="built_in">memcmp</span>(v7, <span class="string">&quot;8470096DE680B2D1D00A44ADA1ACE568&quot;</span>, v8),</span><br><span class="line">        (*a1)-&gt;ReleaseStringUTFChars(a1, v6, v7),</span><br><span class="line">        !v9) )</span><br><span class="line">  &#123;</span><br><span class="line">    v13 = (*a1)-&gt;GetObjectClass(a1, a2);</span><br><span class="line">    <span class="keyword">if</span> ( sub_946(a1) )</span><br><span class="line">    &#123;</span><br><span class="line">      v14 = (*a1)-&gt;GetMethodID(a1, v13, <span class="string">&quot;funcC&quot;</span>, <span class="string">&quot;([B)V&quot;</span>);</span><br><span class="line">      <span class="keyword">if</span> ( sub_946(a1) )</span><br><span class="line">      &#123;</span><br><span class="line">        v15 = (*a1)-&gt;NewByteArray(a1, <span class="number">32</span>);</span><br><span class="line">        <span class="keyword">if</span> ( sub_946(a1) )</span><br><span class="line">        &#123;</span><br><span class="line">          (*a1)-&gt;SetByteArrayRegion(a1, v15, <span class="number">0</span>, <span class="number">32</span>, <span class="string">&quot;dGhpcyBpcyBub3QgYSBmbGFn77yB77yB77yB&quot;</span>);</span><br><span class="line">          sub_9A0(a1, a2, v14, v15);</span><br><span class="line">          sub_946(a1);</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    NewStringUTF = (*a1)-&gt;NewStringUTF;</span><br><span class="line">    v11 = (<span class="type">const</span> <span class="type">char</span> *)&amp;unk_2346;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">  &#123;</span><br><span class="line">    NewStringUTF = (*a1)-&gt;NewStringUTF;</span><br><span class="line">    v11 = (<span class="type">const</span> <span class="type">char</span> *)&amp;unk_2330;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> (<span class="type">int</span>)NewStringUTF(a1, v11);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p>主要逻辑如下</p><pre class="mermaid">graph TB;funcB--->|2.校验对应的hash值|funcS--->|1.传入apk的hash值|funcB-->|"3.校验成功则传入字符串的前三十位"|funcC-->|4.传入字符串的大写md5值|D0D0-->D2D0-->D1D1-->|key|D3D2-->|iv|D3D3-->|5.AES/CBC/PKCS7Padding解密|D4    subgraph java层    funcS    funcCsubgraph JNI层    funcB    end        subgraph decryptMsg方法            direction TB            D0[md5字符串]            D1[前16个字符串]            D2[剩余的字符串]            D3[assets中msg文件]             D4[解密后的文件]        end    end</pre><p>解密exp:</p><div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span>*</span><br><span class="line"><span class="keyword">from</span> Crypto.Cipher <span class="keyword">import</span> AES</span><br><span class="line"><span class="keyword">from</span> Crypto.Util.Padding <span class="keyword">import</span> pad, unpad</span><br><span class="line">tmp=tmp=<span class="built_in">str</span>.upper(<span class="built_in">__import__</span>(<span class="string">&quot;hashlib&quot;</span>).md5(<span class="string">&quot;dGhpcyBpcyBub3QgYSBmbGFn77yB77yB77yB&quot;</span>[:<span class="number">32</span>].encode()).hexdigest())</span><br><span class="line">password=tmp[<span class="number">0</span>:<span class="number">16</span>].encode()</span><br><span class="line">iv=tmp[<span class="number">16</span>:].encode()</span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">r&#x27;./assets/msg&#x27;</span>,<span class="string">&#x27;rb&#x27;</span>) <span class="keyword">as</span> e:</span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">r&#x27;./assets/dec&#x27;</span>,<span class="string">&quot;wb+&quot;</span>)<span class="keyword">as</span> d:</span><br><span class="line">enc=e.read()</span><br><span class="line">cipher=AES.new(password,AES.MODE_CBC,iv)</span><br><span class="line">dec=cipher.decrypt(enc)</span><br><span class="line">dec=unpad(dec,AES.block_size)</span><br><span class="line">d.write(dec)</span><br></pre></td></tr></table></figure></div><p>解密后发现是个图片</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/runwu2204/Blog_imgs/202307151913060.png"                      alt="image-20230715191259253"                ></p><p>继续用binwalk分离，发现没有隐藏文件</p><p>尝试使用zsteg，获取到了提示<a class="link"   href="https://sekao.net/pixeljihad/" >PixelJihad (sekao.net) <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/runwu2204/Blog_imgs/202307151917496.png"                      alt="image-20230715191730467"                ></p><p>上传后，得到了flag</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/runwu2204/Blog_imgs/202307151917913.png"                      alt="image-20230715191754833"                ></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;直接拖进jadx，无法正常输出反编译结果&lt;/p&gt;
&lt;p&gt;解压后再进行压缩为apk，就可以进行反编译了&lt;/p&gt;
&lt;p&gt;只有一个activity组件&lt;/p&gt;
&lt;div class=&quot;highlight-container&quot; data-rel=&quot;Xml&quot;&gt;&lt;figure clas</summary>
      
    
    
    
    <category term="CTF WP" scheme="http://example.com/categories/CTF-WP/"/>
    
    <category term="Re" scheme="http://example.com/categories/CTF-WP/Re/"/>
    
    <category term="安卓" scheme="http://example.com/categories/CTF-WP/Re/%E5%AE%89%E5%8D%93/"/>
    
    
  </entry>
  
  <entry>
    <title>柏鹭杯 2021重要信息还原</title>
    <link href="http://example.com/2023/07/13/CTF%20WP/Re/%E5%AE%89%E5%8D%93/%E6%9F%8F%E9%B9%AD%E6%9D%AF%202021%E9%87%8D%E8%A6%81%E4%BF%A1%E6%81%AF%E8%BF%98%E5%8E%9F/"/>
    <id>http://example.com/2023/07/13/CTF%20WP/Re/%E5%AE%89%E5%8D%93/%E6%9F%8F%E9%B9%AD%E6%9D%AF%202021%E9%87%8D%E8%A6%81%E4%BF%A1%E6%81%AF%E8%BF%98%E5%8E%9F/</id>
    <published>2023-07-13T12:54:23.000Z</published>
    <updated>2023-07-13T13:38:17.000Z</updated>
    
    <content type="html"><![CDATA[<p>给了两个文件夹，一个是源码一个是编译后的文件</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/runwu2204/Blog_imgs/202307132055371.png"                      alt="image-20230713205556346"                ></p><p>可以直接将resources压缩包打包为apk然后丢进jadx(apk本质就是压缩包)</p><div class="highlight-container" data-rel="Xml"><figure class="iseeu highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">manifest</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span> <span class="attr">android:versionCode</span>=<span class="string">&quot;1&quot;</span> <span class="attr">android:versionName</span>=<span class="string">&quot;1.0&quot;</span> <span class="attr">android:compileSdkVersion</span>=<span class="string">&quot;29&quot;</span> <span class="attr">android:compileSdkVersionCodename</span>=<span class="string">&quot;10&quot;</span> <span class="attr">package</span>=<span class="string">&quot;com.example.c1&quot;</span> <span class="attr">platformBuildVersionCode</span>=<span class="string">&quot;29&quot;</span> <span class="attr">platformBuildVersionName</span>=<span class="string">&quot;10&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">uses-sdk</span> <span class="attr">android:minSdkVersion</span>=<span class="string">&quot;21&quot;</span> <span class="attr">android:targetSdkVersion</span>=<span class="string">&quot;29&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;android.permission.WRITE_EXTERNAL_STORAGE&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;android.permission.READ_EXTERNAL_STORAGE&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">application</span> <span class="attr">android:theme</span>=<span class="string">&quot;@style/AppTheme&quot;</span> <span class="attr">android:label</span>=<span class="string">&quot;@string/app_name&quot;</span> <span class="attr">android:icon</span>=<span class="string">&quot;@mipmap/ic_launcher&quot;</span> <span class="attr">android:allowBackup</span>=<span class="string">&quot;false&quot;</span> <span class="attr">android:supportsRtl</span>=<span class="string">&quot;true&quot;</span> <span class="attr">android:fullBackupContent</span>=<span class="string">&quot;false&quot;</span> <span class="attr">android:roundIcon</span>=<span class="string">&quot;@mipmap/ic_launcher_round&quot;</span> <span class="attr">android:appComponentFactory</span>=<span class="string">&quot;androidx.core.app.CoreComponentFactory&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">activity</span> <span class="attr">android:name</span>=<span class="string">&quot;com.example.c1.MainActivity&quot;</span> <span class="attr">android:screenOrientation</span>=<span class="string">&quot;portrait&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">intent-filter</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">action</span> <span class="attr">android:name</span>=<span class="string">&quot;android.intent.action.MAIN&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">category</span> <span class="attr">android:name</span>=<span class="string">&quot;android.intent.category.LAUNCHER&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">intent-filter</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">activity</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">application</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">manifest</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure></div><p>只有一个activity</p><p>其主要逻辑流程如下</p><pre class="mermaid">graph TB;    C0-->|1.传入flag| B1;    B1-->|2.传入flag|C1;    C1-->|3.调用|B2;    B2-->|4.传入key|C1;    C1-->|5.返回RSA加密结果|B1    B1-->|6.传入RSA加密结果|C2;    C2-->|7.MD5后的字符串|B1    B1-->|8.MD5后的字符串|D0    D0-->D1    D0-->D2    D1-->|前16个作为AES密钥|D3    D2-->|后面的字符串作偏移|D3    D3-->|9.AES/CBC/PKCS7Padding解密|D4    subgraph java层        direction TB        C0[onClickCheck]        subgraph JNI层        direction TB        B1[JNI-b]         B2[JNI-a]        C1[java-funcB]        C2[java-funcA]    end        subgraph decryptMsg方法        direction TB        D0[字符串]        D1[前16个字符串]        D2[剩余的字符串]        D3[assets中enc文件]        D4[解密后的文件]        end    end</pre><h1 id="解密文件"><a href="#解密文件" class="headerlink" title="解密文件"></a>解密文件</h1><h2 id="RSA"><a href="#RSA" class="headerlink" title="RSA"></a>RSA</h2><p>可以通过JNI中的a函数获取公钥</p><p>公钥格式</p><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">-----BEGIN PUBLIC KEY-----</span><br><span class="line">MFwwDQYJKoZIhvcNAQEBBQADSwAwSAJBAJgby/H1lmzAIGjC3NczfQEWl5e3gR2VDukg9Wm+UopVUgXbj9O4+YSMZ0brftk2Qkr8GHJU8a8YqK2DNFg2XD8CAwEAAQ==</span><br><span class="line">-----END PUBLIC KEY-----</span><br></pre></td></tr></table></figure></div><p>私钥格式</p><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">-----BEGIN PRIVATE KEY-----</span><br><span class="line"></span><br><span class="line">-----END PRIVATE KEY-----</span><br></pre></td></tr></table></figure></div><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/runwu2204/Blog_imgs/202307132059100.png"                      alt="image-20230713205917019"                ></p><p>根据题目在JNI b函数中的提示</p><div class="highlight-container" data-rel="C++"><figure class="iseeu highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">__android_log_print(<span class="number">4</span>, <span class="string">&quot;HINT:&quot;</span>, <span class="string">&quot;http://www.factordb.com/&quot;</span>);</span><br></pre></td></tr></table></figure></div><p>可以通过该网站<a class="link"   href="http://www.factordb.com/index.php" >factordb.com <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>分解出p和q，最后根据rsa的算法可以算出解密密钥d</p><p>注意此处是分组加密算法，需要将密文分成多组，原来我自己直接解密不知道是分组加密，卡了很久</p><h2 id="AES"><a href="#AES" class="headerlink" title="AES"></a>AES</h2><p>根据apk中的decryptMsg方法可以知道其获取的apk中funcA进行md5后的字符串(32字节,大写)</p><div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">final</span> String <span class="title function_">funcA</span><span class="params">(String str)</span> &#123;</span><br><span class="line">        <span class="type">MessageDigest</span> <span class="variable">messageDigest</span> <span class="operator">=</span> MessageDigest.getInstance(<span class="string">&quot;MD5&quot;</span>);</span><br><span class="line">        <span class="type">Charset</span> <span class="variable">charset</span> <span class="operator">=</span> Charsets.UTF_8;</span><br><span class="line">        <span class="keyword">if</span> (str == <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">TypeCastException</span>(<span class="string">&quot;null cannot be cast to non-null type java.lang.String&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">byte</span>[] bytes = str.getBytes(charset);</span><br><span class="line">        Intrinsics.checkExpressionValueIsNotNull(bytes, <span class="string">&quot;(this as java.lang.String).getBytes(charset)&quot;</span>);</span><br><span class="line">        <span class="type">byte</span>[] m = messageDigest.digest(bytes);</span><br><span class="line">        <span class="type">MainActivity$funcA$1</span> <span class="variable">mainActivity$funcA$1</span> <span class="operator">=</span> MainActivity$funcA$<span class="number">1.</span>INSTANCE;</span><br><span class="line">        Intrinsics.checkExpressionValueIsNotNull(m, <span class="string">&quot;m&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> mainActivity$funcA$<span class="number">1.</span>invoke(m);</span><br><span class="line">    &#125;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">final</span> String <span class="title function_">invoke</span><span class="params">(<span class="type">byte</span> b)</span> &#123;</span><br><span class="line">                <span class="type">String</span> <span class="variable">format</span> <span class="operator">=</span> String.format(<span class="string">&quot;%02X&quot;</span>, Arrays.copyOf(<span class="keyword">new</span> <span class="title class_">Object</span>[]&#123;Byte.valueOf(b)&#125;, <span class="number">1</span>));<span class="comment">//此处是大写的hex字符串</span></span><br><span class="line">                Intrinsics.checkExpressionValueIsNotNull(format, <span class="string">&quot;java.lang.String.format(this, *args)&quot;</span>);</span><br><span class="line">                <span class="keyword">return</span> format;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></div><p>AES解密的算法可以简化为</p><div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">String</span> <span class="variable">substring3</span> <span class="operator">=</span> str.substring(<span class="number">0</span>, <span class="number">16</span>);</span><br><span class="line"><span class="type">byte</span>[] bytes = substring3.getBytes(Charsets.UTF_8);</span><br><span class="line"><span class="type">SecretKeySpec</span> <span class="variable">secretKeySpec</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SecretKeySpec</span>(bytes, <span class="string">&quot;AES&quot;</span>);<span class="comment">//md5前16个字符串作为密钥</span></span><br><span class="line"><span class="type">String</span> <span class="variable">substring4</span> <span class="operator">=</span> str.substring(<span class="number">16</span>);</span><br><span class="line"><span class="type">byte</span>[] bytes2 = substring4.getBytes(Charsets.UTF_8);</span><br><span class="line"><span class="type">IvParameterSpec</span> <span class="variable">ivParameterSpec</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">IvParameterSpec</span>(bytes2);<span class="comment">//md5后16个字符串作为偏移</span></span><br><span class="line">        <span class="type">Cipher</span> <span class="variable">cipher</span> <span class="operator">=</span> Cipher.getInstance(<span class="string">&quot;AES/CBC/PKCS7Padding&quot;</span>);<span class="comment">//注意此处是带填充的</span></span><br><span class="line">        cipher.init(<span class="number">2</span>, secretKeySpec, ivParameterSpec);<span class="comment">//解密模式</span></span><br><span class="line">        <span class="type">InputStream</span> <span class="variable">open</span> <span class="operator">=</span> getAssets().open(<span class="string">&quot;enc&quot;</span>);</span><br><span class="line">        Intrinsics.checkExpressionValueIsNotNull(open, <span class="string">&quot;assets.open(\&quot;enc\&quot;)&quot;</span>);<span class="comment">//解密文件</span></span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">FileOutputStream</span>(getMsgFile()).write(cipher.doFinal(IOStreams.readBytes(open)));</span><br><span class="line"></span><br></pre></td></tr></table></figure></div><h2 id="python-解密脚本"><a href="#python-解密脚本" class="headerlink" title="python 解密脚本"></a>python 解密脚本</h2><div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span>*</span><br><span class="line"><span class="keyword">import</span> gmpy2</span><br><span class="line"><span class="keyword">from</span> Crypto.Cipher <span class="keyword">import</span> AES</span><br><span class="line"><span class="keyword">from</span> Crypto.Util.Padding <span class="keyword">import</span> pad, unpad</span><br><span class="line">base=<span class="string">&quot;j7WBExN4XN/P2HVCOFssAAquRgdQCqdWZKwDo9uTBLfcLpC+1XC6DmBokh5twaS7Ip1MBIEAlFX2WEzz2H9qwXT5WEUgzC4RF0AOe95wqU89oqf4dn7/ZiO2imb5a6FrDnpwo6SqtdhasU3OrGg7mgtapukCHjjmJH7Vx+yVPm0uR40bgxVCIPtnJ+b6iNp8o+Cgyrd2BZ/TCQX1GJz3pM80+cV5cZOMjr/JepVcWFN+7GNKxR8jaPa/bV+C7Y+S&quot;</span></span><br><span class="line">cipher_bytes = base64.b64decode(base)</span><br><span class="line">tmp1=[]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>,<span class="built_in">len</span>(cipher_bytes),<span class="number">64</span>):</span><br><span class="line">    tmp1.append(cipher_bytes[i:i+<span class="number">64</span>]) <span class="comment">#64个字节一组</span></span><br><span class="line">e=<span class="number">65537</span></span><br><span class="line">p=<span class="number">71037807056497808667473611757425298887086548124211388066888426631640585037969</span></span><br><span class="line">q=<span class="number">112145533787143859495414888829654253787274898301436147509050442708404900683727</span></span><br><span class="line">n=<span class="number">7966572791419081482888151379127643748169118610600984895753957531413662475745737840799418096417263789370960837649556218062403972113814987633647934355430463</span></span><br><span class="line">d=gmpy2.invert(e,(p-<span class="number">1</span>)*(q-<span class="number">1</span>))</span><br><span class="line">tmp2=[]</span><br><span class="line">tmp3=[]</span><br><span class="line">tmp4=<span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> tmp1:</span><br><span class="line">tmp2.append(<span class="built_in">pow</span>(bytes_to_long(i),d,n))</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> tmp2:</span><br><span class="line">tmp3.append(long_to_bytes(i))</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> tmp3:</span><br><span class="line">tmp4+=i.decode()</span><br><span class="line">tmp=<span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>,<span class="built_in">len</span>(tmp4.replace(<span class="string">&#x27;|&#x27;</span>,<span class="string">&#x27;&#x27;</span>).replace(<span class="string">&#x27;\x00&#x27;</span>,<span class="string">&#x27;&#x27;</span>)),<span class="number">8</span>):</span><br><span class="line">tmp+=<span class="built_in">chr</span>(<span class="built_in">int</span>(tmp4.replace(<span class="string">&#x27;|&#x27;</span>,<span class="string">&#x27;&#x27;</span>)[i:i+<span class="number">8</span>],<span class="number">2</span>))</span><br><span class="line"><span class="built_in">print</span>(tmp)</span><br><span class="line">tmp=<span class="built_in">str</span>.upper(<span class="built_in">__import__</span>(<span class="string">&quot;hashlib&quot;</span>).md5(tmp.encode()).hexdigest())</span><br><span class="line">password=tmp[<span class="number">0</span>:<span class="number">16</span>].encode()</span><br><span class="line">iv=tmp[<span class="number">16</span>:].encode()</span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">r&quot;.\resources\assets\enc&#x27;,&#x27;rb&#x27;) as e:</span></span><br><span class="line"><span class="string">with open(r&#x27;.\resources\assets\dec.7z&#x27;,&quot;</span>wb+<span class="string">&quot;)as d:</span></span><br><span class="line"><span class="string">enc=e.read()</span></span><br><span class="line"><span class="string">cipher=AES.new(password,AES.MODE_CBC,iv)</span></span><br><span class="line"><span class="string">dec=cipher.decrypt(enc)</span></span><br><span class="line"><span class="string">dec=unpad(dec,AES.block_size)</span></span><br><span class="line"><span class="string">d.write(dec)</span></span><br></pre></td></tr></table></figure></div><p>解密后的文件是个,7z的压缩包</p><h1 id="TLS解密"><a href="#TLS解密" class="headerlink" title="TLS解密"></a>TLS解密</h1><p>解压后的文件有一个数据包文件和一个keylog文件</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/runwu2204/Blog_imgs/202307132115171.png"                      alt="image-20230713211514142"                ></p><p>用wireshark打开数据包文件追踪TLS流发现没有显示，又根据keylog文件猜测是TLS进行了加密，直接导入keylog文件(之前获取密钥的日志文件)就可以解密了</p><p>具体操作</p><pre class="mermaid">graph TBA1[左上角的编辑选项]A2[点击编辑选项最下面的首选项]A3[点击左侧的Protocols的小三角]A4[在展开的栏目中点击TLS]A5["(Pre)-Master-Secret log filename中填入keylog文件的路径"]A1-->A2-->A3-->A4-->A5</pre><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/runwu2204/Blog_imgs/202307132124193.png"                      alt="image-20230713212426147"                ></p><p>最后直接点OK就行</p><p> 选择解密后多出来的http流，右键选择追踪TLS流就可以得到flag了</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/runwu2204/Blog_imgs/202307132126665.png"                      alt="image-20230713212620547"                ></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;给了两个文件夹，一个是源码一个是编译后的文件&lt;/p&gt;
&lt;p&gt;&lt;img  
                     lazyload
                     src=&quot;/images/loading.svg&quot;
                     da</summary>
      
    
    
    
    <category term="CTF WP" scheme="http://example.com/categories/CTF-WP/"/>
    
    <category term="Re" scheme="http://example.com/categories/CTF-WP/Re/"/>
    
    <category term="安卓" scheme="http://example.com/categories/CTF-WP/Re/%E5%AE%89%E5%8D%93/"/>
    
    
  </entry>
  
  <entry>
    <title>JNIso文件混淆</title>
    <link href="http://example.com/2023/07/10/Re/%E5%AE%89%E5%8D%93/JNIso%E6%96%87%E4%BB%B6%E6%B7%B7%E6%B7%86/"/>
    <id>http://example.com/2023/07/10/Re/%E5%AE%89%E5%8D%93/JNIso%E6%96%87%E4%BB%B6%E6%B7%B7%E6%B7%86/</id>
    <published>2023-07-10T07:51:10.000Z</published>
    <updated>2023-07-10T07:52:53.000Z</updated>
    
    <content type="html"><![CDATA[<p>主要需要查看so文件的JNI_OnLoad函数，查看是如何进行注册的，对应的函数名是什么</p><p>类似于下图，就是将sub_1434注册为java内的com&#x2F;ctf&#x2F;findthekey&#x2F;MainActivity findthekey方法</p><div class="highlight-container" data-rel="C"><figure class="iseeu highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">jint <span class="title function_">JNI_OnLoad</span><span class="params">(JavaVM *vm, <span class="type">void</span> *reserved)</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="type">int</span> v2; <span class="comment">// r0</span></span><br><span class="line">  <span class="type">int</span> v4; <span class="comment">// [sp+24h] [bp-1Ch] BYREF</span></span><br><span class="line">  <span class="type">int</span> v5[<span class="number">3</span>]; <span class="comment">// [sp+28h] [bp-18h] BYREF</span></span><br><span class="line"></span><br><span class="line">  v4 = <span class="number">0</span>;</span><br><span class="line">  sub_15A0(vm, &amp;v4, <span class="number">65542</span>);</span><br><span class="line">  v5[<span class="number">2</span>] = (<span class="type">int</span>)sub_1434;</span><br><span class="line">  v5[<span class="number">1</span>] = (<span class="type">int</span>)byte_5120;                       <span class="comment">// (Ljava/lang/Object;)</span></span><br><span class="line">  v5[<span class="number">0</span>] = (<span class="type">int</span>)byte_510C;                       <span class="comment">// findthekey</span></span><br><span class="line">  v2 = sub_15D4(v4, byte_5140);                 <span class="comment">// &#x27;com/ctf/findthekey/MainActivity&#x27;</span></span><br><span class="line">  sub_15FE(v4, v2, v5, <span class="number">1</span>); <span class="comment">//此处应该是将com/ctf/findthekey/MainActivity的findthekey方法注册为sub_1434方法</span></span><br><span class="line">  <span class="keyword">return</span> <span class="number">65542</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;主要需要查看so文件的JNI_OnLoad函数，查看是如何进行注册的，对应的函数名是什么&lt;/p&gt;
&lt;p&gt;类似于下图，就是将sub_1434注册为java内的com&amp;#x2F;ctf&amp;#x2F;findthekey&amp;#x2F;MainActivity findthekey方法</summary>
      
    
    
    
    <category term="Re" scheme="http://example.com/categories/Re/"/>
    
    <category term="安卓" scheme="http://example.com/categories/Re/%E5%AE%89%E5%8D%93/"/>
    
    
  </entry>
  
  <entry>
    <title>SWPUCTF 2021 新生赛crypto1</title>
    <link href="http://example.com/2023/07/09/CTF%20WP/Crypto/SWPUCTF%202021%20%E6%96%B0%E7%94%9F%E8%B5%9Bcrypto1/"/>
    <id>http://example.com/2023/07/09/CTF%20WP/Crypto/SWPUCTF%202021%20%E6%96%B0%E7%94%9F%E8%B5%9Bcrypto1/</id>
    <published>2023-07-09T15:39:13.000Z</published>
    <updated>2023-07-09T15:45:17.000Z</updated>
    
    <content type="html"><![CDATA[<p>[<a class="link"   href="https://www.nssctf.cn/problem/412" >SWPUCTF 2021 新生赛]crypto1 | NSSCTF <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p><p>题干</p><div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> gmpy2 <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> *</span><br><span class="line">flag  = <span class="string">&#x27;****************************&#x27;</span></span><br><span class="line">flag = &#123;<span class="string">&quot;asfajgfbiagbwe&quot;</span>&#125;</span><br><span class="line">p = getPrime(<span class="number">2048</span>)</span><br><span class="line">q = getPrime(<span class="number">2048</span>)</span><br><span class="line">m1 = bytes_to_long(<span class="built_in">bytes</span>(flag.encode()))</span><br><span class="line"></span><br><span class="line">e1e2 = <span class="number">3087</span></span><br><span class="line">n = p*q</span><br><span class="line"><span class="built_in">print</span>()</span><br><span class="line"></span><br><span class="line">flag1 = <span class="built_in">pow</span>(m1,e1,n)</span><br><span class="line">flag2 = <span class="built_in">pow</span>(m1,e2,n)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;flag1= &#x27;</span>+<span class="built_in">str</span>(flag1))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;flag2= &#x27;</span>+<span class="built_in">str</span>(flag2))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;n= &#x27;</span>+<span class="built_in">str</span>(n))</span><br></pre></td></tr></table></figure></div><p>给了flag1和flag2，两个都i是对m加密对n取余，符合共模攻击的条件，同时e1e2满足条件e1e2&#x3D;3087</p><p>可以通过遍历所有值暴力求解，对结果进行限制</p><p>exp</p><div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">flag1= </span><br><span class="line">flag2= </span><br><span class="line">n= </span><br><span class="line"><span class="keyword">def</span> <span class="title function_">gongmogongji</span>(<span class="params">c1, c2, e1, e2,n</span>):</span><br><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> long_to_bytes</span><br><span class="line"><span class="keyword">from</span> gmpy2 <span class="keyword">import</span> gcdext,iroot</span><br><span class="line">gcd,x,y=gcdext(e1,e2)</span><br><span class="line">m=iroot((<span class="built_in">pow</span>(c1,x,n)*<span class="built_in">pow</span>(c2,y,n))%n,gcd)[<span class="number">0</span>]</span><br><span class="line"><span class="keyword">return</span> long_to_bytes(m) <span class="keyword">if</span> long_to_bytes(m)[:<span class="number">6</span>]==<span class="string">b&#x27;NSSCTF&#x27;</span><span class="keyword">else</span> <span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="number">3087</span>):</span><br><span class="line"><span class="keyword">if</span>(<span class="number">3087</span>%i==<span class="number">0</span>):</span><br><span class="line">j=<span class="number">3087</span>//i</span><br><span class="line"><span class="built_in">print</span>(gongmogongji(flag1,flag2,i,j,n),end=<span class="string">&#x27;&#x27;</span>)</span><br></pre></td></tr></table></figure></div><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/runwu2204/Blog_imgs/202307092345814.png"                      alt="image-20230709234504777"                ></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;[&lt;a class=&quot;link&quot;   href=&quot;https://www.nssctf.cn/problem/412&quot; &gt;SWPUCTF 2021 新生赛]crypto1 | NSSCTF &lt;i class=&quot;fa-regular fa-arrow-up-right-fro</summary>
      
    
    
    
    <category term="CTF WP" scheme="http://example.com/categories/CTF-WP/"/>
    
    <category term="Crypto" scheme="http://example.com/categories/CTF-WP/Crypto/"/>
    
    
  </entry>
  
  <entry>
    <title>Rsa共模攻击</title>
    <link href="http://example.com/2023/07/09/Crypto/Rsa%E5%85%B1%E6%A8%A1%E6%94%BB%E5%87%BB/"/>
    <id>http://example.com/2023/07/09/Crypto/Rsa%E5%85%B1%E6%A8%A1%E6%94%BB%E5%87%BB/</id>
    <published>2023-07-09T15:16:37.000Z</published>
    <updated>2023-07-19T12:01:10.000Z</updated>
    
    <content type="html"><![CDATA[<p>共模攻击主要利用的是，同一个明文通过两个互质的e对同一个n取余。（如下）</p><div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">c1 = <span class="built_in">pow</span>(m,e1,n)</span><br><span class="line">c2 = <span class="built_in">pow</span>(m,e2,n)</span><br></pre></td></tr></table></figure></div><p>数学上存在一个关系</p><div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">e1*x+e2*y=gcd(e1,e2) <span class="comment">#定有x y满足这个式子</span></span><br></pre></td></tr></table></figure></div><p>同时又有(前提 m&lt;n 否则会在取余时丢失数据)</p><div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">(m^e1)^x * (m^e2)^y %n = m^(e1*x+e2*y) %n</span><br><span class="line">  (c1^x) * (c2^y) %n   = m^gcd(e1,e2)  %n</span><br><span class="line"><span class="comment">#如果两边都开gcd(e1,e2)次方则 </span></span><br><span class="line">((c1^x) * (c2^y))^(<span class="number">1</span>/gcd(e1,e2))%n=m %n  </span><br></pre></td></tr></table></figure></div><p>exp:</p><div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">gongmogongji</span>(<span class="params">c1, c2, e1, e2,n</span>):</span><br><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> long_to_bytes</span><br><span class="line"><span class="keyword">from</span> gmpy2 <span class="keyword">import</span> gcdext,iroot</span><br><span class="line">gcd,x,y=gcdext(e1,e2)<span class="comment">#求出e1*x+e2*y=gcd(e1,e2)的解</span></span><br><span class="line">m=iroot((<span class="built_in">pow</span>(c1,x,n)*<span class="built_in">pow</span>(c2,y,n))%n,gcd)<span class="comment">#根据((c1^x) * (c2^y))^(1/gcd(e1,e2))%n=m %n  计算出对应的m</span></span><br><span class="line"><span class="keyword">return</span> long_to_bytes(m)<span class="comment">#将m转换回bytes数组</span></span><br><span class="line"></span><br></pre></td></tr></table></figure></div>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;共模攻击主要利用的是，同一个明文通过两个互质的e对同一个n取余。（如下）&lt;/p&gt;
&lt;div class=&quot;highlight-container&quot; data-rel=&quot;Python&quot;&gt;&lt;figure class=&quot;iseeu highlight python&quot;&gt;&lt;table</summary>
      
    
    
    
    <category term="Crypto" scheme="http://example.com/categories/Crypto/"/>
    
    
  </entry>
  
  <entry>
    <title>SWPUCTF 2021 新生赛astJS</title>
    <link href="http://example.com/2023/07/08/CTF%20WP/Re/js/ast/SWPUCTF%202021%20%E6%96%B0%E7%94%9F%E8%B5%9BastJS/"/>
    <id>http://example.com/2023/07/08/CTF%20WP/Re/js/ast/SWPUCTF%202021%20%E6%96%B0%E7%94%9F%E8%B5%9BastJS/</id>
    <published>2023-07-08T13:17:07.000Z</published>
    <updated>2023-07-08T14:08:22.000Z</updated>
    
    <content type="html"><![CDATA[<p>猜错了，可以通过escodegen包来生成对应的js代码</p><div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm i escodegen optionator  -g</span><br><span class="line">esgenerate &quot;对应的ast语法树json文件&quot;</span><br></pre></td></tr></table></figure></div><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/runwu2204/Blog_imgs/202307082207330.png"                      alt="image-20230708220700293"                ></p><p>直接运行此段代码即可</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/runwu2204/Blog_imgs/202307082208792.png"                      alt="image-20230708220815639"                ></p><p>AST抽象语法树是在js代码生成过程中产生的，似乎是不可直接生成代码的类似于python的字节码</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/runwu2204/Blog_imgs/202307082100647.png"                      alt="image-20230708210047544"                ></p><p>结构是层层递进的，外面是类似于程序名的东西，可以通过层层展开来寻找对应的同级的代码逻辑</p><p>下面是在body内第一个声明的，类型是函数声明(“FunctionDeclaration”)</p><div class="highlight-container" data-rel="Json"><figure class="iseeu highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;FunctionDeclaration&quot;</span><span class="punctuation">,</span><span class="comment">//类型函数声明</span></span><br><span class="line">  <span class="attr">&quot;start&quot;</span><span class="punctuation">:</span> <span class="number">18</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;end&quot;</span><span class="punctuation">:</span> <span class="number">177</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Identifier&quot;</span><span class="punctuation">,</span><span class="comment">//声明函数名为bE</span></span><br><span class="line">    <span class="attr">&quot;start&quot;</span><span class="punctuation">:</span> <span class="number">27</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;end&quot;</span><span class="punctuation">:</span> <span class="number">29</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;bE&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;expression&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;generator&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;async&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;params&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="comment">//声明函数的参数，此处声明了两个一个叫str，一个叫key，类型未知</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Identifier&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;start&quot;</span><span class="punctuation">:</span> <span class="number">30</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;end&quot;</span><span class="punctuation">:</span> <span class="number">33</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;str&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Identifier&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;start&quot;</span><span class="punctuation">:</span> <span class="number">34</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;end&quot;</span><span class="punctuation">:</span> <span class="number">37</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;key&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;body&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;BlockStatement&quot;</span><span class="punctuation">,</span><span class="comment">//一个代码块集合，是function的body的一部分，相当于function的代码块</span></span><br><span class="line">    <span class="attr">&quot;start&quot;</span><span class="punctuation">:</span> <span class="number">38</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;end&quot;</span><span class="punctuation">:</span> <span class="number">177</span><span class="punctuation">,</span><span class="comment">//定义代码块起始与终止位置</span></span><br><span class="line">    <span class="attr">&quot;body&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">      <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;VariableDeclaration&quot;</span><span class="punctuation">,</span><span class="comment">//此处有多层VariableDeclaration,相当于多个变量声明</span></span><br><span class="line">        <span class="attr">&quot;start&quot;</span><span class="punctuation">:</span> <span class="number">46</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;end&quot;</span><span class="punctuation">:</span> <span class="number">70</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;declarations&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">          <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;VariableDeclarator&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;start&quot;</span><span class="punctuation">:</span> <span class="number">50</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;end&quot;</span><span class="punctuation">:</span> <span class="number">69</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">              <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Identifier&quot;</span><span class="punctuation">,</span></span><br><span class="line">              <span class="attr">&quot;start&quot;</span><span class="punctuation">:</span> <span class="number">50</span><span class="punctuation">,</span></span><br><span class="line">              <span class="attr">&quot;end&quot;</span><span class="punctuation">:</span> <span class="number">53</span><span class="punctuation">,</span></span><br><span class="line">              <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;arr&quot;</span></span><br><span class="line">            <span class="punctuation">&#125;</span><span class="punctuation">,</span><span class="comment">//变量名为arr</span></span><br><span class="line">            <span class="attr">&quot;init&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span><span class="comment">//变量的初始化，为init包裹的内部的计算后的值</span></span><br><span class="line">              <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;CallExpression&quot;</span><span class="punctuation">,</span></span><br><span class="line">              <span class="attr">&quot;start&quot;</span><span class="punctuation">:</span> <span class="number">56</span><span class="punctuation">,</span></span><br><span class="line">              <span class="attr">&quot;end&quot;</span><span class="punctuation">:</span> <span class="number">69</span><span class="punctuation">,</span></span><br><span class="line">              <span class="attr">&quot;callee&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;MemberExpression&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;start&quot;</span><span class="punctuation">:</span> <span class="number">56</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;end&quot;</span><span class="punctuation">:</span> <span class="number">65</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;object&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                  <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Identifier&quot;</span><span class="punctuation">,</span></span><br><span class="line">                  <span class="attr">&quot;start&quot;</span><span class="punctuation">:</span> <span class="number">56</span><span class="punctuation">,</span></span><br><span class="line">                  <span class="attr">&quot;end&quot;</span><span class="punctuation">:</span> <span class="number">59</span><span class="punctuation">,</span></span><br><span class="line">                  <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;str&quot;</span></span><br><span class="line">                <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;property&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                  <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Identifier&quot;</span><span class="punctuation">,</span></span><br><span class="line">                  <span class="attr">&quot;start&quot;</span><span class="punctuation">:</span> <span class="number">60</span><span class="punctuation">,</span></span><br><span class="line">                  <span class="attr">&quot;end&quot;</span><span class="punctuation">:</span> <span class="number">65</span><span class="punctuation">,</span></span><br><span class="line">                  <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;split&quot;</span></span><br><span class="line">                <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;computed&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;optional&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span></span><br><span class="line">              <span class="punctuation">&#125;</span><span class="punctuation">,</span><span class="comment">//调用split函数</span></span><br><span class="line">              <span class="attr">&quot;arguments&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">                <span class="punctuation">&#123;</span></span><br><span class="line">                  <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Literal&quot;</span><span class="punctuation">,</span></span><br><span class="line">                  <span class="attr">&quot;start&quot;</span><span class="punctuation">:</span> <span class="number">66</span><span class="punctuation">,</span></span><br><span class="line">                  <span class="attr">&quot;end&quot;</span><span class="punctuation">:</span> <span class="number">68</span><span class="punctuation">,</span></span><br><span class="line">                  <span class="attr">&quot;value&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">                  <span class="attr">&quot;raw&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&#x27;&#x27;&quot;</span></span><br><span class="line">                <span class="punctuation">&#125;</span><span class="comment">//传入split函数的参数</span></span><br><span class="line">              <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">              <span class="attr">&quot;optional&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span></span><br><span class="line">            <span class="punctuation">&#125;</span></span><br><span class="line">          <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;kind&quot;</span><span class="punctuation">:</span> <span class="string">&quot;var&quot;</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span><span class="comment">//可翻译为arr=str.split()</span></span><br><span class="line">      <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;ReturnStatement&quot;</span><span class="punctuation">,</span><span class="comment">//代码块的返回值(此处只有一个代码块，相当于整个函数的返回值)</span></span><br><span class="line">        <span class="attr">&quot;start&quot;</span><span class="punctuation">:</span> <span class="number">77</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;end&quot;</span><span class="punctuation">:</span> <span class="number">171</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;argument&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;CallExpression&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;start&quot;</span><span class="punctuation">:</span> <span class="number">84</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;end&quot;</span><span class="punctuation">:</span> <span class="number">171</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;callee&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;MemberExpression&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;start&quot;</span><span class="punctuation">:</span> <span class="number">84</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;end&quot;</span><span class="punctuation">:</span> <span class="number">167</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;object&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">              <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;CallExpression&quot;</span><span class="punctuation">,</span></span><br><span class="line">              <span class="attr">&quot;start&quot;</span><span class="punctuation">:</span> <span class="number">84</span><span class="punctuation">,</span></span><br><span class="line">              <span class="attr">&quot;end&quot;</span><span class="punctuation">:</span> <span class="number">162</span><span class="punctuation">,</span></span><br><span class="line">              <span class="attr">&quot;callee&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;MemberExpression&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;start&quot;</span><span class="punctuation">:</span> <span class="number">84</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;end&quot;</span><span class="punctuation">:</span> <span class="number">91</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;object&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                  <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Identifier&quot;</span><span class="punctuation">,</span></span><br><span class="line">                  <span class="attr">&quot;start&quot;</span><span class="punctuation">:</span> <span class="number">84</span><span class="punctuation">,</span></span><br><span class="line">                  <span class="attr">&quot;end&quot;</span><span class="punctuation">:</span> <span class="number">87</span><span class="punctuation">,</span></span><br><span class="line">                  <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;arr&quot;</span></span><br><span class="line">                <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;property&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                  <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Identifier&quot;</span><span class="punctuation">,</span></span><br><span class="line">                  <span class="attr">&quot;start&quot;</span><span class="punctuation">:</span> <span class="number">88</span><span class="punctuation">,</span></span><br><span class="line">                  <span class="attr">&quot;end&quot;</span><span class="punctuation">:</span> <span class="number">91</span><span class="punctuation">,</span></span><br><span class="line">                  <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;map&quot;</span></span><br><span class="line">                <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;computed&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;optional&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span></span><br><span class="line">              <span class="punctuation">&#125;</span><span class="punctuation">,</span><span class="comment">//arr.map</span></span><br><span class="line">              <span class="attr">&quot;arguments&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">                <span class="punctuation">&#123;</span></span><br><span class="line">                  <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;ArrowFunctionExpression&quot;</span><span class="punctuation">,</span></span><br><span class="line">                  <span class="attr">&quot;start&quot;</span><span class="punctuation">:</span> <span class="number">92</span><span class="punctuation">,</span></span><br><span class="line">                  <span class="attr">&quot;end&quot;</span><span class="punctuation">:</span> <span class="number">161</span><span class="punctuation">,</span></span><br><span class="line">                  <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span><span class="punctuation">,</span></span><br><span class="line">                  <span class="attr">&quot;expression&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">                  <span class="attr">&quot;generator&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">                  <span class="attr">&quot;async&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">                  <span class="attr">&quot;params&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">                    <span class="punctuation">&#123;</span></span><br><span class="line">                      <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Identifier&quot;</span><span class="punctuation">,</span></span><br><span class="line">                      <span class="attr">&quot;start&quot;</span><span class="punctuation">:</span> <span class="number">93</span><span class="punctuation">,</span></span><br><span class="line">                      <span class="attr">&quot;end&quot;</span><span class="punctuation">:</span> <span class="number">94</span><span class="punctuation">,</span></span><br><span class="line">                      <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;i&quot;</span></span><br><span class="line">                    <span class="punctuation">&#125;</span></span><br><span class="line">                  <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">                  <span class="attr">&quot;body&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                    <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;BlockStatement&quot;</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;start&quot;</span><span class="punctuation">:</span> <span class="number">97</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;end&quot;</span><span class="punctuation">:</span> <span class="number">161</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;body&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">                      <span class="punctuation">&#123;</span></span><br><span class="line">                        <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;ReturnStatement&quot;</span><span class="punctuation">,</span></span><br><span class="line">                        <span class="attr">&quot;start&quot;</span><span class="punctuation">:</span> <span class="number">107</span><span class="punctuation">,</span></span><br><span class="line">                        <span class="attr">&quot;end&quot;</span><span class="punctuation">:</span> <span class="number">153</span><span class="punctuation">,</span></span><br><span class="line">                        <span class="attr">&quot;argument&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                          <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;CallExpression&quot;</span><span class="punctuation">,</span></span><br><span class="line">                          <span class="attr">&quot;start&quot;</span><span class="punctuation">:</span> <span class="number">114</span><span class="punctuation">,</span></span><br><span class="line">                          <span class="attr">&quot;end&quot;</span><span class="punctuation">:</span> <span class="number">153</span><span class="punctuation">,</span></span><br><span class="line">                          <span class="attr">&quot;callee&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                            <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;MemberExpression&quot;</span><span class="punctuation">,</span></span><br><span class="line">                            <span class="attr">&quot;start&quot;</span><span class="punctuation">:</span> <span class="number">114</span><span class="punctuation">,</span></span><br><span class="line">                            <span class="attr">&quot;end&quot;</span><span class="punctuation">:</span> <span class="number">133</span><span class="punctuation">,</span></span><br><span class="line">                            <span class="attr">&quot;object&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                              <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Identifier&quot;</span><span class="punctuation">,</span></span><br><span class="line">                              <span class="attr">&quot;start&quot;</span><span class="punctuation">:</span> <span class="number">114</span><span class="punctuation">,</span></span><br><span class="line">                              <span class="attr">&quot;end&quot;</span><span class="punctuation">:</span> <span class="number">120</span><span class="punctuation">,</span></span><br><span class="line">                              <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;String&quot;</span></span><br><span class="line">                            <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">                            <span class="attr">&quot;property&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span><span class="comment">//调用对应的类方法fromcharcode</span></span><br><span class="line">                              <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Identifier&quot;</span><span class="punctuation">,</span></span><br><span class="line">                              <span class="attr">&quot;start&quot;</span><span class="punctuation">:</span> <span class="number">121</span><span class="punctuation">,</span></span><br><span class="line">                              <span class="attr">&quot;end&quot;</span><span class="punctuation">:</span> <span class="number">133</span><span class="punctuation">,</span></span><br><span class="line">                              <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;fromCharCode&quot;</span></span><br><span class="line">                            <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">                            <span class="attr">&quot;computed&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">                            <span class="attr">&quot;optional&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span></span><br><span class="line">                          <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">                          <span class="attr">&quot;arguments&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">                            <span class="punctuation">&#123;</span></span><br><span class="line">                              <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;BinaryExpression&quot;</span><span class="punctuation">,</span></span><br><span class="line">                              <span class="attr">&quot;start&quot;</span><span class="punctuation">:</span> <span class="number">134</span><span class="punctuation">,</span></span><br><span class="line">                              <span class="attr">&quot;end&quot;</span><span class="punctuation">:</span> <span class="number">152</span><span class="punctuation">,</span></span><br><span class="line">                              <span class="attr">&quot;left&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                                <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;CallExpression&quot;</span><span class="punctuation">,</span></span><br><span class="line">                                <span class="attr">&quot;start&quot;</span><span class="punctuation">:</span> <span class="number">134</span><span class="punctuation">,</span></span><br><span class="line">                                <span class="attr">&quot;end&quot;</span><span class="punctuation">:</span> <span class="number">148</span><span class="punctuation">,</span></span><br><span class="line">                                <span class="attr">&quot;callee&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                                  <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;MemberExpression&quot;</span><span class="punctuation">,</span></span><br><span class="line">                                  <span class="attr">&quot;start&quot;</span><span class="punctuation">:</span> <span class="number">134</span><span class="punctuation">,</span></span><br><span class="line">                                  <span class="attr">&quot;end&quot;</span><span class="punctuation">:</span> <span class="number">146</span><span class="punctuation">,</span></span><br><span class="line">                                  <span class="attr">&quot;object&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                                    <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Identifier&quot;</span><span class="punctuation">,</span></span><br><span class="line">                                    <span class="attr">&quot;start&quot;</span><span class="punctuation">:</span> <span class="number">134</span><span class="punctuation">,</span></span><br><span class="line">                                    <span class="attr">&quot;end&quot;</span><span class="punctuation">:</span> <span class="number">135</span><span class="punctuation">,</span></span><br><span class="line">                                    <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;i&quot;</span></span><br><span class="line">                                  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">                                  <span class="attr">&quot;property&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                                    <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Identifier&quot;</span><span class="punctuation">,</span></span><br><span class="line">                                    <span class="attr">&quot;start&quot;</span><span class="punctuation">:</span> <span class="number">136</span><span class="punctuation">,</span></span><br><span class="line">                                    <span class="attr">&quot;end&quot;</span><span class="punctuation">:</span> <span class="number">146</span><span class="punctuation">,</span></span><br><span class="line">                                    <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;charCodeAt&quot;</span></span><br><span class="line">                                  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">                                  <span class="attr">&quot;computed&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">                                  <span class="attr">&quot;optional&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span></span><br><span class="line">                                <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">                                <span class="attr">&quot;arguments&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">                                <span class="attr">&quot;optional&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span></span><br><span class="line">                              <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">                              <span class="attr">&quot;operator&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^&quot;</span><span class="punctuation">,</span></span><br><span class="line">                              <span class="attr">&quot;right&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                                <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Identifier&quot;</span><span class="punctuation">,</span></span><br><span class="line">                                <span class="attr">&quot;start&quot;</span><span class="punctuation">:</span> <span class="number">149</span><span class="punctuation">,</span></span><br><span class="line">                                <span class="attr">&quot;end&quot;</span><span class="punctuation">:</span> <span class="number">152</span><span class="punctuation">,</span></span><br><span class="line">                                <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;key&quot;</span></span><br><span class="line">                              <span class="punctuation">&#125;</span><span class="comment">//调用了运算符^(异或)对前面的值做右异或(有些运算符可能不满足交换律需要注意计算方向)</span></span><br><span class="line">                            <span class="punctuation">&#125;</span></span><br><span class="line">                          <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">                          <span class="attr">&quot;optional&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span></span><br><span class="line">                        <span class="punctuation">&#125;</span></span><br><span class="line">                      <span class="punctuation">&#125;</span></span><br><span class="line">                    <span class="punctuation">]</span></span><br><span class="line">                  <span class="punctuation">&#125;</span></span><br><span class="line">                <span class="punctuation">&#125;</span></span><br><span class="line">              <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">              <span class="attr">&quot;optional&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span></span><br><span class="line">            <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;property&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">              <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Identifier&quot;</span><span class="punctuation">,</span></span><br><span class="line">              <span class="attr">&quot;start&quot;</span><span class="punctuation">:</span> <span class="number">163</span><span class="punctuation">,</span></span><br><span class="line">              <span class="attr">&quot;end&quot;</span><span class="punctuation">:</span> <span class="number">167</span><span class="punctuation">,</span></span><br><span class="line">              <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;join&quot;</span></span><br><span class="line">            <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;computed&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;optional&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span></span><br><span class="line">          <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;arguments&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">            <span class="punctuation">&#123;</span></span><br><span class="line">              <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Literal&quot;</span><span class="punctuation">,</span></span><br><span class="line">              <span class="attr">&quot;start&quot;</span><span class="punctuation">:</span> <span class="number">168</span><span class="punctuation">,</span></span><br><span class="line">              <span class="attr">&quot;end&quot;</span><span class="punctuation">:</span> <span class="number">170</span><span class="punctuation">,</span></span><br><span class="line">              <span class="attr">&quot;value&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">              <span class="attr">&quot;raw&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&#x27;&#x27;&quot;</span></span><br><span class="line">            <span class="punctuation">&#125;</span></span><br><span class="line">          <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;optional&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">      <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">]</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br></pre></td></tr></table></figure></div><p>上面的基本代码逻辑就是将每个传进去的字符异或上key并返回异或后的新的字符串</p><div class="highlight-container" data-rel="Json"><figure class="iseeu highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;ExpressionStatement&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;start&quot;</span><span class="punctuation">:</span> <span class="number">181</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;end&quot;</span><span class="punctuation">:</span> <span class="number">227</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;expression&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;CallExpression&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;start&quot;</span><span class="punctuation">:</span> <span class="number">181</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;end&quot;</span><span class="punctuation">:</span> <span class="number">227</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;callee&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;MemberExpression&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;start&quot;</span><span class="punctuation">:</span> <span class="number">181</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;end&quot;</span><span class="punctuation">:</span> <span class="number">192</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;object&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Identifier&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;start&quot;</span><span class="punctuation">:</span> <span class="number">181</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;end&quot;</span><span class="punctuation">:</span> <span class="number">188</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;console&quot;</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;property&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Identifier&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;start&quot;</span><span class="punctuation">:</span> <span class="number">189</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;end&quot;</span><span class="punctuation">:</span> <span class="number">192</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;log&quot;</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;computed&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;optional&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;arguments&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">      <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;CallExpression&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;start&quot;</span><span class="punctuation">:</span> <span class="number">193</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;end&quot;</span><span class="punctuation">:</span> <span class="number">226</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;callee&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Identifier&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;start&quot;</span><span class="punctuation">:</span> <span class="number">193</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;end&quot;</span><span class="punctuation">:</span> <span class="number">195</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;bE&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;arguments&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">          <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Literal&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;start&quot;</span><span class="punctuation">:</span> <span class="number">196</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;end&quot;</span><span class="punctuation">:</span> <span class="number">222</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;value&quot;</span><span class="punctuation">:</span> <span class="string">&quot;EXXH_MpjxBxYnjggrM~eerv&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;raw&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&#x27;EXXH_MpjxBxYnjggrM~eerv&#x27;&quot;</span></span><br><span class="line">          <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Literal&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;start&quot;</span><span class="punctuation">:</span> <span class="number">223</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;end&quot;</span><span class="punctuation">:</span> <span class="number">225</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;value&quot;</span><span class="punctuation">:</span> <span class="number">11</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;raw&quot;</span><span class="punctuation">:</span> <span class="string">&quot;11&quot;</span></span><br><span class="line">          <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;optional&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span></span><br><span class="line">      <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;optional&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure></div><p>此处基本就是调用之前的函数bE，对参数”EXXH_MpjxBxYnjggrM~eerv”，异或上11，再通过console(类)的log(方法)输出flag</p><p>所以此处可以直接通过异或就能得出对应的flag</p><p>因为此处其编码无法显示出对应的字符，直接通过二进制编辑器打开，查看其二进制编码</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/runwu2204/Blog_imgs/202307082149781.png"                      alt="image-20230708214959751"                ></p><p>exp:</p><div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">In [1]: a=[0x45 ,0x58 ,0x58 ,0x48 ,0x5F ,0x4D ,0x70 ,0x6A ,0x78 ,0x7F,0x42 ,0x78 ,0x59 ,0x6E ,0x6A ,0x67^M</span><br><span class="line">   ...: ,0x67 ,0x72,0x4D ,0x7E,0x65 ,0x65 ,0x72 ,0x76]</span><br><span class="line">   ...: ^M</span><br><span class="line">   ...:</span><br><span class="line"></span><br><span class="line">In [2]: str1=&#x27;&#x27;</span><br><span class="line">   ...: for i in a:</span><br><span class="line">   ...:     str1+=chr(i^11)</span><br><span class="line">   ...:</span><br><span class="line"></span><br><span class="line">In [3]: str1</span><br><span class="line">Out[3]: &#x27;NSSCTF&#123;astIsReallyFunny&#125;&#x27;</span><br></pre></td></tr></table></figure></div>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;猜错了，可以通过escodegen包来生成对应的js代码&lt;/p&gt;
&lt;div class=&quot;highlight-container&quot; data-rel=&quot;Shell&quot;&gt;&lt;figure class=&quot;iseeu highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td c</summary>
      
    
    
    
    <category term="CTF WP" scheme="http://example.com/categories/CTF-WP/"/>
    
    <category term="Re" scheme="http://example.com/categories/CTF-WP/Re/"/>
    
    <category term="js" scheme="http://example.com/categories/CTF-WP/Re/js/"/>
    
    <category term="ast" scheme="http://example.com/categories/CTF-WP/Re/js/ast/"/>
    
    
  </entry>
  
  <entry>
    <title>广东强网杯 2021 个人决赛findthekey</title>
    <link href="http://example.com/2023/07/05/CTF%20WP/Re/%E5%AE%89%E5%8D%93/%E5%B9%BF%E4%B8%9C%E5%BC%BA%E7%BD%91%E6%9D%AF%202021%20%E4%B8%AA%E4%BA%BA%E5%86%B3%E8%B5%9Bfindthekey/"/>
    <id>http://example.com/2023/07/05/CTF%20WP/Re/%E5%AE%89%E5%8D%93/%E5%B9%BF%E4%B8%9C%E5%BC%BA%E7%BD%91%E6%9D%AF%202021%20%E4%B8%AA%E4%BA%BA%E5%86%B3%E8%B5%9Bfindthekey/</id>
    <published>2023-07-05T03:43:17.000Z</published>
    <updated>2023-07-10T07:49:36.000Z</updated>
    
    <content type="html"><![CDATA[<p>只有一个activity组件</p><div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ctf.findthekey;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.app.AlertDialog;</span><br><span class="line"><span class="keyword">import</span> android.content.Context;</span><br><span class="line"><span class="keyword">import</span> android.os.Bundle;</span><br><span class="line"><span class="keyword">import</span> android.view.KeyEvent;</span><br><span class="line"><span class="keyword">import</span> android.view.View;</span><br><span class="line"><span class="keyword">import</span> android.widget.Button;</span><br><span class="line"><span class="keyword">import</span> android.widget.EditText;</span><br><span class="line"><span class="keyword">import</span> androidx.appcompat.app.AppCompatActivity;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* loaded from: classes.dex */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MainActivity</span> <span class="keyword">extends</span> <span class="title class_">AppCompatActivity</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">Context</span> <span class="variable">appContext</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">native</span> <span class="type">boolean</span> <span class="title function_">findthekey</span><span class="params">(Object obj)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">native</span> String <span class="title function_">stringFromJNI</span><span class="params">()</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">        System.loadLibrary(<span class="string">&quot;native-lib&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* JADX INFO: Access modifiers changed from: protected */</span></span><br><span class="line">    <span class="meta">@Override</span> <span class="comment">// androidx.appcompat.app.AppCompatActivity, androidx.fragment.app.FragmentActivity, androidx.core.app.ComponentActivity, android.app.Activity</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onCreate</span><span class="params">(Bundle savedInstanceState)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(C0273R.layout.activity_main);</span><br><span class="line">        appContext = getApplicationContext();</span><br><span class="line">        <span class="type">Button</span> <span class="variable">checkButton</span> <span class="operator">=</span> (Button) findViewById(C0273R.C0275id.checkButton);</span><br><span class="line">        <span class="keyword">final</span> <span class="type">EditText</span> <span class="variable">inputEditText</span> <span class="operator">=</span> (EditText) findViewById(C0273R.C0275id.inputEditText);</span><br><span class="line">        checkButton.setOnClickListener(<span class="keyword">new</span> <span class="title class_">View</span>.OnClickListener() &#123; <span class="comment">// from class: com.ctf.findthekey.MainActivity.1</span></span><br><span class="line">            <span class="meta">@Override</span> <span class="comment">// android.view.View.OnClickListener</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onClick</span><span class="params">(View view)</span> &#123;</span><br><span class="line">                <span class="type">String</span> <span class="variable">content</span> <span class="operator">=</span> inputEditText.getText().toString();</span><br><span class="line">                <span class="keyword">if</span> (MainActivity.<span class="built_in">this</span>.check(content)) &#123;</span><br><span class="line">                    <span class="keyword">new</span> <span class="title class_">AlertDialog</span>.Builder(<span class="built_in">this</span>).setTitle(<span class="string">&quot;result&quot;</span>).setMessage(<span class="string">&quot;Congratulations!&quot;</span>).show();</span><br><span class="line">                    inputEditText.setText(BuildConfig.FLAVOR);</span><br><span class="line">                    <span class="keyword">return</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">AlertDialog</span>.Builder(<span class="built_in">this</span>).setTitle(<span class="string">&quot;result&quot;</span>).setMessage(<span class="string">&quot;Sorry,try again?&quot;</span>).show();</span><br><span class="line">                inputEditText.setText(BuildConfig.FLAVOR);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span> <span class="comment">// androidx.appcompat.app.AppCompatActivity, android.app.Activity, android.view.KeyEvent.Callback</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">onKeyDown</span><span class="params">(<span class="type">int</span> keyCode, KeyEvent event)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (keyCode == <span class="number">4</span>) &#123;</span><br><span class="line">            System.exit(<span class="number">0</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">super</span>.onKeyDown(keyCode, event);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">check</span><span class="params">(String content)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> findthekey(content);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p>直接调用JNI进行明文校验</p><p>发现JNI中的所有函数都不符合对应的findthekey这个名字经过搜索发现是经过了混淆<a class="link"   href="https://blog.csdn.net/feibabeibei_beibei/article/details/52668534" >(41条消息) Android SO文件保护加固——混淆篇（一）_android so 混淆_不知世事的博客-CSDN博客 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p><p>需要看JNI_ONLoad(在loadlibrary时调用，用于注册函数之类的)</p><p>以下的byte_5120，byte_510C，byte_5140都在initarray时进行了修改(initarray在启动elf时就执行会先于JNI_OnLoad)</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/runwu2204/Blog_imgs/202307101537741.png"                      alt="image-20230710153725696"                ></p><div class="highlight-container" data-rel="C"><figure class="iseeu highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">jint <span class="title function_">JNI_OnLoad</span><span class="params">(JavaVM *vm, <span class="type">void</span> *reserved)</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="type">int</span> v2; <span class="comment">// r0</span></span><br><span class="line">  <span class="type">int</span> v4; <span class="comment">// [sp+24h] [bp-1Ch] BYREF</span></span><br><span class="line">  <span class="type">int</span> v5[<span class="number">3</span>]; <span class="comment">// [sp+28h] [bp-18h] BYREF</span></span><br><span class="line"></span><br><span class="line">  v4 = <span class="number">0</span>;</span><br><span class="line">  sub_15A0(vm, &amp;v4, <span class="number">65542</span>);</span><br><span class="line">  v5[<span class="number">2</span>] = (<span class="type">int</span>)sub_1434;</span><br><span class="line">  v5[<span class="number">1</span>] = (<span class="type">int</span>)byte_5120;                      </span><br><span class="line">  v5[<span class="number">0</span>] = (<span class="type">int</span>)byte_510C;                       </span><br><span class="line">  v2 = sub_15D4(v4, byte_5140);                </span><br><span class="line">  sub_15FE(v4, v2, v5, <span class="number">1</span>);</span><br><span class="line">  <span class="keyword">return</span> <span class="number">65542</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p>重新异或回去得出</p><div class="highlight-container" data-rel="C"><figure class="iseeu highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">jint <span class="title function_">JNI_OnLoad</span><span class="params">(JavaVM *vm, <span class="type">void</span> *reserved)</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="type">int</span> v2; <span class="comment">// r0</span></span><br><span class="line">  <span class="type">int</span> v4; <span class="comment">// [sp+24h] [bp-1Ch] BYREF</span></span><br><span class="line">  <span class="type">int</span> v5[<span class="number">3</span>]; <span class="comment">// [sp+28h] [bp-18h] BYREF</span></span><br><span class="line"></span><br><span class="line">  v4 = <span class="number">0</span>;</span><br><span class="line">  sub_15A0(vm, &amp;v4, <span class="number">65542</span>);</span><br><span class="line">  v5[<span class="number">2</span>] = (<span class="type">int</span>)sub_1434;</span><br><span class="line">  v5[<span class="number">1</span>] = (<span class="type">int</span>)byte_5120;                       <span class="comment">// (Ljava/lang/Object;)</span></span><br><span class="line">  v5[<span class="number">0</span>] = (<span class="type">int</span>)byte_510C;                       <span class="comment">// findthekey</span></span><br><span class="line">  v2 = sub_15D4(v4, byte_5140);                 <span class="comment">// &#x27;com/ctf/findthekey/MainActivity&#x27;</span></span><br><span class="line">  sub_15FE(v4, v2, v5, <span class="number">1</span>); <span class="comment">//此处应该是将com/ctf/findthekey/MainActivity的findthekey方法注册为sub_1434方法</span></span><br><span class="line">  <span class="keyword">return</span> <span class="number">65542</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p>所以直接查看sub_1434函数(此处将)</p><div class="highlight-container" data-rel="C"><figure class="iseeu highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">bool</span> __fastcall <span class="title function_">sub_1434</span><span class="params">(<span class="type">int</span> a1, <span class="type">int</span> a2, <span class="type">int</span> a3)</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="type">int</span> v4; <span class="comment">// [sp+1Ch] [bp-84h]</span></span><br><span class="line">  <span class="type">char</span> v5[<span class="number">100</span>]; <span class="comment">// [sp+30h] [bp-70h] BYREF</span></span><br><span class="line"></span><br><span class="line">  v4 = sub_14CC(a1, a3, <span class="number">0</span>);<span class="comment">//将java传入的a3字符串转化为c字符串</span></span><br><span class="line">  <span class="built_in">memset</span>(v5, <span class="number">0</span>, <span class="keyword">sizeof</span>(v5));</span><br><span class="line">  <span class="built_in">sprintf</span>(v5, byte_5109, v4);<span class="comment">//将字符串复制给v5</span></span><br><span class="line">  <span class="keyword">return</span> sub_13B0(v5);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p>又调用了sub_13B0</p><div class="highlight-container" data-rel="C"><figure class="iseeu highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">bool</span> __fastcall <span class="title function_">sub_13B0</span><span class="params">(<span class="type">const</span> <span class="type">char</span> *a1)</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="type">unsigned</span> __int8 *v1; <span class="comment">// r0</span></span><br><span class="line">  <span class="type">int</span> v3; <span class="comment">// [sp+8h] [bp-28h]</span></span><br><span class="line">  <span class="type">int</span> v5; <span class="comment">// [sp+20h] [bp-10h] BYREF</span></span><br><span class="line"></span><br><span class="line">  v5 = <span class="number">0</span>;</span><br><span class="line">  v3 = <span class="built_in">strlen</span>(a1);</span><br><span class="line">  v1 = sub_1214((<span class="type">int</span>)a1, v3, &amp;v5);</span><br><span class="line">  <span class="keyword">return</span> <span class="built_in">strcmp</span>((_BYTE *)dword_5164, v1) == <span class="number">0</span>;<span class="comment">//将v1字符串与dword_5164进行比较</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p>此处的sub_1214使用的是base64算法可以通过其中的一部分代码判断(每次取三字节，生成四字节)</p><div class="highlight-container" data-rel="C"><figure class="iseeu highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">v6[v5] = byte_50A0[*(<span class="type">unsigned</span> __int8 *)(a1 + v4) &gt;&gt; <span class="number">2</span>];</span><br><span class="line">v6[v5 + <span class="number">1</span>] = byte_50A0[(<span class="number">16</span> * (*(_BYTE *)(a1 + v4) &amp; <span class="number">3</span>)) | (*(<span class="type">unsigned</span> __int8 *)(a1 + v4 + <span class="number">1</span>) &gt;&gt; <span class="number">4</span>)];</span><br><span class="line">v6[v5 + <span class="number">2</span>] = byte_50A0[(<span class="number">4</span> * (*(_BYTE *)(a1 + v4 + <span class="number">1</span>) &amp; <span class="number">0xF</span>)) | (*(<span class="type">unsigned</span> __int8 *)(a1 + v4 + <span class="number">2</span>) &gt;&gt; <span class="number">6</span>)];</span><br><span class="line">v6[v5 + <span class="number">3</span>] = byte_50A0[*(_BYTE *)(a1 + v4 + <span class="number">2</span>) &amp; <span class="number">0x3F</span>];</span><br><span class="line">v4 += <span class="number">3</span>;</span><br><span class="line">v5 += <span class="number">4</span>;</span><br><span class="line"><span class="comment">//此处字典也被initarray的函数修改了</span></span><br><span class="line"><span class="comment">//实际值为byte_50A0=&quot;abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789-+\&quot;</span></span><br><span class="line"><span class="comment">//此处base64表与标准的base64表不同</span></span><br></pre></td></tr></table></figure></div><p>根据 strcmp((_BYTE *)dword_5164, v1) &#x3D;&#x3D; 0;可以得出dword_5164为base64后的密文</p><p>调查交叉引用，也被initarray的函数修改了</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/runwu2204/Blog_imgs/202307101547679.png"                      alt="image-20230710154752632"                ></p><p>实际值为zMXHz3T0AgLZAxn0AgvRzxL9</p><p>换表后得出了flag</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/runwu2204/Blog_imgs/202307101548731.png"                      alt="image-20230710154852630"                ></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;只有一个activity组件&lt;/p&gt;
&lt;div class=&quot;highlight-container&quot; data-rel=&quot;Java&quot;&gt;&lt;figure class=&quot;iseeu highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;p</summary>
      
    
    
    
    <category term="CTF WP" scheme="http://example.com/categories/CTF-WP/"/>
    
    <category term="Re" scheme="http://example.com/categories/CTF-WP/Re/"/>
    
    <category term="安卓" scheme="http://example.com/categories/CTF-WP/Re/%E5%AE%89%E5%8D%93/"/>
    
    
  </entry>
  
  <entry>
    <title>pyenv</title>
    <link href="http://example.com/2023/07/03/Re/python/pyenv/"/>
    <id>http://example.com/2023/07/03/Re/python/pyenv/</id>
    <published>2023-07-03T13:24:26.000Z</published>
    <updated>2023-07-05T15:42:50.000Z</updated>
    
    <content type="html"><![CDATA[<p>先装这几个依赖</p><div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install -y build-essential libssl-dev zlib1g-dev libncurses5-dev libgdbm-dev libnss3-dev libreadline-dev libffi-dev wget libsqlite3-dev libbz2-dev xz-utils tk-dev liblzma-dev llvm libncursesw5-dev xz-utils tk-dev libxml2-dev libxmlsec1-dev libffi-dev liblzma-dev build-essential</span><br></pre></td></tr></table></figure></div><p>然后再</p><div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/pyenv/pyenv ~/.pyenv#获取源码</span><br><span class="line">echo &#x27;export PYENV_ROOT=&quot;$HOME/.pyenv&quot;&#x27; &gt;&gt; ~/.bashrc</span><br><span class="line">echo &#x27;export PATH=&quot;$PYENV_ROOT/bin:$PATH&quot;&#x27; &gt;&gt; ~/.bashrc</span><br><span class="line">echo &#x27;eval &quot;$(pyenv init -)&quot;&#x27; &gt;&gt; ~/.bashrc#配置环境变量</span><br><span class="line">source ~/.bashrc#应用修改</span><br></pre></td></tr></table></figure></div><p>就可以输入进行验证了</p><div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pyenv version</span><br></pre></td></tr></table></figure></div>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;先装这几个依赖&lt;/p&gt;
&lt;div class=&quot;highlight-container&quot; data-rel=&quot;Shell&quot;&gt;&lt;figure class=&quot;iseeu highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;s</summary>
      
    
    
    
    <category term="Re" scheme="http://example.com/categories/Re/"/>
    
    <category term="python" scheme="http://example.com/categories/Re/python/"/>
    
    
  </entry>
  
  <entry>
    <title>文件头</title>
    <link href="http://example.com/2023/07/03/Misc/%E6%96%87%E4%BB%B6%E5%A4%B4/"/>
    <id>http://example.com/2023/07/03/Misc/%E6%96%87%E4%BB%B6%E5%A4%B4/</id>
    <published>2023-07-03T13:17:05.000Z</published>
    <updated>2023-07-06T01:12:56.000Z</updated>
    
    <content type="html"><![CDATA[<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">jpeg: 47 49 46 38 39 51</span><br><span class="line">zip: 50 4b 03 04</span><br><span class="line">gif: 47 49 46 38 39 61</span><br></pre></td></tr></table></figure></div>]]></content>
    
    
      
      
    <summary type="html">&lt;div class=&quot;highlight-container&quot; data-rel=&quot;Plaintext&quot;&gt;&lt;figure class=&quot;iseeu highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span cla</summary>
      
    
    
    
    <category term="Misc" scheme="http://example.com/categories/Misc/"/>
    
    
  </entry>
  
</feed>
